{"version":3,"sources":["renderer/index.less","renderer/App.less","renderer/pages lazy /^/.//.*//index/.jsx$/ groupOptions: {} namespace object","renderer/route/index.js","renderer/App.js","renderer/serviceWorker.js","renderer/index.js"],"names":["asyncComponent","page","loadable","routerConfig","path","exact","component","RouteWithSubRoutes","route","props","requestAuth","window","auth","pathname","search","state","referrer","location","href","App","map","isLocalhost","Boolean","hostname","match","register","config","process","navigator","publicUrl","URL","origin","addEventListener","swUrl","checkValidServiceWorker","serviceWorker","ready","then","console","log","registerValidSW","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","fetch","response","contentType","headers","get","status","indexOf","unregister","reload","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea3c81f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","var map = {\n\t\"./home/index.jsx\": [\n\t\t35,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 26;\nmodule.exports = webpackAsyncContext;","import React from 'react';\nimport {\n    Route,\n    Redirect\n} from 'react-router-dom'\nimport loadable from '@loadable/component'\n\nfunction asyncComponent(page) {\n    return loadable(() => import(/* webpackChunkName:\"[request]\" */`../pages/${page}/index.jsx`))\n}\nconst routerConfig = [\n    {\n        path: '/',\n        exact: true,\n        component: asyncComponent('home'),\n    },\n]\n\n\n\nconst RouteWithSubRoutes = (route) => (\n    <Route\n        path={route.path}\n        exact= {route.exact}\n        render={(props) => {\n            if (route.requestAuth) {\n                if (window.auth) {\n                    return <route.component\n                        {...props}\n                        {...route}\n                    />\n                } else {\n                    return <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            search: \"?utm=your+face\",\n                            state: { referrer: window.location.href }\n                        }}\n                    />\n                }\n            }\n\n            return <route.component\n                {...props}\n                {...route}\n            />\n\n        }}\n    />\n)\nexport  { routerConfig, RouteWithSubRoutes }","import React from 'react';\nimport './App.less';\nimport { routerConfig, RouteWithSubRoutes } from './route';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      {\n        routerConfig.map(route => (\n          <RouteWithSubRoutes key={route.path} {...route} />\n        ))\n      }\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}