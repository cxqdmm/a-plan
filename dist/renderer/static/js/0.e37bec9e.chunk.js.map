{"version":3,"sources":["../node_modules/nedb/lib/cursor.js","../node_modules/nedb/lib/executor.js","../node_modules/nedb/index.js","../node_modules/underscore/underscore.js","../node_modules/nedb/browser-version/browser-specific/lib/storage.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/nedb/browser-version/browser-specific/lib/customUtils.js","../node_modules/nedb/lib/datastore.js","../node_modules/nedb/lib/model.js","../node_modules/nedb/lib/persistence.js","../node_modules/binary-search-tree/lib/customUtils.js","../node_modules/binary-search-tree/lib/bst.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/nedb/node_modules/async/lib/async.js","renderer/redux/store.js","renderer/redux/observable.js","renderer/redux/module.js","renderer/redux/redux.js","renderer/redux/index.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/localforage/dist/localforage.js","../node_modules/binary-search-tree/lib/avltree.js","../node_modules/nedb/lib/indexes.js","../node_modules/binary-search-tree/index.js","renderer/util/nedb.js"],"names":["model","__webpack_require__","_","Cursor","db","query","execFn","this","prototype","limit","_limit","skip","_skip","sort","sortQuery","_sort","projection","_projection","project","candidates","keepId","action","keys","res","self","undefined","Object","length","_id","omit","forEach","k","Error","candidate","toPush","$set","getDotValue","modify","$unset","push","_exec","_callback","i","key","added","skipped","error","callback","getCandidates","err","match","criteria","direction","a","b","criterion","compare","compareThings","compareStrings","slice","e","exec","executor","fn","arguments","module","exports","async","Executor","buffer","ready","queue","task","cb","newArguments","lastArg","setImmediate","process","nextTick","apply","forceQueuing","processBuffer","Datastore","root","previousUnderscore","breaker","ArrayProto","Array","ObjProto","FuncProto","Function","concat","toString","hasOwnProperty","nativeForEach","nativeMap","map","nativeReduce","reduce","nativeReduceRight","reduceRight","nativeFilter","filter","nativeEvery","every","nativeSome","some","nativeIndexOf","indexOf","nativeLastIndexOf","lastIndexOf","nativeIsArray","isArray","nativeKeys","nativeBind","bind","obj","_wrapped","VERSION","each","iterator","context","l","call","has","collect","results","value","index","list","reduceError","foldl","inject","memo","initial","TypeError","foldr","find","detect","result","any","select","reject","all","identity","contains","include","target","invoke","method","args","isFunc","isFunction","pluck","where","attrs","first","isEmpty","findWhere","max","Math","Infinity","computed","min","shuffle","rand","shuffled","random","lookupIterator","sortBy","left","right","group","behavior","groupBy","countBy","sortedIndex","array","low","high","mid","toArray","values","size","head","take","n","guard","last","rest","tail","drop","compact","flatten","shallow","input","output","without","difference","uniq","unique","isSorted","seen","union","intersection","item","other","zip","object","from","hasIndex","range","start","stop","step","len","ceil","idx","func","partial","bindAll","funcs","functions","f","memoize","hasher","delay","wait","setTimeout","defer","throttle","timeout","previous","later","Date","now","remaining","clearTimeout","debounce","immediate","callNow","once","ran","wrap","wrapper","compose","after","times","pairs","invert","methods","names","extend","source","prop","pick","copy","defaults","clone","isObject","tap","interceptor","isEqual","eq","aStack","bStack","className","String","global","multiline","ignoreCase","aCtor","constructor","bCtor","pop","isString","isElement","nodeType","name","isArguments","isFinite","isNaN","parseFloat","isNumber","isBoolean","isNull","isUndefined","noConflict","accum","floor","entityMap","escape","&","<",">","\"","'","/","unescape","entityRegexes","RegExp","join","string","replace","property","mixin","idCounter","uniqueId","prefix","id","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n","\t"," "," ","escaper","template","text","data","settings","render","matcher","offset","variable","chain","_chain","localforage","writeFile","filename","contents","options","setItem","config","storeName","exists","getItem","rename","newFilename","removeItem","crashSafeWriteFile","appendFile","toAppend","readFile","unlink","mkdirp","dir","ensureDatafileIntegrity","asyncGeneratorStep","gen","resolve","_next","_throw","arg","info","done","Promise","then","_asyncToGenerator","d","__webpack_exports__","uid","uint8","temp","num","lookup","extraBytes","byteArrayToBase64","r","bytes","randomBytes","customUtils","Index","util","Persistence","inMemoryOnly","autoload","timestampData","persistence","nodeWebkitAppName","afterSerialization","beforeDeserialization","corruptAlertThreshold","indexes","fieldName","ttlIndexes","loadDatabase","onload","inherits","EventEmitter","getAllData","getAll","resetIndexes","newData","reset","ensureIndex","missingFieldName","expireAfterSeconds","insert","persistNewState","$$indexCreated","removeIndex","$$indexRemoved","addToIndexes","doc","failingIndex","remove","removeFromIndexes","updateIndexes","oldDoc","newDoc","update","revertUpdate","dontExpireStaleDocs","usableQueryKeys","indexNames","waterfall","isDate","getMatching","$in","getBetweenBounds","docs","expiredDocsIds","validDocs","ttlIndexesFieldNames","valid","getTime","eachSeries","_remove","_insert","preparedDoc","prepareDocumentForInsertion","_insertInCache","deepCopy","createNewId","tentativeId","createdAt","updatedAt","checkObject","_insertMultipleDocsInCache","preparedDocs","failingI","count","cursor","findOne","_update","updateQuery","multi","upsert","numReplaced","toBeInserted","modifiedDoc","modifications","updatedDocs","returnUpdatedDocs","updatedDocsDC","numRemoved","removedDocs","$$deleted","modifierFunctions","lastStepModifierFunctions","comparisonFunctions","logicalOperators","arrayComparisonFunctions","checkKey","v","o","strictKeys","isPrimitiveType","compareNSB","compareArrays","comp","_compareStrings","aKeys","bKeys","field","objs","fieldParts","split","parseInt","areThingsEqual","areComparable","queryKeys","queryKey","queryValue","matchQueryPart","needAKey","treatObjAsValue","firstChars","dollarFirstChars","objValue","isRegExp","c","$regex","$push","$slice","$each","end","$addToSet","addToSet","$pop","$pull","arr","splice","$inc","$max","$min","modifier","createModifierFunction","$lt","$lte","$gt","$gte","$ne","$nin","test","$exists","$size","$elemMatch","$or","$and","$not","$where","serialize","JSON","stringify","$$date","deserialize","rawData","parse","modifiers","m","storage","path","j","randomString","charAt","s","console","log","getNWAppFilename","ensureDirectoryExists","appName","relativeFilename","home","platform","NODE_ENV","PUBLIC_URL","LOCALAPPDATA","APPDATA","HOME","persistCachedDatabase","toPersist","sparse","emit","compactDatafile","setAutocompactionInterval","interval","realInterval","stopAutocompaction","autocompactionIntervalId","setInterval","clearInterval","newDocs","treatRawData","dataById","tdata","corruptItems","dirname","treatedData","getRandomArray","next","defaultCompareKeysFunction","defaultCheckValueEquality","BinarySearchTree","parent","compareKeys","checkValueEquality","append","getMaxKeyDescendant","getMaxKey","getMinKeyDescendant","getMinKey","checkAllNodesFullfillCondition","checkNodeOrdering","checkInternalPointers","checkIsBST","getNumberOfKeys","createSimilar","createLeftChild","leftChild","createRightChild","rightChild","errorType","search","getLowerBoundMatcher","getUpperBoundMatcher","betweenBounds","lbm","ubm","deleteIfLeaf","deleteIfOnlyOneChild","child","delete","replaceWith","executeOnEveryNode","prettyPrint","printData","spacing","runtime","Op","hasOwn","$Symbol","Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","Context","_invoke","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","iter","reverse","skipTempReset","prev","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","__WEBPACK_AMD_DEFINE_RESULT__","previous_async","only_once","called","_each","_map","x","_keys","completed","iterate","forEachSeries","eachLimit","_eachLimit","forEachLimit","started","running","replenish","doParallel","doSeries","_asyncMap","eachfn","mapSeries","mapLimit","_mapLimit","doParallelLimit","reversed","_filter","filterSeries","selectSeries","_reject","rejectSeries","_detect","main_callback","detectSeries","auto","tasks","listeners","addListener","unshift","taskComplete","taskCallback","safeResults","rkey","requires","abs","listener","removeListener","wrapIterator","_parallel","parallel","parallelLimit","series","makeCallback","_concat","y","concatSeries","whilst","doWhilst","until","doUntil","worker","concurrency","q","pos","saturated","workers","empty","drain","shift","cargo","payload","working","ts","ds","_console_fn","queues","memoized","unmemoized","unmemoize","counter","timesSeries","fns","that","newargs","nextargs","_applyEach","go","applyEach","applyEachSeries","forever","_state","Store","props","_this","classCallCheck","processReducer","out","_modules","observableProps","getPropValue","_useState","useState","_useState2","slicedToArray","setState","setPropDispatch","modules","_context","newState","LazyInitializeSymbol","pendingDecorators","$store","cacheDescriptor","initializeInstance","decorators","addHiddenProp","propertyCreator","descriptor","propName","defineProperty","enumerable","writable","configurable","ObservableObjectAdministration","$value","Map","$dispatch","get","isImmutable","toJS","immutableValue","fromJS","set","dispatch","read","write","observable","initialValue","initializer","adm","asObservableObject","addObservableProp","inheritedDecorators","assign","decoratorTarget","createPropertyInitializerDescriptor","Module","_module","setDispatch","setObservablePropDispatch","getOwnPropertyNames","createStore","dataModule","elem","connect","component","flag","useContext","objectSpread","useRedux","store","Component","react_default","createElement","Provider","redux_useRedux","redux_connect","require","t","u","code","1","_dereq_","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","observer","element","document","createTextNode","observe","characterData","MessageChannel","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","channel","port1","onmessage","port2","postMessage","oldQueue","window","2","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","resolver","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","returnValue","getThen","thenable","onError","onSuccess","status","reason","resolved","allResolver","outValue","race","response","3","4","_typeof","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","parts","properties","Blob","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","getBlob","Promise$1","executeCallback","executeTwoCallbacks","errorCallback","normalizeKey","warn","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_checkBlobSupport","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","navigator","userAgent","matchedEdge","_checkBlobSupportWithoutCaching","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","_rejectReadiness","_getConnection","upgradeNeeded","forages","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","arrayBuff","bin","buf","ArrayBuffer","Uint8Array","charCodeAt","_binStringToArrayBuffer","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","createTransaction","mode","retries","tx","forage","_tryReconnect","asyncStorage","_driver","_initStorage","initPromises","ignoreErrors","_defaultConfig","_support","isSafari","openDatabase","hasFetch","fetch","IDBKeyRange","isIndexedDBValid","req","openCursor","iterationNumber","blobSupport","reader","FileReader","onloadend","base64","btoa","readAsBinaryString","clear","advanced","advance","dropInstance","currentConfig","isCurrentDb","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","_forage","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","bufferToString","base64String","substring","localforageSerializer","valueType","marker","fileReader","str","readAsArrayBuffer","blobType","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","executeSql","tryExecuteSql","sqlStatement","SYNTAX_ERR","rows","webSQLStorage","dbInfoPromise","description","serializer","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","storeNames","getAllStoreNames","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","localStorage","checkIfLocalStorageThrows","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","includes","searchElement","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","_key","LocalForage","driverTypeKey","instance","Constructor","_classCallCheck","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","driverObject","complianceError","driverMethods","driverMethodName","isRequired","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","oldDriverSetDone","currentDriverIndex","driverPromiseLoop","initDriver","supports","libraryMethodsAndProperties","createInstance","localforage_js","AVLTree","tree","_AVLTree","checkHeightCorrect","leftH","rightH","height","balanceFactor","checkBalanceFactors","checkIsAVLT","super_","rightRotation","ah","bh","ch","leftRotation","rightTooSmall","leftTooSmall","rebalanceAlongPath","rotated","newRoot","insertPath","currentNode","newTree","deletePath","projectForUnique","elt","treeOptions","insertMultipleDocs","updateMultipleDocs","revert","pair","_res","node","DbInstance","_Users_mac_Documents_cxq_web_a_plan_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","Datesotre","_this2","_this3","_this4","Nedb","_dbMap"],"mappings":"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","file":"static/js/0.e37bec9e.chunk.js","sourcesContent":["/**\n * Manage access to data, be it to find, update or remove it\n */\nvar model = require('./model'),\n    _ = require('underscore');\n/**\n * Create a new cursor for this collection\n * @param {Datastore} db - The datastore this cursor is bound to\n * @param {Query} query - The query this cursor will operate on\n * @param {Function} execFn - Handler to be executed after cursor has found the results and before the callback passed to find/findOne/update/remove\n */\n\n\nfunction Cursor(db, query, execFn) {\n  this.db = db;\n  this.query = query || {};\n\n  if (execFn) {\n    this.execFn = execFn;\n  }\n}\n/**\n * Set a limit to the number of results\n */\n\n\nCursor.prototype.limit = function (limit) {\n  this._limit = limit;\n  return this;\n};\n/**\n * Skip a the number of results\n */\n\n\nCursor.prototype.skip = function (skip) {\n  this._skip = skip;\n  return this;\n};\n/**\n * Sort results of the query\n * @param {SortQuery} sortQuery - SortQuery is { field: order }, field can use the dot-notation, order is 1 for ascending and -1 for descending\n */\n\n\nCursor.prototype.sort = function (sortQuery) {\n  this._sort = sortQuery;\n  return this;\n};\n/**\n * Add the use of a projection\n * @param {Object} projection - MongoDB-style projection. {} means take all fields. Then it's { key1: 1, key2: 1 } to take only key1 and key2\n *                              { key1: 0, key2: 0 } to omit only key1 and key2. Except _id, you can't mix takes and omits\n */\n\n\nCursor.prototype.projection = function (projection) {\n  this._projection = projection;\n  return this;\n};\n/**\n * Apply the projection\n */\n\n\nCursor.prototype.project = function (candidates) {\n  var res = [],\n      self = this,\n      keepId,\n      action,\n      keys;\n\n  if (this._projection === undefined || Object.keys(this._projection).length === 0) {\n    return candidates;\n  }\n\n  keepId = this._projection._id === 0 ? false : true;\n  this._projection = _.omit(this._projection, '_id'); // Check for consistency\n\n  keys = Object.keys(this._projection);\n  keys.forEach(function (k) {\n    if (action !== undefined && self._projection[k] !== action) {\n      throw new Error(\"Can't both keep and omit fields except for _id\");\n    }\n\n    action = self._projection[k];\n  }); // Do the actual projection\n\n  candidates.forEach(function (candidate) {\n    var toPush;\n\n    if (action === 1) {\n      // pick-type projection\n      toPush = {\n        $set: {}\n      };\n      keys.forEach(function (k) {\n        toPush.$set[k] = model.getDotValue(candidate, k);\n\n        if (toPush.$set[k] === undefined) {\n          delete toPush.$set[k];\n        }\n      });\n      toPush = model.modify({}, toPush);\n    } else {\n      // omit-type projection\n      toPush = {\n        $unset: {}\n      };\n      keys.forEach(function (k) {\n        toPush.$unset[k] = true;\n      });\n      toPush = model.modify(candidate, toPush);\n    }\n\n    if (keepId) {\n      toPush._id = candidate._id;\n    } else {\n      delete toPush._id;\n    }\n\n    res.push(toPush);\n  });\n  return res;\n};\n/**\n * Get all matching elements\n * Will return pointers to matched elements (shallow copies), returning full copies is the role of find or findOne\n * This is an internal function, use exec which uses the executor\n *\n * @param {Function} callback - Signature: err, results\n */\n\n\nCursor.prototype._exec = function (_callback) {\n  var res = [],\n      added = 0,\n      skipped = 0,\n      self = this,\n      error = null,\n      i,\n      keys,\n      key;\n\n  function callback(error, res) {\n    if (self.execFn) {\n      return self.execFn(error, res, _callback);\n    } else {\n      return _callback(error, res);\n    }\n  }\n\n  this.db.getCandidates(this.query, function (err, candidates) {\n    if (err) {\n      return callback(err);\n    }\n\n    try {\n      for (i = 0; i < candidates.length; i += 1) {\n        if (model.match(candidates[i], self.query)) {\n          // If a sort is defined, wait for the results to be sorted before applying limit and skip\n          if (!self._sort) {\n            if (self._skip && self._skip > skipped) {\n              skipped += 1;\n            } else {\n              res.push(candidates[i]);\n              added += 1;\n\n              if (self._limit && self._limit <= added) {\n                break;\n              }\n            }\n          } else {\n            res.push(candidates[i]);\n          }\n        }\n      }\n    } catch (err) {\n      return callback(err);\n    } // Apply all sorts\n\n\n    if (self._sort) {\n      keys = Object.keys(self._sort); // Sorting\n\n      var criteria = [];\n\n      for (i = 0; i < keys.length; i++) {\n        key = keys[i];\n        criteria.push({\n          key: key,\n          direction: self._sort[key]\n        });\n      }\n\n      res.sort(function (a, b) {\n        var criterion, compare, i;\n\n        for (i = 0; i < criteria.length; i++) {\n          criterion = criteria[i];\n          compare = criterion.direction * model.compareThings(model.getDotValue(a, criterion.key), model.getDotValue(b, criterion.key), self.db.compareStrings);\n\n          if (compare !== 0) {\n            return compare;\n          }\n        }\n\n        return 0;\n      }); // Applying limit and skip\n\n      var limit = self._limit || res.length,\n          skip = self._skip || 0;\n      res = res.slice(skip, skip + limit);\n    } // Apply projection\n\n\n    try {\n      res = self.project(res);\n    } catch (e) {\n      error = e;\n      res = undefined;\n    }\n\n    return callback(error, res);\n  });\n};\n\nCursor.prototype.exec = function () {\n  this.db.executor.push({\n    this: this,\n    fn: this._exec,\n    arguments: arguments\n  });\n}; // Interface\n\n\nmodule.exports = Cursor;","/**\n * Responsible for sequentially executing actions on the database\n */\nvar async = require('async');\n\nfunction Executor() {\n  this.buffer = [];\n  this.ready = false; // This queue will execute all commands, one-by-one in order\n\n  this.queue = async.queue(function (task, cb) {\n    var newArguments = []; // task.arguments is an array-like object on which adding a new field doesn't work, so we transform it into a real array\n\n    for (var i = 0; i < task.arguments.length; i += 1) {\n      newArguments.push(task.arguments[i]);\n    }\n\n    var lastArg = task.arguments[task.arguments.length - 1]; // Always tell the queue task is complete. Execute callback if any was given.\n\n    if (typeof lastArg === 'function') {\n      // Callback was supplied\n      newArguments[newArguments.length - 1] = function () {\n        if (typeof setImmediate === 'function') {\n          setImmediate(cb);\n        } else {\n          process.nextTick(cb);\n        }\n\n        lastArg.apply(null, arguments);\n      };\n    } else if (!lastArg && task.arguments.length !== 0) {\n      // false/undefined/null supplied as callbback\n      newArguments[newArguments.length - 1] = function () {\n        cb();\n      };\n    } else {\n      // Nothing supplied as callback\n      newArguments.push(function () {\n        cb();\n      });\n    }\n\n    task.fn.apply(task.this, newArguments);\n  }, 1);\n}\n/**\n * If executor is ready, queue task (and process it immediately if executor was idle)\n * If not, buffer task for later processing\n * @param {Object} task\n *                 task.this - Object to use as this\n *                 task.fn - Function to execute\n *                 task.arguments - Array of arguments, IMPORTANT: only the last argument may be a function (the callback)\n *                                                                 and the last argument cannot be false/undefined/null\n * @param {Boolean} forceQueuing Optional (defaults to false) force executor to queue task even if it is not ready\n */\n\n\nExecutor.prototype.push = function (task, forceQueuing) {\n  if (this.ready || forceQueuing) {\n    this.queue.push(task);\n  } else {\n    this.buffer.push(task);\n  }\n};\n/**\n * Queue all tasks in buffer (in the same order they came in)\n * Automatically sets executor as ready\n */\n\n\nExecutor.prototype.processBuffer = function () {\n  var i;\n  this.ready = true;\n\n  for (i = 0; i < this.buffer.length; i += 1) {\n    this.queue.push(this.buffer[i]);\n  }\n\n  this.buffer = [];\n}; // Interface\n\n\nmodule.exports = Executor;","var Datastore = require('./lib/datastore');\n\nmodule.exports = Datastore;","//     Underscore.js 1.4.4\n//     http://underscorejs.org\n//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n//     Underscore may be freely distributed under the MIT license.\n(function () {\n  // Baseline setup\n  // --------------\n  // Establish the root object, `window` in the browser, or `global` on the server.\n  var root = this; // Save the previous value of the `_` variable.\n\n  var previousUnderscore = root._; // Establish the object that gets returned to break out of a loop iteration.\n\n  var breaker = {}; // Save bytes in the minified (but not gzipped) version:\n\n  var ArrayProto = Array.prototype,\n      ObjProto = Object.prototype,\n      FuncProto = Function.prototype; // Create quick reference variables for speed access to core prototypes.\n\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      concat = ArrayProto.concat,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty; // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n\n  var nativeForEach = ArrayProto.forEach,\n      nativeMap = ArrayProto.map,\n      nativeReduce = ArrayProto.reduce,\n      nativeReduceRight = ArrayProto.reduceRight,\n      nativeFilter = ArrayProto.filter,\n      nativeEvery = ArrayProto.every,\n      nativeSome = ArrayProto.some,\n      nativeIndexOf = ArrayProto.indexOf,\n      nativeLastIndexOf = ArrayProto.lastIndexOf,\n      nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeBind = FuncProto.bind; // Create a safe reference to the Underscore object for use below.\n\n  var _ = function _(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  }; // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object via a string identifier,\n  // for Closure Compiler \"advanced\" mode.\n\n\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n\n    exports._ = _;\n  } else {\n    root._ = _;\n  } // Current version.\n\n\n  _.VERSION = '1.4.4'; // Collection Functions\n  // --------------------\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles objects with the built-in `forEach`, arrays, and raw objects.\n  // Delegates to **ECMAScript 5**'s native `forEach` if available.\n\n  var each = _.each = _.forEach = function (obj, iterator, context) {\n    if (obj == null) return;\n\n    if (nativeForEach && obj.forEach === nativeForEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n      for (var i = 0, l = obj.length; i < l; i++) {\n        if (iterator.call(context, obj[i], i, obj) === breaker) return;\n      }\n    } else {\n      for (var key in obj) {\n        if (_.has(obj, key)) {\n          if (iterator.call(context, obj[key], key, obj) === breaker) return;\n        }\n      }\n    }\n  }; // Return the results of applying the iterator to each element.\n  // Delegates to **ECMAScript 5**'s native `map` if available.\n\n\n  _.map = _.collect = function (obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n    each(obj, function (value, index, list) {\n      results[results.length] = iterator.call(context, value, index, list);\n    });\n    return results;\n  };\n\n  var reduceError = 'Reduce of empty array with no initial value'; // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\n\n  _.reduce = _.foldl = _.inject = function (obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n\n    if (nativeReduce && obj.reduce === nativeReduce) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n    }\n\n    each(obj, function (value, index, list) {\n      if (!initial) {\n        memo = value;\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, value, index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  }; // The right-associative version of reduce, also known as `foldr`.\n  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\n\n\n  _.reduceRight = _.foldr = function (obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n    }\n\n    var length = obj.length;\n\n    if (length !== +length) {\n      var keys = _.keys(obj);\n\n      length = keys.length;\n    }\n\n    each(obj, function (value, index, list) {\n      index = keys ? keys[--length] : --length;\n\n      if (!initial) {\n        memo = obj[index];\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, obj[index], index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  }; // Return the first value which passes a truth test. Aliased as `detect`.\n\n\n  _.find = _.detect = function (obj, iterator, context) {\n    var result;\n    any(obj, function (value, index, list) {\n      if (iterator.call(context, value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  }; // Return all the elements that pass a truth test.\n  // Delegates to **ECMAScript 5**'s native `filter` if available.\n  // Aliased as `select`.\n\n\n  _.filter = _.select = function (obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);\n    each(obj, function (value, index, list) {\n      if (iterator.call(context, value, index, list)) results[results.length] = value;\n    });\n    return results;\n  }; // Return all the elements for which a truth test fails.\n\n\n  _.reject = function (obj, iterator, context) {\n    return _.filter(obj, function (value, index, list) {\n      return !iterator.call(context, value, index, list);\n    }, context);\n  }; // Determine whether all of the elements match a truth test.\n  // Delegates to **ECMAScript 5**'s native `every` if available.\n  // Aliased as `all`.\n\n\n  _.every = _.all = function (obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = true;\n    if (obj == null) return result;\n    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);\n    each(obj, function (value, index, list) {\n      if (!(result = result && iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  }; // Determine if at least one element in the object matches a truth test.\n  // Delegates to **ECMAScript 5**'s native `some` if available.\n  // Aliased as `any`.\n\n\n  var any = _.some = _.any = function (obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = false;\n    if (obj == null) return result;\n    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);\n    each(obj, function (value, index, list) {\n      if (result || (result = iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  }; // Determine if the array or object contains a given value (using `===`).\n  // Aliased as `include`.\n\n\n  _.contains = _.include = function (obj, target) {\n    if (obj == null) return false;\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n    return any(obj, function (value) {\n      return value === target;\n    });\n  }; // Invoke a method (with arguments) on every item in a collection.\n\n\n  _.invoke = function (obj, method) {\n    var args = slice.call(arguments, 2);\n\n    var isFunc = _.isFunction(method);\n\n    return _.map(obj, function (value) {\n      return (isFunc ? method : value[method]).apply(value, args);\n    });\n  }; // Convenience version of a common use case of `map`: fetching a property.\n\n\n  _.pluck = function (obj, key) {\n    return _.map(obj, function (value) {\n      return value[key];\n    });\n  }; // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n\n\n  _.where = function (obj, attrs, first) {\n    if (_.isEmpty(attrs)) return first ? null : [];\n    return _[first ? 'find' : 'filter'](obj, function (value) {\n      for (var key in attrs) {\n        if (attrs[key] !== value[key]) return false;\n      }\n\n      return true;\n    });\n  }; // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n\n\n  _.findWhere = function (obj, attrs) {\n    return _.where(obj, attrs, true);\n  }; // Return the maximum element or (element-based computation).\n  // Can't optimize arrays of integers longer than 65,535 elements.\n  // See: https://bugs.webkit.org/show_bug.cgi?id=80797\n\n\n  _.max = function (obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.max.apply(Math, obj);\n    }\n\n    if (!iterator && _.isEmpty(obj)) return -Infinity;\n    var result = {\n      computed: -Infinity,\n      value: -Infinity\n    };\n    each(obj, function (value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed >= result.computed && (result = {\n        value: value,\n        computed: computed\n      });\n    });\n    return result.value;\n  }; // Return the minimum element (or element-based computation).\n\n\n  _.min = function (obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.min.apply(Math, obj);\n    }\n\n    if (!iterator && _.isEmpty(obj)) return Infinity;\n    var result = {\n      computed: Infinity,\n      value: Infinity\n    };\n    each(obj, function (value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed < result.computed && (result = {\n        value: value,\n        computed: computed\n      });\n    });\n    return result.value;\n  }; // Shuffle an array.\n\n\n  _.shuffle = function (obj) {\n    var rand;\n    var index = 0;\n    var shuffled = [];\n    each(obj, function (value) {\n      rand = _.random(index++);\n      shuffled[index - 1] = shuffled[rand];\n      shuffled[rand] = value;\n    });\n    return shuffled;\n  }; // An internal function to generate lookup iterators.\n\n\n  var lookupIterator = function lookupIterator(value) {\n    return _.isFunction(value) ? value : function (obj) {\n      return obj[value];\n    };\n  }; // Sort the object's values by a criterion produced by an iterator.\n\n\n  _.sortBy = function (obj, value, context) {\n    var iterator = lookupIterator(value);\n    return _.pluck(_.map(obj, function (value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iterator.call(context, value, index, list)\n      };\n    }).sort(function (left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n\n      return left.index < right.index ? -1 : 1;\n    }), 'value');\n  }; // An internal function used for aggregate \"group by\" operations.\n\n\n  var group = function group(obj, value, context, behavior) {\n    var result = {};\n    var iterator = lookupIterator(value || _.identity);\n    each(obj, function (value, index) {\n      var key = iterator.call(context, value, index, obj);\n      behavior(result, key, value);\n    });\n    return result;\n  }; // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n\n\n  _.groupBy = function (obj, value, context) {\n    return group(obj, value, context, function (result, key, value) {\n      (_.has(result, key) ? result[key] : result[key] = []).push(value);\n    });\n  }; // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n\n\n  _.countBy = function (obj, value, context) {\n    return group(obj, value, context, function (result, key) {\n      if (!_.has(result, key)) result[key] = 0;\n      result[key]++;\n    });\n  }; // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n\n\n  _.sortedIndex = function (array, obj, iterator, context) {\n    iterator = iterator == null ? _.identity : lookupIterator(iterator);\n    var value = iterator.call(context, obj);\n    var low = 0,\n        high = array.length;\n\n    while (low < high) {\n      var mid = low + high >>> 1;\n      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;\n    }\n\n    return low;\n  }; // Safely convert anything iterable into a real, live array.\n\n\n  _.toArray = function (obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\n    return _.values(obj);\n  }; // Return the number of elements in an object.\n\n\n  _.size = function (obj) {\n    if (obj == null) return 0;\n    return obj.length === +obj.length ? obj.length : _.keys(obj).length;\n  }; // Array Functions\n  // ---------------\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n\n\n  _.first = _.head = _.take = function (array, n, guard) {\n    if (array == null) return void 0;\n    return n != null && !guard ? slice.call(array, 0, n) : array[0];\n  }; // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N. The **guard** check allows it to work with\n  // `_.map`.\n\n\n  _.initial = function (array, n, guard) {\n    return slice.call(array, 0, array.length - (n == null || guard ? 1 : n));\n  }; // Get the last element of an array. Passing **n** will return the last N\n  // values in the array. The **guard** check allows it to work with `_.map`.\n\n\n  _.last = function (array, n, guard) {\n    if (array == null) return void 0;\n\n    if (n != null && !guard) {\n      return slice.call(array, Math.max(array.length - n, 0));\n    } else {\n      return array[array.length - 1];\n    }\n  }; // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array. The **guard**\n  // check allows it to work with `_.map`.\n\n\n  _.rest = _.tail = _.drop = function (array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  }; // Trim out all falsy values from an array.\n\n\n  _.compact = function (array) {\n    return _.filter(array, _.identity);\n  }; // Internal implementation of a recursive `flatten` function.\n\n\n  var flatten = function flatten(input, shallow, output) {\n    each(input, function (value) {\n      if (_.isArray(value)) {\n        shallow ? push.apply(output, value) : flatten(value, shallow, output);\n      } else {\n        output.push(value);\n      }\n    });\n    return output;\n  }; // Return a completely flattened version of an array.\n\n\n  _.flatten = function (array, shallow) {\n    return flatten(array, shallow, []);\n  }; // Return a version of the array that does not contain the specified value(s).\n\n\n  _.without = function (array) {\n    return _.difference(array, slice.call(arguments, 1));\n  }; // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n\n\n  _.uniq = _.unique = function (array, isSorted, iterator, context) {\n    if (_.isFunction(isSorted)) {\n      context = iterator;\n      iterator = isSorted;\n      isSorted = false;\n    }\n\n    var initial = iterator ? _.map(array, iterator, context) : array;\n    var results = [];\n    var seen = [];\n    each(initial, function (value, index) {\n      if (isSorted ? !index || seen[seen.length - 1] !== value : !_.contains(seen, value)) {\n        seen.push(value);\n        results.push(array[index]);\n      }\n    });\n    return results;\n  }; // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n\n\n  _.union = function () {\n    return _.uniq(concat.apply(ArrayProto, arguments));\n  }; // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n\n\n  _.intersection = function (array) {\n    var rest = slice.call(arguments, 1);\n    return _.filter(_.uniq(array), function (item) {\n      return _.every(rest, function (other) {\n        return _.indexOf(other, item) >= 0;\n      });\n    });\n  }; // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n\n\n  _.difference = function (array) {\n    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\n    return _.filter(array, function (value) {\n      return !_.contains(rest, value);\n    });\n  }; // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n\n\n  _.zip = function () {\n    var args = slice.call(arguments);\n\n    var length = _.max(_.pluck(args, 'length'));\n\n    var results = new Array(length);\n\n    for (var i = 0; i < length; i++) {\n      results[i] = _.pluck(args, \"\" + i);\n    }\n\n    return results;\n  }; // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n\n\n  _.object = function (list, values) {\n    if (list == null) return {};\n    var result = {};\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n\n    return result;\n  }; // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\n  // we need this function. Return the position of the first occurrence of an\n  // item in an array, or -1 if the item is not included in the array.\n  // Delegates to **ECMAScript 5**'s native `indexOf` if available.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n\n\n  _.indexOf = function (array, item, isSorted) {\n    if (array == null) return -1;\n    var i = 0,\n        l = array.length;\n\n    if (isSorted) {\n      if (typeof isSorted == 'number') {\n        i = isSorted < 0 ? Math.max(0, l + isSorted) : isSorted;\n      } else {\n        i = _.sortedIndex(array, item);\n        return array[i] === item ? i : -1;\n      }\n    }\n\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);\n\n    for (; i < l; i++) {\n      if (array[i] === item) return i;\n    }\n\n    return -1;\n  }; // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\n\n\n  _.lastIndexOf = function (array, item, from) {\n    if (array == null) return -1;\n    var hasIndex = from != null;\n\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\n      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\n    }\n\n    var i = hasIndex ? from : array.length;\n\n    while (i--) {\n      if (array[i] === item) return i;\n    }\n\n    return -1;\n  }; // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n\n\n  _.range = function (start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n\n    step = arguments[2] || 1;\n    var len = Math.max(Math.ceil((stop - start) / step), 0);\n    var idx = 0;\n    var range = new Array(len);\n\n    while (idx < len) {\n      range[idx++] = start;\n      start += step;\n    }\n\n    return range;\n  }; // Function (ahem) Functions\n  // ------------------\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n\n\n  _.bind = function (func, context) {\n    if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    var args = slice.call(arguments, 2);\n    return function () {\n      return func.apply(context, args.concat(slice.call(arguments)));\n    };\n  }; // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context.\n\n\n  _.partial = function (func) {\n    var args = slice.call(arguments, 1);\n    return function () {\n      return func.apply(this, args.concat(slice.call(arguments)));\n    };\n  }; // Bind all of an object's methods to that object. Useful for ensuring that\n  // all callbacks defined on an object belong to it.\n\n\n  _.bindAll = function (obj) {\n    var funcs = slice.call(arguments, 1);\n    if (funcs.length === 0) funcs = _.functions(obj);\n    each(funcs, function (f) {\n      obj[f] = _.bind(obj[f], obj);\n    });\n    return obj;\n  }; // Memoize an expensive function by storing its results.\n\n\n  _.memoize = function (func, hasher) {\n    var memo = {};\n    hasher || (hasher = _.identity);\n    return function () {\n      var key = hasher.apply(this, arguments);\n      return _.has(memo, key) ? memo[key] : memo[key] = func.apply(this, arguments);\n    };\n  }; // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n\n\n  _.delay = function (func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function () {\n      return func.apply(null, args);\n    }, wait);\n  }; // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n\n\n  _.defer = function (func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  }; // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time.\n\n\n  _.throttle = function (func, wait) {\n    var context, args, timeout, result;\n    var previous = 0;\n\n    var later = function later() {\n      previous = new Date();\n      timeout = null;\n      result = func.apply(context, args);\n    };\n\n    return function () {\n      var now = new Date();\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n\n      if (remaining <= 0) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n      } else if (!timeout) {\n        timeout = setTimeout(later, remaining);\n      }\n\n      return result;\n    };\n  }; // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n\n\n  _.debounce = function (func, wait, immediate) {\n    var timeout, result;\n    return function () {\n      var context = this,\n          args = arguments;\n\n      var later = function later() {\n        timeout = null;\n        if (!immediate) result = func.apply(context, args);\n      };\n\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) result = func.apply(context, args);\n      return result;\n    };\n  }; // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n\n\n  _.once = function (func) {\n    var ran = false,\n        memo;\n    return function () {\n      if (ran) return memo;\n      ran = true;\n      memo = func.apply(this, arguments);\n      func = null;\n      return memo;\n    };\n  }; // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n\n\n  _.wrap = function (func, wrapper) {\n    return function () {\n      var args = [func];\n      push.apply(args, arguments);\n      return wrapper.apply(this, args);\n    };\n  }; // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n\n\n  _.compose = function () {\n    var funcs = arguments;\n    return function () {\n      var args = arguments;\n\n      for (var i = funcs.length - 1; i >= 0; i--) {\n        args = [funcs[i].apply(this, args)];\n      }\n\n      return args[0];\n    };\n  }; // Returns a function that will only be executed after being called N times.\n\n\n  _.after = function (times, func) {\n    if (times <= 0) return func();\n    return function () {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  }; // Object Functions\n  // ----------------\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n\n\n  _.keys = nativeKeys || function (obj) {\n    if (obj !== Object(obj)) throw new TypeError('Invalid object');\n    var keys = [];\n\n    for (var key in obj) {\n      if (_.has(obj, key)) keys[keys.length] = key;\n    }\n\n    return keys;\n  }; // Retrieve the values of an object's properties.\n\n\n  _.values = function (obj) {\n    var values = [];\n\n    for (var key in obj) {\n      if (_.has(obj, key)) values.push(obj[key]);\n    }\n\n    return values;\n  }; // Convert an object into a list of `[key, value]` pairs.\n\n\n  _.pairs = function (obj) {\n    var pairs = [];\n\n    for (var key in obj) {\n      if (_.has(obj, key)) pairs.push([key, obj[key]]);\n    }\n\n    return pairs;\n  }; // Invert the keys and values of an object. The values must be serializable.\n\n\n  _.invert = function (obj) {\n    var result = {};\n\n    for (var key in obj) {\n      if (_.has(obj, key)) result[obj[key]] = key;\n    }\n\n    return result;\n  }; // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n\n\n  _.functions = _.methods = function (obj) {\n    var names = [];\n\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n\n    return names.sort();\n  }; // Extend a given object with all the properties in passed-in object(s).\n\n\n  _.extend = function (obj) {\n    each(slice.call(arguments, 1), function (source) {\n      if (source) {\n        for (var prop in source) {\n          obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  }; // Return a copy of the object only containing the whitelisted properties.\n\n\n  _.pick = function (obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    each(keys, function (key) {\n      if (key in obj) copy[key] = obj[key];\n    });\n    return copy;\n  }; // Return a copy of the object without the blacklisted properties.\n\n\n  _.omit = function (obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n\n    for (var key in obj) {\n      if (!_.contains(keys, key)) copy[key] = obj[key];\n    }\n\n    return copy;\n  }; // Fill in a given object with default properties.\n\n\n  _.defaults = function (obj) {\n    each(slice.call(arguments, 1), function (source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] == null) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  }; // Create a (shallow-cloned) duplicate of an object.\n\n\n  _.clone = function (obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  }; // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n\n\n  _.tap = function (obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  }; // Internal recursive comparison function for `isEqual`.\n\n\n  var eq = function eq(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the Harmony `egal` proposal: http://wiki.ecmascript.org/doku.php?id=harmony:egal.\n    if (a === b) return a !== 0 || 1 / a == 1 / b; // A strict comparison is necessary because `null == undefined`.\n\n    if (a == null || b == null) return a === b; // Unwrap any wrapped objects.\n\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped; // Compare `[[Class]]` names.\n\n    var className = toString.call(a);\n    if (className != toString.call(b)) return false;\n\n    switch (className) {\n      // Strings, numbers, dates, and booleans are compared by value.\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return a == String(b);\n\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n        // other numeric values.\n        return a != +a ? b != +b : a == 0 ? 1 / a == 1 / b : a == +b;\n\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a == +b;\n      // RegExps are compared by their source patterns and flags.\n\n      case '[object RegExp]':\n        return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n    }\n\n    if (typeof a != 'object' || typeof b != 'object') return false; // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    var length = aStack.length;\n\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] == a) return bStack[length] == b;\n    } // Add the first object to the stack of traversed objects.\n\n\n    aStack.push(a);\n    bStack.push(b);\n    var size = 0,\n        result = true; // Recursively compare objects and arrays.\n\n    if (className == '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size == b.length;\n\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n        }\n      }\n    } else {\n      // Objects with different constructors are not equivalent, but `Object`s\n      // from different frames are.\n      var aCtor = a.constructor,\n          bCtor = b.constructor;\n\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor)) {\n        return false;\n      } // Deep compare objects.\n\n\n      for (var key in a) {\n        if (_.has(a, key)) {\n          // Count the expected number of properties.\n          size++; // Deep compare each member.\n\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n        }\n      } // Ensure that both objects contain the same number of properties.\n\n\n      if (result) {\n        for (key in b) {\n          if (_.has(b, key) && !size--) break;\n        }\n\n        result = !size;\n      }\n    } // Remove the first object from the stack of traversed objects.\n\n\n    aStack.pop();\n    bStack.pop();\n    return result;\n  }; // Perform a deep comparison to check if two objects are equal.\n\n\n  _.isEqual = function (a, b) {\n    return eq(a, b, [], []);\n  }; // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n\n\n  _.isEmpty = function (obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n\n    for (var key in obj) {\n      if (_.has(obj, key)) return false;\n    }\n\n    return true;\n  }; // Is a given value a DOM element?\n\n\n  _.isElement = function (obj) {\n    return !!(obj && obj.nodeType === 1);\n  }; // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n\n\n  _.isArray = nativeIsArray || function (obj) {\n    return toString.call(obj) == '[object Array]';\n  }; // Is a given variable an object?\n\n\n  _.isObject = function (obj) {\n    return obj === Object(obj);\n  }; // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n\n\n  each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function (name) {\n    _['is' + name] = function (obj) {\n      return toString.call(obj) == '[object ' + name + ']';\n    };\n  }); // Define a fallback version of the method in browsers (ahem, IE), where\n  // there isn't any inspectable \"Arguments\" type.\n\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function (obj) {\n      return !!(obj && _.has(obj, 'callee'));\n    };\n  } // Optimize `isFunction` if appropriate.\n\n\n  if (typeof /./ !== 'function') {\n    _.isFunction = function (obj) {\n      return typeof obj === 'function';\n    };\n  } // Is a given object a finite number?\n\n\n  _.isFinite = function (obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  }; // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n\n\n  _.isNaN = function (obj) {\n    return _.isNumber(obj) && obj != +obj;\n  }; // Is a given value a boolean?\n\n\n  _.isBoolean = function (obj) {\n    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n  }; // Is a given value equal to null?\n\n\n  _.isNull = function (obj) {\n    return obj === null;\n  }; // Is a given variable undefined?\n\n\n  _.isUndefined = function (obj) {\n    return obj === void 0;\n  }; // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n\n\n  _.has = function (obj, key) {\n    return hasOwnProperty.call(obj, key);\n  }; // Utility Functions\n  // -----------------\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n\n\n  _.noConflict = function () {\n    root._ = previousUnderscore;\n    return this;\n  }; // Keep the identity function around for default iterators.\n\n\n  _.identity = function (value) {\n    return value;\n  }; // Run a function **n** times.\n\n\n  _.times = function (n, iterator, context) {\n    var accum = Array(n);\n\n    for (var i = 0; i < n; i++) {\n      accum[i] = iterator.call(context, i);\n    }\n\n    return accum;\n  }; // Return a random integer between min and max (inclusive).\n\n\n  _.random = function (min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n\n    return min + Math.floor(Math.random() * (max - min + 1));\n  }; // List of HTML entities for escaping.\n\n\n  var entityMap = {\n    escape: {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#x27;',\n      '/': '&#x2F;'\n    }\n  };\n  entityMap.unescape = _.invert(entityMap.escape); // Regexes containing the keys and values listed immediately above.\n\n  var entityRegexes = {\n    escape: new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\n    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')\n  }; // Functions for escaping and unescaping strings to/from HTML interpolation.\n\n  _.each(['escape', 'unescape'], function (method) {\n    _[method] = function (string) {\n      if (string == null) return '';\n      return ('' + string).replace(entityRegexes[method], function (match) {\n        return entityMap[method][match];\n      });\n    };\n  }); // If the value of the named property is a function then invoke it;\n  // otherwise, return it.\n\n\n  _.result = function (object, property) {\n    if (object == null) return null;\n    var value = object[property];\n    return _.isFunction(value) ? value.call(object) : value;\n  }; // Add your own custom functions to the Underscore object.\n\n\n  _.mixin = function (obj) {\n    each(_.functions(obj), function (name) {\n      var func = _[name] = obj[name];\n\n      _.prototype[name] = function () {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result.call(this, func.apply(_, args));\n      };\n    });\n  }; // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n\n\n  var idCounter = 0;\n\n  _.uniqueId = function (prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  }; // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n\n\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  }; // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n\n  var noMatch = /(.)^/; // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\t': 't',\n    \"\\u2028\": 'u2028',\n    \"\\u2029\": 'u2029'\n  };\n  var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g; // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n\n  _.template = function (text, data, settings) {\n    var render;\n    settings = _.defaults({}, settings, _.templateSettings); // Combine delimiters into one regular expression via alternation.\n\n    var matcher = new RegExp([(settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source].join('|') + '|$', 'g'); // Compile the template source, escaping string literals appropriately.\n\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, function (match) {\n        return '\\\\' + escapes[match];\n      });\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      }\n\n      if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      }\n\n      if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      index = offset + match.length;\n      return match;\n    });\n    source += \"';\\n\"; // If a variable is not specified, place data values in local scope.\n\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n    source = \"var __t,__p='',__j=Array.prototype.join,\" + \"print=function(){__p+=__j.call(arguments,'');};\\n\" + source + \"return __p;\\n\";\n\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    if (data) return render(data, _);\n\n    var template = function template(data) {\n      return render.call(this, data, _);\n    }; // Provide the compiled function source as a convenience for precompilation.\n\n\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n    return template;\n  }; // Add a \"chain\" function, which will delegate to the wrapper.\n\n\n  _.chain = function (obj) {\n    return _(obj).chain();\n  }; // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n  // Helper function to continue chaining intermediate results.\n\n\n  var result = function result(obj) {\n    return this._chain ? _(obj).chain() : obj;\n  }; // Add all of the Underscore functions to the wrapper object.\n\n\n  _.mixin(_); // Add all mutator Array functions to the wrapper.\n\n\n  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (name) {\n    var method = ArrayProto[name];\n\n    _.prototype[name] = function () {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];\n      return result.call(this, obj);\n    };\n  }); // Add all accessor Array functions to the wrapper.\n\n  each(['concat', 'join', 'slice'], function (name) {\n    var method = ArrayProto[name];\n\n    _.prototype[name] = function () {\n      return result.call(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  _.extend(_.prototype, {\n    // Start chaining a wrapped Underscore object.\n    chain: function chain() {\n      this._chain = true;\n      return this;\n    },\n    // Extracts the result from a wrapped and chained object.\n    value: function value() {\n      return this._wrapped;\n    }\n  });\n}).call(this);","/**\n * Way data is stored for this database\n * For a Node.js/Node Webkit database it's the file system\n * For a browser-side database it's localforage, which uses the best backend available (IndexedDB then WebSQL then localStorage)\n *\n * This version is the browser version\n */\nvar localforage = require('localforage'); // Configure localforage to display NeDB name for now. Would be a good idea to let user use his own app name\n\n\nlocalforage.config({\n  name: 'NeDB',\n  storeName: 'nedbdata'\n});\n\nfunction exists(filename, callback) {\n  localforage.getItem(filename, function (err, value) {\n    if (value !== null) {\n      // Even if value is undefined, localforage returns null\n      return callback(true);\n    } else {\n      return callback(false);\n    }\n  });\n}\n\nfunction rename(filename, newFilename, callback) {\n  localforage.getItem(filename, function (err, value) {\n    if (value === null) {\n      localforage.removeItem(newFilename, function () {\n        return callback();\n      });\n    } else {\n      localforage.setItem(newFilename, value, function () {\n        localforage.removeItem(filename, function () {\n          return callback();\n        });\n      });\n    }\n  });\n}\n\nfunction writeFile(filename, contents, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') {\n    callback = options;\n  }\n\n  localforage.setItem(filename, contents, function () {\n    return callback();\n  });\n}\n\nfunction appendFile(filename, toAppend, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') {\n    callback = options;\n  }\n\n  localforage.getItem(filename, function (err, contents) {\n    contents = contents || '';\n    contents += toAppend;\n    localforage.setItem(filename, contents, function () {\n      return callback();\n    });\n  });\n}\n\nfunction readFile(filename, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') {\n    callback = options;\n  }\n\n  localforage.getItem(filename, function (err, contents) {\n    return callback(null, contents || '');\n  });\n}\n\nfunction unlink(filename, callback) {\n  localforage.removeItem(filename, function () {\n    return callback();\n  });\n} // Nothing to do, no directories will be used on the browser\n\n\nfunction mkdirp(dir, callback) {\n  return callback();\n} // Nothing to do, no data corruption possible in the brower\n\n\nfunction ensureDatafileIntegrity(filename, callback) {\n  return callback(null);\n} // Interface\n\n\nmodule.exports.exists = exists;\nmodule.exports.rename = rename;\nmodule.exports.writeFile = writeFile;\nmodule.exports.crashSafeWriteFile = writeFile; // No need for a crash safe function in the browser\n\nmodule.exports.appendFile = appendFile;\nmodule.exports.readFile = readFile;\nmodule.exports.unlink = unlink;\nmodule.exports.mkdirp = mkdirp;\nmodule.exports.ensureDatafileIntegrity = ensureDatafileIntegrity;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\n * Specific customUtils for the browser, where we don't have access to the Crypto and Buffer modules\n */\n\n/**\n * Taken from the crypto-browserify module\n * https://github.com/dominictarr/crypto-browserify\n * NOTE: Math.random() does not guarantee \"cryptographic quality\" but we actually don't need it\n */\nfunction randomBytes(size) {\n  var bytes = new Array(size);\n  var r;\n\n  for (var i = 0, r; i < size; i++) {\n    if ((i & 0x03) == 0) r = Math.random() * 0x100000000;\n    bytes[i] = r >>> ((i & 0x03) << 3) & 0xff;\n  }\n\n  return bytes;\n}\n/**\n * Taken from the base64-js module\n * https://github.com/beatgammit/base64-js/\n */\n\n\nfunction byteArrayToBase64(uint8) {\n  var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n      extraBytes = uint8.length % 3 // if we have 1 byte left, pad 2 bytes\n  ,\n      output = \"\",\n      temp,\n      length,\n      i;\n\n  function tripletToBase64(num) {\n    return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n  }\n\n  ; // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n    temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];\n    output += tripletToBase64(temp);\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  switch (extraBytes) {\n    case 1:\n      temp = uint8[uint8.length - 1];\n      output += lookup[temp >> 2];\n      output += lookup[temp << 4 & 0x3F];\n      output += '==';\n      break;\n\n    case 2:\n      temp = (uint8[uint8.length - 2] << 8) + uint8[uint8.length - 1];\n      output += lookup[temp >> 10];\n      output += lookup[temp >> 4 & 0x3F];\n      output += lookup[temp << 2 & 0x3F];\n      output += '=';\n      break;\n  }\n\n  return output;\n}\n/**\n * Return a random alphanumerical string of length len\n * There is a very small probability (less than 1/1,000,000) for the length to be less than len\n * (il the base64 conversion yields too many pluses and slashes) but\n * that's not an issue here\n * The probability of a collision is extremely small (need 3*10^12 documents to have one chance in a million of a collision)\n * See http://en.wikipedia.org/wiki/Birthday_problem\n */\n\n\nfunction uid(len) {\n  return byteArrayToBase64(randomBytes(Math.ceil(Math.max(8, len * 2)))).replace(/[+\\/]/g, '').slice(0, len);\n}\n\nmodule.exports.uid = uid;","var customUtils = require('./customUtils'),\n    model = require('./model'),\n    async = require('async'),\n    Executor = require('./executor'),\n    Index = require('./indexes'),\n    util = require('util'),\n    _ = require('underscore'),\n    Persistence = require('./persistence'),\n    Cursor = require('./cursor');\n/**\n * Create a new collection\n * @param {String} options.filename Optional, datastore will be in-memory only if not provided\n * @param {Boolean} options.timestampData Optional, defaults to false. If set to true, createdAt and updatedAt will be created and populated automatically (if not specified by user)\n * @param {Boolean} options.inMemoryOnly Optional, defaults to false\n * @param {String} options.nodeWebkitAppName Optional, specify the name of your NW app if you want options.filename to be relative to the directory where\n *                                            Node Webkit stores application data such as cookies and local storage (the best place to store data in my opinion)\n * @param {Boolean} options.autoload Optional, defaults to false\n * @param {Function} options.onload Optional, if autoload is used this will be called after the load database with the error object as parameter. If you don't pass it the error will be thrown\n * @param {Function} options.afterSerialization/options.beforeDeserialization Optional, serialization hooks\n * @param {Number} options.corruptAlertThreshold Optional, threshold after which an alert is thrown if too much data is corrupt\n * @param {Function} options.compareStrings Optional, string comparison function that overrides default for sorting\n *\n * Event Emitter - Events\n * * compaction.done - Fired whenever a compaction operation was finished\n */\n\n\nfunction Datastore(options) {\n  var filename; // Retrocompatibility with v0.6 and before\n\n  if (typeof options === 'string') {\n    filename = options;\n    this.inMemoryOnly = false; // Default\n  } else {\n    options = options || {};\n    filename = options.filename;\n    this.inMemoryOnly = options.inMemoryOnly || false;\n    this.autoload = options.autoload || false;\n    this.timestampData = options.timestampData || false;\n  } // Determine whether in memory or persistent\n\n\n  if (!filename || typeof filename !== 'string' || filename.length === 0) {\n    this.filename = null;\n    this.inMemoryOnly = true;\n  } else {\n    this.filename = filename;\n  } // String comparison function\n\n\n  this.compareStrings = options.compareStrings; // Persistence handling\n\n  this.persistence = new Persistence({\n    db: this,\n    nodeWebkitAppName: options.nodeWebkitAppName,\n    afterSerialization: options.afterSerialization,\n    beforeDeserialization: options.beforeDeserialization,\n    corruptAlertThreshold: options.corruptAlertThreshold\n  }); // This new executor is ready if we don't use persistence\n  // If we do, it will only be ready once loadDatabase is called\n\n  this.executor = new Executor();\n\n  if (this.inMemoryOnly) {\n    this.executor.ready = true;\n  } // Indexed by field name, dot notation can be used\n  // _id is always indexed and since _ids are generated randomly the underlying\n  // binary is always well-balanced\n\n\n  this.indexes = {};\n  this.indexes._id = new Index({\n    fieldName: '_id',\n    unique: true\n  });\n  this.ttlIndexes = {}; // Queue a load of the database right away and call the onload handler\n  // By default (no onload handler), if there is an error there, no operation will be possible so warn the user by throwing an exception\n\n  if (this.autoload) {\n    this.loadDatabase(options.onload || function (err) {\n      if (err) {\n        throw err;\n      }\n    });\n  }\n}\n\nutil.inherits(Datastore, require('events').EventEmitter);\n/**\n * Load the database from the datafile, and trigger the execution of buffered commands if any\n */\n\nDatastore.prototype.loadDatabase = function () {\n  this.executor.push({\n    this: this.persistence,\n    fn: this.persistence.loadDatabase,\n    arguments: arguments\n  }, true);\n};\n/**\n * Get an array of all the data in the database\n */\n\n\nDatastore.prototype.getAllData = function () {\n  return this.indexes._id.getAll();\n};\n/**\n * Reset all currently defined indexes\n */\n\n\nDatastore.prototype.resetIndexes = function (newData) {\n  var self = this;\n  Object.keys(this.indexes).forEach(function (i) {\n    self.indexes[i].reset(newData);\n  });\n};\n/**\n * Ensure an index is kept for this field. Same parameters as lib/indexes\n * For now this function is synchronous, we need to test how much time it takes\n * We use an async API for consistency with the rest of the code\n * @param {String} options.fieldName\n * @param {Boolean} options.unique\n * @param {Boolean} options.sparse\n * @param {Number} options.expireAfterSeconds - Optional, if set this index becomes a TTL index (only works on Date fields, not arrays of Date)\n * @param {Function} cb Optional callback, signature: err\n */\n\n\nDatastore.prototype.ensureIndex = function (options, cb) {\n  var err,\n      callback = cb || function () {};\n\n  options = options || {};\n\n  if (!options.fieldName) {\n    err = new Error(\"Cannot create an index without a fieldName\");\n    err.missingFieldName = true;\n    return callback(err);\n  }\n\n  if (this.indexes[options.fieldName]) {\n    return callback(null);\n  }\n\n  this.indexes[options.fieldName] = new Index(options);\n\n  if (options.expireAfterSeconds !== undefined) {\n    this.ttlIndexes[options.fieldName] = options.expireAfterSeconds;\n  } // With this implementation index creation is not necessary to ensure TTL but we stick with MongoDB's API here\n\n\n  try {\n    this.indexes[options.fieldName].insert(this.getAllData());\n  } catch (e) {\n    delete this.indexes[options.fieldName];\n    return callback(e);\n  } // We may want to force all options to be persisted including defaults, not just the ones passed the index creation function\n\n\n  this.persistence.persistNewState([{\n    $$indexCreated: options\n  }], function (err) {\n    if (err) {\n      return callback(err);\n    }\n\n    return callback(null);\n  });\n};\n/**\n * Remove an index\n * @param {String} fieldName\n * @param {Function} cb Optional callback, signature: err\n */\n\n\nDatastore.prototype.removeIndex = function (fieldName, cb) {\n  var callback = cb || function () {};\n\n  delete this.indexes[fieldName];\n  this.persistence.persistNewState([{\n    $$indexRemoved: fieldName\n  }], function (err) {\n    if (err) {\n      return callback(err);\n    }\n\n    return callback(null);\n  });\n};\n/**\n * Add one or several document(s) to all indexes\n */\n\n\nDatastore.prototype.addToIndexes = function (doc) {\n  var i,\n      failingIndex,\n      error,\n      keys = Object.keys(this.indexes);\n\n  for (i = 0; i < keys.length; i += 1) {\n    try {\n      this.indexes[keys[i]].insert(doc);\n    } catch (e) {\n      failingIndex = i;\n      error = e;\n      break;\n    }\n  } // If an error happened, we need to rollback the insert on all other indexes\n\n\n  if (error) {\n    for (i = 0; i < failingIndex; i += 1) {\n      this.indexes[keys[i]].remove(doc);\n    }\n\n    throw error;\n  }\n};\n/**\n * Remove one or several document(s) from all indexes\n */\n\n\nDatastore.prototype.removeFromIndexes = function (doc) {\n  var self = this;\n  Object.keys(this.indexes).forEach(function (i) {\n    self.indexes[i].remove(doc);\n  });\n};\n/**\n * Update one or several documents in all indexes\n * To update multiple documents, oldDoc must be an array of { oldDoc, newDoc } pairs\n * If one update violates a constraint, all changes are rolled back\n */\n\n\nDatastore.prototype.updateIndexes = function (oldDoc, newDoc) {\n  var i,\n      failingIndex,\n      error,\n      keys = Object.keys(this.indexes);\n\n  for (i = 0; i < keys.length; i += 1) {\n    try {\n      this.indexes[keys[i]].update(oldDoc, newDoc);\n    } catch (e) {\n      failingIndex = i;\n      error = e;\n      break;\n    }\n  } // If an error happened, we need to rollback the update on all other indexes\n\n\n  if (error) {\n    for (i = 0; i < failingIndex; i += 1) {\n      this.indexes[keys[i]].revertUpdate(oldDoc, newDoc);\n    }\n\n    throw error;\n  }\n};\n/**\n * Return the list of candidates for a given query\n * Crude implementation for now, we return the candidates given by the first usable index if any\n * We try the following query types, in this order: basic match, $in match, comparison match\n * One way to make it better would be to enable the use of multiple indexes if the first usable index\n * returns too much data. I may do it in the future.\n *\n * Returned candidates will be scanned to find and remove all expired documents\n *\n * @param {Query} query\n * @param {Boolean} dontExpireStaleDocs Optional, defaults to false, if true don't remove stale docs. Useful for the remove function which shouldn't be impacted by expirations\n * @param {Function} callback Signature err, docs\n */\n\n\nDatastore.prototype.getCandidates = function (query, dontExpireStaleDocs, callback) {\n  var indexNames = Object.keys(this.indexes),\n      self = this,\n      usableQueryKeys;\n\n  if (typeof dontExpireStaleDocs === 'function') {\n    callback = dontExpireStaleDocs;\n    dontExpireStaleDocs = false;\n  }\n\n  async.waterfall([// STEP 1: get candidates list by checking indexes from most to least frequent usecase\n  function (cb) {\n    // For a basic match\n    usableQueryKeys = [];\n    Object.keys(query).forEach(function (k) {\n      if (typeof query[k] === 'string' || typeof query[k] === 'number' || typeof query[k] === 'boolean' || util.isDate(query[k]) || query[k] === null) {\n        usableQueryKeys.push(k);\n      }\n    });\n    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);\n\n    if (usableQueryKeys.length > 0) {\n      return cb(null, self.indexes[usableQueryKeys[0]].getMatching(query[usableQueryKeys[0]]));\n    } // For a $in match\n\n\n    usableQueryKeys = [];\n    Object.keys(query).forEach(function (k) {\n      if (query[k] && query[k].hasOwnProperty('$in')) {\n        usableQueryKeys.push(k);\n      }\n    });\n    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);\n\n    if (usableQueryKeys.length > 0) {\n      return cb(null, self.indexes[usableQueryKeys[0]].getMatching(query[usableQueryKeys[0]].$in));\n    } // For a comparison match\n\n\n    usableQueryKeys = [];\n    Object.keys(query).forEach(function (k) {\n      if (query[k] && (query[k].hasOwnProperty('$lt') || query[k].hasOwnProperty('$lte') || query[k].hasOwnProperty('$gt') || query[k].hasOwnProperty('$gte'))) {\n        usableQueryKeys.push(k);\n      }\n    });\n    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);\n\n    if (usableQueryKeys.length > 0) {\n      return cb(null, self.indexes[usableQueryKeys[0]].getBetweenBounds(query[usableQueryKeys[0]]));\n    } // By default, return all the DB data\n\n\n    return cb(null, self.getAllData());\n  } // STEP 2: remove all expired documents\n  , function (docs) {\n    if (dontExpireStaleDocs) {\n      return callback(null, docs);\n    }\n\n    var expiredDocsIds = [],\n        validDocs = [],\n        ttlIndexesFieldNames = Object.keys(self.ttlIndexes);\n    docs.forEach(function (doc) {\n      var valid = true;\n      ttlIndexesFieldNames.forEach(function (i) {\n        if (doc[i] !== undefined && util.isDate(doc[i]) && Date.now() > doc[i].getTime() + self.ttlIndexes[i] * 1000) {\n          valid = false;\n        }\n      });\n\n      if (valid) {\n        validDocs.push(doc);\n      } else {\n        expiredDocsIds.push(doc._id);\n      }\n    });\n    async.eachSeries(expiredDocsIds, function (_id, cb) {\n      self._remove({\n        _id: _id\n      }, {}, function (err) {\n        if (err) {\n          return callback(err);\n        }\n\n        return cb();\n      });\n    }, function (err) {\n      return callback(null, validDocs);\n    });\n  }]);\n};\n/**\n * Insert a new document\n * @param {Function} cb Optional callback, signature: err, insertedDoc\n *\n * @api private Use Datastore.insert which has the same signature\n */\n\n\nDatastore.prototype._insert = function (newDoc, cb) {\n  var callback = cb || function () {},\n      preparedDoc;\n\n  try {\n    preparedDoc = this.prepareDocumentForInsertion(newDoc);\n\n    this._insertInCache(preparedDoc);\n  } catch (e) {\n    return callback(e);\n  }\n\n  this.persistence.persistNewState(util.isArray(preparedDoc) ? preparedDoc : [preparedDoc], function (err) {\n    if (err) {\n      return callback(err);\n    }\n\n    return callback(null, model.deepCopy(preparedDoc));\n  });\n};\n/**\n * Create a new _id that's not already in use\n */\n\n\nDatastore.prototype.createNewId = function () {\n  var tentativeId = customUtils.uid(16); // Try as many times as needed to get an unused _id. As explained in customUtils, the probability of this ever happening is extremely small, so this is O(1)\n\n  if (this.indexes._id.getMatching(tentativeId).length > 0) {\n    tentativeId = this.createNewId();\n  }\n\n  return tentativeId;\n};\n/**\n * Prepare a document (or array of documents) to be inserted in a database\n * Meaning adds _id and timestamps if necessary on a copy of newDoc to avoid any side effect on user input\n * @api private\n */\n\n\nDatastore.prototype.prepareDocumentForInsertion = function (newDoc) {\n  var preparedDoc,\n      self = this;\n\n  if (util.isArray(newDoc)) {\n    preparedDoc = [];\n    newDoc.forEach(function (doc) {\n      preparedDoc.push(self.prepareDocumentForInsertion(doc));\n    });\n  } else {\n    preparedDoc = model.deepCopy(newDoc);\n\n    if (preparedDoc._id === undefined) {\n      preparedDoc._id = this.createNewId();\n    }\n\n    var now = new Date();\n\n    if (this.timestampData && preparedDoc.createdAt === undefined) {\n      preparedDoc.createdAt = now;\n    }\n\n    if (this.timestampData && preparedDoc.updatedAt === undefined) {\n      preparedDoc.updatedAt = now;\n    }\n\n    model.checkObject(preparedDoc);\n  }\n\n  return preparedDoc;\n};\n/**\n * If newDoc is an array of documents, this will insert all documents in the cache\n * @api private\n */\n\n\nDatastore.prototype._insertInCache = function (preparedDoc) {\n  if (util.isArray(preparedDoc)) {\n    this._insertMultipleDocsInCache(preparedDoc);\n  } else {\n    this.addToIndexes(preparedDoc);\n  }\n};\n/**\n * If one insertion fails (e.g. because of a unique constraint), roll back all previous\n * inserts and throws the error\n * @api private\n */\n\n\nDatastore.prototype._insertMultipleDocsInCache = function (preparedDocs) {\n  var i, failingI, error;\n\n  for (i = 0; i < preparedDocs.length; i += 1) {\n    try {\n      this.addToIndexes(preparedDocs[i]);\n    } catch (e) {\n      error = e;\n      failingI = i;\n      break;\n    }\n  }\n\n  if (error) {\n    for (i = 0; i < failingI; i += 1) {\n      this.removeFromIndexes(preparedDocs[i]);\n    }\n\n    throw error;\n  }\n};\n\nDatastore.prototype.insert = function () {\n  this.executor.push({\n    this: this,\n    fn: this._insert,\n    arguments: arguments\n  });\n};\n/**\n * Count all documents matching the query\n * @param {Object} query MongoDB-style query\n */\n\n\nDatastore.prototype.count = function (query, callback) {\n  var cursor = new Cursor(this, query, function (err, docs, callback) {\n    if (err) {\n      return callback(err);\n    }\n\n    return callback(null, docs.length);\n  });\n\n  if (typeof callback === 'function') {\n    cursor.exec(callback);\n  } else {\n    return cursor;\n  }\n};\n/**\n * Find all documents matching the query\n * If no callback is passed, we return the cursor so that user can limit, skip and finally exec\n * @param {Object} query MongoDB-style query\n * @param {Object} projection MongoDB-style projection\n */\n\n\nDatastore.prototype.find = function (query, projection, callback) {\n  switch (arguments.length) {\n    case 1:\n      projection = {}; // callback is undefined, will return a cursor\n\n      break;\n\n    case 2:\n      if (typeof projection === 'function') {\n        callback = projection;\n        projection = {};\n      } // If not assume projection is an object and callback undefined\n\n\n      break;\n  }\n\n  var cursor = new Cursor(this, query, function (err, docs, callback) {\n    var res = [],\n        i;\n\n    if (err) {\n      return callback(err);\n    }\n\n    for (i = 0; i < docs.length; i += 1) {\n      res.push(model.deepCopy(docs[i]));\n    }\n\n    return callback(null, res);\n  });\n  cursor.projection(projection);\n\n  if (typeof callback === 'function') {\n    cursor.exec(callback);\n  } else {\n    return cursor;\n  }\n};\n/**\n * Find one document matching the query\n * @param {Object} query MongoDB-style query\n * @param {Object} projection MongoDB-style projection\n */\n\n\nDatastore.prototype.findOne = function (query, projection, callback) {\n  switch (arguments.length) {\n    case 1:\n      projection = {}; // callback is undefined, will return a cursor\n\n      break;\n\n    case 2:\n      if (typeof projection === 'function') {\n        callback = projection;\n        projection = {};\n      } // If not assume projection is an object and callback undefined\n\n\n      break;\n  }\n\n  var cursor = new Cursor(this, query, function (err, docs, callback) {\n    if (err) {\n      return callback(err);\n    }\n\n    if (docs.length === 1) {\n      return callback(null, model.deepCopy(docs[0]));\n    } else {\n      return callback(null, null);\n    }\n  });\n  cursor.projection(projection).limit(1);\n\n  if (typeof callback === 'function') {\n    cursor.exec(callback);\n  } else {\n    return cursor;\n  }\n};\n/**\n * Update all docs matching query\n * @param {Object} query\n * @param {Object} updateQuery\n * @param {Object} options Optional options\n *                 options.multi If true, can update multiple documents (defaults to false)\n *                 options.upsert If true, document is inserted if the query doesn't match anything\n *                 options.returnUpdatedDocs Defaults to false, if true return as third argument the array of updated matched documents (even if no change actually took place)\n * @param {Function} cb Optional callback, signature: (err, numAffected, affectedDocuments, upsert)\n *                      If update was an upsert, upsert flag is set to true\n *                      affectedDocuments can be one of the following:\n *                        * For an upsert, the upserted document\n *                        * For an update with returnUpdatedDocs option false, null\n *                        * For an update with returnUpdatedDocs true and multi false, the updated document\n *                        * For an update with returnUpdatedDocs true and multi true, the array of updated documents\n *\n * WARNING: The API was changed between v1.7.4 and v1.8, for consistency and readability reasons. Prior and including to v1.7.4,\n *          the callback signature was (err, numAffected, updated) where updated was the updated document in case of an upsert\n *          or the array of updated documents for an update if the returnUpdatedDocs option was true. That meant that the type of\n *          affectedDocuments in a non multi update depended on whether there was an upsert or not, leaving only two ways for the\n *          user to check whether an upsert had occured: checking the type of affectedDocuments or running another find query on\n *          the whole dataset to check its size. Both options being ugly, the breaking change was necessary.\n *\n * @api private Use Datastore.update which has the same signature\n */\n\n\nDatastore.prototype._update = function (query, updateQuery, options, cb) {\n  var callback,\n      self = this,\n      numReplaced = 0,\n      multi,\n      upsert,\n      i;\n\n  if (typeof options === 'function') {\n    cb = options;\n    options = {};\n  }\n\n  callback = cb || function () {};\n\n  multi = options.multi !== undefined ? options.multi : false;\n  upsert = options.upsert !== undefined ? options.upsert : false;\n  async.waterfall([function (cb) {\n    // If upsert option is set, check whether we need to insert the doc\n    if (!upsert) {\n      return cb();\n    } // Need to use an internal function not tied to the executor to avoid deadlock\n\n\n    var cursor = new Cursor(self, query);\n\n    cursor.limit(1)._exec(function (err, docs) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (docs.length === 1) {\n        return cb();\n      } else {\n        var toBeInserted;\n\n        try {\n          model.checkObject(updateQuery); // updateQuery is a simple object with no modifier, use it as the document to insert\n\n          toBeInserted = updateQuery;\n        } catch (e) {\n          // updateQuery contains modifiers, use the find query as the base,\n          // strip it from all operators and update it according to updateQuery\n          try {\n            toBeInserted = model.modify(model.deepCopy(query, true), updateQuery);\n          } catch (err) {\n            return callback(err);\n          }\n        }\n\n        return self._insert(toBeInserted, function (err, newDoc) {\n          if (err) {\n            return callback(err);\n          }\n\n          return callback(null, 1, newDoc, true);\n        });\n      }\n    });\n  }, function () {\n    // Perform the update\n    var modifiedDoc,\n        modifications = [],\n        createdAt;\n    self.getCandidates(query, function (err, candidates) {\n      if (err) {\n        return callback(err);\n      } // Preparing update (if an error is thrown here neither the datafile nor\n      // the in-memory indexes are affected)\n\n\n      try {\n        for (i = 0; i < candidates.length; i += 1) {\n          if (model.match(candidates[i], query) && (multi || numReplaced === 0)) {\n            numReplaced += 1;\n\n            if (self.timestampData) {\n              createdAt = candidates[i].createdAt;\n            }\n\n            modifiedDoc = model.modify(candidates[i], updateQuery);\n\n            if (self.timestampData) {\n              modifiedDoc.createdAt = createdAt;\n              modifiedDoc.updatedAt = new Date();\n            }\n\n            modifications.push({\n              oldDoc: candidates[i],\n              newDoc: modifiedDoc\n            });\n          }\n        }\n      } catch (err) {\n        return callback(err);\n      } // Change the docs in memory\n\n\n      try {\n        self.updateIndexes(modifications);\n      } catch (err) {\n        return callback(err);\n      } // Update the datafile\n\n\n      var updatedDocs = _.pluck(modifications, 'newDoc');\n\n      self.persistence.persistNewState(updatedDocs, function (err) {\n        if (err) {\n          return callback(err);\n        }\n\n        if (!options.returnUpdatedDocs) {\n          return callback(null, numReplaced);\n        } else {\n          var updatedDocsDC = [];\n          updatedDocs.forEach(function (doc) {\n            updatedDocsDC.push(model.deepCopy(doc));\n          });\n\n          if (!multi) {\n            updatedDocsDC = updatedDocsDC[0];\n          }\n\n          return callback(null, numReplaced, updatedDocsDC);\n        }\n      });\n    });\n  }]);\n};\n\nDatastore.prototype.update = function () {\n  this.executor.push({\n    this: this,\n    fn: this._update,\n    arguments: arguments\n  });\n};\n/**\n * Remove all docs matching the query\n * For now very naive implementation (similar to update)\n * @param {Object} query\n * @param {Object} options Optional options\n *                 options.multi If true, can update multiple documents (defaults to false)\n * @param {Function} cb Optional callback, signature: err, numRemoved\n *\n * @api private Use Datastore.remove which has the same signature\n */\n\n\nDatastore.prototype._remove = function (query, options, cb) {\n  var callback,\n      self = this,\n      numRemoved = 0,\n      removedDocs = [],\n      multi;\n\n  if (typeof options === 'function') {\n    cb = options;\n    options = {};\n  }\n\n  callback = cb || function () {};\n\n  multi = options.multi !== undefined ? options.multi : false;\n  this.getCandidates(query, true, function (err, candidates) {\n    if (err) {\n      return callback(err);\n    }\n\n    try {\n      candidates.forEach(function (d) {\n        if (model.match(d, query) && (multi || numRemoved === 0)) {\n          numRemoved += 1;\n          removedDocs.push({\n            $$deleted: true,\n            _id: d._id\n          });\n          self.removeFromIndexes(d);\n        }\n      });\n    } catch (err) {\n      return callback(err);\n    }\n\n    self.persistence.persistNewState(removedDocs, function (err) {\n      if (err) {\n        return callback(err);\n      }\n\n      return callback(null, numRemoved);\n    });\n  });\n};\n\nDatastore.prototype.remove = function () {\n  this.executor.push({\n    this: this,\n    fn: this._remove,\n    arguments: arguments\n  });\n};\n\nmodule.exports = Datastore;","/**\n * Handle models (i.e. docs)\n * Serialization/deserialization\n * Copying\n * Querying, update\n */\nvar util = require('util'),\n    _ = require('underscore'),\n    modifierFunctions = {},\n    lastStepModifierFunctions = {},\n    comparisonFunctions = {},\n    logicalOperators = {},\n    arrayComparisonFunctions = {};\n/**\n * Check a key, throw an error if the key is non valid\n * @param {String} k key\n * @param {Model} v value, needed to treat the Date edge case\n * Non-treatable edge cases here: if part of the object if of the form { $$date: number } or { $$deleted: true }\n * Its serialized-then-deserialized version it will transformed into a Date object\n * But you really need to want it to trigger such behaviour, even when warned not to use '$' at the beginning of the field names...\n */\n\n\nfunction checkKey(k, v) {\n  if (typeof k === 'number') {\n    k = k.toString();\n  }\n\n  if (k[0] === '$' && !(k === '$$date' && typeof v === 'number') && !(k === '$$deleted' && v === true) && !(k === '$$indexCreated') && !(k === '$$indexRemoved')) {\n    throw new Error('Field names cannot begin with the $ character');\n  }\n\n  if (k.indexOf('.') !== -1) {\n    throw new Error('Field names cannot contain a .');\n  }\n}\n/**\n * Check a DB object and throw an error if it's not valid\n * Works by applying the above checkKey function to all fields recursively\n */\n\n\nfunction checkObject(obj) {\n  if (util.isArray(obj)) {\n    obj.forEach(function (o) {\n      checkObject(o);\n    });\n  }\n\n  if (typeof obj === 'object' && obj !== null) {\n    Object.keys(obj).forEach(function (k) {\n      checkKey(k, obj[k]);\n      checkObject(obj[k]);\n    });\n  }\n}\n/**\n * Serialize an object to be persisted to a one-line string\n * For serialization/deserialization, we use the native JSON parser and not eval or Function\n * That gives us less freedom but data entered in the database may come from users\n * so eval and the like are not safe\n * Accepted primitive types: Number, String, Boolean, Date, null\n * Accepted secondary types: Objects, Arrays\n */\n\n\nfunction serialize(obj) {\n  var res;\n  res = JSON.stringify(obj, function (k, v) {\n    checkKey(k, v);\n\n    if (v === undefined) {\n      return undefined;\n    }\n\n    if (v === null) {\n      return null;\n    } // Hackish way of checking if object is Date (this way it works between execution contexts in node-webkit).\n    // We can't use value directly because for dates it is already string in this function (date.toJSON was already called), so we use this\n\n\n    if (typeof this[k].getTime === 'function') {\n      return {\n        $$date: this[k].getTime()\n      };\n    }\n\n    return v;\n  });\n  return res;\n}\n/**\n * From a one-line representation of an object generate by the serialize function\n * Return the object itself\n */\n\n\nfunction deserialize(rawData) {\n  return JSON.parse(rawData, function (k, v) {\n    if (k === '$$date') {\n      return new Date(v);\n    }\n\n    if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean' || v === null) {\n      return v;\n    }\n\n    if (v && v.$$date) {\n      return v.$$date;\n    }\n\n    return v;\n  });\n}\n/**\n * Deep copy a DB object\n * The optional strictKeys flag (defaulting to false) indicates whether to copy everything or only fields\n * where the keys are valid, i.e. don't begin with $ and don't contain a .\n */\n\n\nfunction deepCopy(obj, strictKeys) {\n  var res;\n\n  if (typeof obj === 'boolean' || typeof obj === 'number' || typeof obj === 'string' || obj === null || util.isDate(obj)) {\n    return obj;\n  }\n\n  if (util.isArray(obj)) {\n    res = [];\n    obj.forEach(function (o) {\n      res.push(deepCopy(o, strictKeys));\n    });\n    return res;\n  }\n\n  if (typeof obj === 'object') {\n    res = {};\n    Object.keys(obj).forEach(function (k) {\n      if (!strictKeys || k[0] !== '$' && k.indexOf('.') === -1) {\n        res[k] = deepCopy(obj[k], strictKeys);\n      }\n    });\n    return res;\n  }\n\n  return undefined; // For now everything else is undefined. We should probably throw an error instead\n}\n/**\n * Tells if an object is a primitive type or a \"real\" object\n * Arrays are considered primitive\n */\n\n\nfunction isPrimitiveType(obj) {\n  return typeof obj === 'boolean' || typeof obj === 'number' || typeof obj === 'string' || obj === null || util.isDate(obj) || util.isArray(obj);\n}\n/**\n * Utility functions for comparing things\n * Assumes type checking was already done (a and b already have the same type)\n * compareNSB works for numbers, strings and booleans\n */\n\n\nfunction compareNSB(a, b) {\n  if (a < b) {\n    return -1;\n  }\n\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction compareArrays(a, b) {\n  var i, comp;\n\n  for (i = 0; i < Math.min(a.length, b.length); i += 1) {\n    comp = compareThings(a[i], b[i]);\n\n    if (comp !== 0) {\n      return comp;\n    }\n  } // Common section was identical, longest one wins\n\n\n  return compareNSB(a.length, b.length);\n}\n/**\n * Compare { things U undefined }\n * Things are defined as any native types (string, number, boolean, null, date) and objects\n * We need to compare with undefined as it will be used in indexes\n * In the case of objects and arrays, we deep-compare\n * If two objects dont have the same type, the (arbitrary) type hierarchy is: undefined, null, number, strings, boolean, dates, arrays, objects\n * Return -1 if a < b, 1 if a > b and 0 if a = b (note that equality here is NOT the same as defined in areThingsEqual!)\n *\n * @param {Function} _compareStrings String comparing function, returning -1, 0 or 1, overriding default string comparison (useful for languages with accented letters)\n */\n\n\nfunction compareThings(a, b, _compareStrings) {\n  var aKeys,\n      bKeys,\n      comp,\n      i,\n      compareStrings = _compareStrings || compareNSB; // undefined\n\n  if (a === undefined) {\n    return b === undefined ? 0 : -1;\n  }\n\n  if (b === undefined) {\n    return a === undefined ? 0 : 1;\n  } // null\n\n\n  if (a === null) {\n    return b === null ? 0 : -1;\n  }\n\n  if (b === null) {\n    return a === null ? 0 : 1;\n  } // Numbers\n\n\n  if (typeof a === 'number') {\n    return typeof b === 'number' ? compareNSB(a, b) : -1;\n  }\n\n  if (typeof b === 'number') {\n    return typeof a === 'number' ? compareNSB(a, b) : 1;\n  } // Strings\n\n\n  if (typeof a === 'string') {\n    return typeof b === 'string' ? compareStrings(a, b) : -1;\n  }\n\n  if (typeof b === 'string') {\n    return typeof a === 'string' ? compareStrings(a, b) : 1;\n  } // Booleans\n\n\n  if (typeof a === 'boolean') {\n    return typeof b === 'boolean' ? compareNSB(a, b) : -1;\n  }\n\n  if (typeof b === 'boolean') {\n    return typeof a === 'boolean' ? compareNSB(a, b) : 1;\n  } // Dates\n\n\n  if (util.isDate(a)) {\n    return util.isDate(b) ? compareNSB(a.getTime(), b.getTime()) : -1;\n  }\n\n  if (util.isDate(b)) {\n    return util.isDate(a) ? compareNSB(a.getTime(), b.getTime()) : 1;\n  } // Arrays (first element is most significant and so on)\n\n\n  if (util.isArray(a)) {\n    return util.isArray(b) ? compareArrays(a, b) : -1;\n  }\n\n  if (util.isArray(b)) {\n    return util.isArray(a) ? compareArrays(a, b) : 1;\n  } // Objects\n\n\n  aKeys = Object.keys(a).sort();\n  bKeys = Object.keys(b).sort();\n\n  for (i = 0; i < Math.min(aKeys.length, bKeys.length); i += 1) {\n    comp = compareThings(a[aKeys[i]], b[bKeys[i]]);\n\n    if (comp !== 0) {\n      return comp;\n    }\n  }\n\n  return compareNSB(aKeys.length, bKeys.length);\n} // ==============================================================\n// Updating documents\n// ==============================================================\n\n/**\n * The signature of modifier functions is as follows\n * Their structure is always the same: recursively follow the dot notation while creating\n * the nested documents if needed, then apply the \"last step modifier\"\n * @param {Object} obj The model to modify\n * @param {String} field Can contain dots, in that case that means we will set a subfield recursively\n * @param {Model} value\n */\n\n/**\n * Set a field to a new value\n */\n\n\nlastStepModifierFunctions.$set = function (obj, field, value) {\n  obj[field] = value;\n};\n/**\n * Unset a field\n */\n\n\nlastStepModifierFunctions.$unset = function (obj, field, value) {\n  delete obj[field];\n};\n/**\n * Push an element to the end of an array field\n * Optional modifier $each instead of value to push several values\n * Optional modifier $slice to slice the resulting array, see https://docs.mongodb.org/manual/reference/operator/update/slice/\n * Différeence with MongoDB: if $slice is specified and not $each, we act as if value is an empty array\n */\n\n\nlastStepModifierFunctions.$push = function (obj, field, value) {\n  // Create the array if it doesn't exist\n  if (!obj.hasOwnProperty(field)) {\n    obj[field] = [];\n  }\n\n  if (!util.isArray(obj[field])) {\n    throw new Error(\"Can't $push an element on non-array values\");\n  }\n\n  if (value !== null && typeof value === 'object' && value.$slice && value.$each === undefined) {\n    value.$each = [];\n  }\n\n  if (value !== null && typeof value === 'object' && value.$each) {\n    if (Object.keys(value).length >= 3 || Object.keys(value).length === 2 && value.$slice === undefined) {\n      throw new Error(\"Can only use $slice in cunjunction with $each when $push to array\");\n    }\n\n    if (!util.isArray(value.$each)) {\n      throw new Error(\"$each requires an array value\");\n    }\n\n    value.$each.forEach(function (v) {\n      obj[field].push(v);\n    });\n\n    if (value.$slice === undefined || typeof value.$slice !== 'number') {\n      return;\n    }\n\n    if (value.$slice === 0) {\n      obj[field] = [];\n    } else {\n      var start,\n          end,\n          n = obj[field].length;\n\n      if (value.$slice < 0) {\n        start = Math.max(0, n + value.$slice);\n        end = n;\n      } else if (value.$slice > 0) {\n        start = 0;\n        end = Math.min(n, value.$slice);\n      }\n\n      obj[field] = obj[field].slice(start, end);\n    }\n  } else {\n    obj[field].push(value);\n  }\n};\n/**\n * Add an element to an array field only if it is not already in it\n * No modification if the element is already in the array\n * Note that it doesn't check whether the original array contains duplicates\n */\n\n\nlastStepModifierFunctions.$addToSet = function (obj, field, value) {\n  var addToSet = true; // Create the array if it doesn't exist\n\n  if (!obj.hasOwnProperty(field)) {\n    obj[field] = [];\n  }\n\n  if (!util.isArray(obj[field])) {\n    throw new Error(\"Can't $addToSet an element on non-array values\");\n  }\n\n  if (value !== null && typeof value === 'object' && value.$each) {\n    if (Object.keys(value).length > 1) {\n      throw new Error(\"Can't use another field in conjunction with $each\");\n    }\n\n    if (!util.isArray(value.$each)) {\n      throw new Error(\"$each requires an array value\");\n    }\n\n    value.$each.forEach(function (v) {\n      lastStepModifierFunctions.$addToSet(obj, field, v);\n    });\n  } else {\n    obj[field].forEach(function (v) {\n      if (compareThings(v, value) === 0) {\n        addToSet = false;\n      }\n    });\n\n    if (addToSet) {\n      obj[field].push(value);\n    }\n  }\n};\n/**\n * Remove the first or last element of an array\n */\n\n\nlastStepModifierFunctions.$pop = function (obj, field, value) {\n  if (!util.isArray(obj[field])) {\n    throw new Error(\"Can't $pop an element from non-array values\");\n  }\n\n  if (typeof value !== 'number') {\n    throw new Error(value + \" isn't an integer, can't use it with $pop\");\n  }\n\n  if (value === 0) {\n    return;\n  }\n\n  if (value > 0) {\n    obj[field] = obj[field].slice(0, obj[field].length - 1);\n  } else {\n    obj[field] = obj[field].slice(1);\n  }\n};\n/**\n * Removes all instances of a value from an existing array\n */\n\n\nlastStepModifierFunctions.$pull = function (obj, field, value) {\n  var arr, i;\n\n  if (!util.isArray(obj[field])) {\n    throw new Error(\"Can't $pull an element from non-array values\");\n  }\n\n  arr = obj[field];\n\n  for (i = arr.length - 1; i >= 0; i -= 1) {\n    if (match(arr[i], value)) {\n      arr.splice(i, 1);\n    }\n  }\n};\n/**\n * Increment a numeric field's value\n */\n\n\nlastStepModifierFunctions.$inc = function (obj, field, value) {\n  if (typeof value !== 'number') {\n    throw new Error(value + \" must be a number\");\n  }\n\n  if (typeof obj[field] !== 'number') {\n    if (!_.has(obj, field)) {\n      obj[field] = value;\n    } else {\n      throw new Error(\"Don't use the $inc modifier on non-number fields\");\n    }\n  } else {\n    obj[field] += value;\n  }\n};\n/**\n * Updates the value of the field, only if specified field is greater than the current value of the field\n */\n\n\nlastStepModifierFunctions.$max = function (obj, field, value) {\n  if (typeof obj[field] === 'undefined') {\n    obj[field] = value;\n  } else if (value > obj[field]) {\n    obj[field] = value;\n  }\n};\n/**\n * Updates the value of the field, only if specified field is smaller than the current value of the field\n */\n\n\nlastStepModifierFunctions.$min = function (obj, field, value) {\n  if (typeof obj[field] === 'undefined') {\n    obj[field] = value;\n  } else if (value < obj[field]) {\n    obj[field] = value;\n  }\n}; // Given its name, create the complete modifier function\n\n\nfunction createModifierFunction(modifier) {\n  return function (obj, field, value) {\n    var fieldParts = typeof field === 'string' ? field.split('.') : field;\n\n    if (fieldParts.length === 1) {\n      lastStepModifierFunctions[modifier](obj, field, value);\n    } else {\n      if (obj[fieldParts[0]] === undefined) {\n        if (modifier === '$unset') {\n          return;\n        } // Bad looking specific fix, needs to be generalized modifiers that behave like $unset are implemented\n\n\n        obj[fieldParts[0]] = {};\n      }\n\n      modifierFunctions[modifier](obj[fieldParts[0]], fieldParts.slice(1), value);\n    }\n  };\n} // Actually create all modifier functions\n\n\nObject.keys(lastStepModifierFunctions).forEach(function (modifier) {\n  modifierFunctions[modifier] = createModifierFunction(modifier);\n});\n/**\n * Modify a DB object according to an update query\n */\n\nfunction modify(obj, updateQuery) {\n  var keys = Object.keys(updateQuery),\n      firstChars = _.map(keys, function (item) {\n    return item[0];\n  }),\n      dollarFirstChars = _.filter(firstChars, function (c) {\n    return c === '$';\n  }),\n      newDoc,\n      modifiers;\n\n  if (keys.indexOf('_id') !== -1 && updateQuery._id !== obj._id) {\n    throw new Error(\"You cannot change a document's _id\");\n  }\n\n  if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) {\n    throw new Error(\"You cannot mix modifiers and normal fields\");\n  }\n\n  if (dollarFirstChars.length === 0) {\n    // Simply replace the object with the update query contents\n    newDoc = deepCopy(updateQuery);\n    newDoc._id = obj._id;\n  } else {\n    // Apply modifiers\n    modifiers = _.uniq(keys);\n    newDoc = deepCopy(obj);\n    modifiers.forEach(function (m) {\n      var keys;\n\n      if (!modifierFunctions[m]) {\n        throw new Error(\"Unknown modifier \" + m);\n      } // Can't rely on Object.keys throwing on non objects since ES6\n      // Not 100% satisfying as non objects can be interpreted as objects but no false negatives so we can live with it\n\n\n      if (typeof updateQuery[m] !== 'object') {\n        throw new Error(\"Modifier \" + m + \"'s argument must be an object\");\n      }\n\n      keys = Object.keys(updateQuery[m]);\n      keys.forEach(function (k) {\n        modifierFunctions[m](newDoc, k, updateQuery[m][k]);\n      });\n    });\n  } // Check result is valid and return it\n\n\n  checkObject(newDoc);\n\n  if (obj._id !== newDoc._id) {\n    throw new Error(\"You can't change a document's _id\");\n  }\n\n  return newDoc;\n}\n\n; // ==============================================================\n// Finding documents\n// ==============================================================\n\n/**\n * Get a value from object with dot notation\n * @param {Object} obj\n * @param {String} field\n */\n\nfunction getDotValue(obj, field) {\n  var fieldParts = typeof field === 'string' ? field.split('.') : field,\n      i,\n      objs;\n\n  if (!obj) {\n    return undefined;\n  } // field cannot be empty so that means we should return undefined so that nothing can match\n\n\n  if (fieldParts.length === 0) {\n    return obj;\n  }\n\n  if (fieldParts.length === 1) {\n    return obj[fieldParts[0]];\n  }\n\n  if (util.isArray(obj[fieldParts[0]])) {\n    // If the next field is an integer, return only this item of the array\n    i = parseInt(fieldParts[1], 10);\n\n    if (typeof i === 'number' && !isNaN(i)) {\n      return getDotValue(obj[fieldParts[0]][i], fieldParts.slice(2));\n    } // Return the array of values\n\n\n    objs = new Array();\n\n    for (i = 0; i < obj[fieldParts[0]].length; i += 1) {\n      objs.push(getDotValue(obj[fieldParts[0]][i], fieldParts.slice(1)));\n    }\n\n    return objs;\n  } else {\n    return getDotValue(obj[fieldParts[0]], fieldParts.slice(1));\n  }\n}\n/**\n * Check whether 'things' are equal\n * Things are defined as any native types (string, number, boolean, null, date) and objects\n * In the case of object, we check deep equality\n * Returns true if they are, false otherwise\n */\n\n\nfunction areThingsEqual(a, b) {\n  var aKeys, bKeys, i; // Strings, booleans, numbers, null\n\n  if (a === null || typeof a === 'string' || typeof a === 'boolean' || typeof a === 'number' || b === null || typeof b === 'string' || typeof b === 'boolean' || typeof b === 'number') {\n    return a === b;\n  } // Dates\n\n\n  if (util.isDate(a) || util.isDate(b)) {\n    return util.isDate(a) && util.isDate(b) && a.getTime() === b.getTime();\n  } // Arrays (no match since arrays are used as a $in)\n  // undefined (no match since they mean field doesn't exist and can't be serialized)\n\n\n  if (!(util.isArray(a) && util.isArray(b)) && (util.isArray(a) || util.isArray(b)) || a === undefined || b === undefined) {\n    return false;\n  } // General objects (check for deep equality)\n  // a and b should be objects at this point\n\n\n  try {\n    aKeys = Object.keys(a);\n    bKeys = Object.keys(b);\n  } catch (e) {\n    return false;\n  }\n\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n\n  for (i = 0; i < aKeys.length; i += 1) {\n    if (bKeys.indexOf(aKeys[i]) === -1) {\n      return false;\n    }\n\n    if (!areThingsEqual(a[aKeys[i]], b[aKeys[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Check that two values are comparable\n */\n\n\nfunction areComparable(a, b) {\n  if (typeof a !== 'string' && typeof a !== 'number' && !util.isDate(a) && typeof b !== 'string' && typeof b !== 'number' && !util.isDate(b)) {\n    return false;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Arithmetic and comparison operators\n * @param {Native value} a Value in the object\n * @param {Native value} b Value in the query\n */\n\n\ncomparisonFunctions.$lt = function (a, b) {\n  return areComparable(a, b) && a < b;\n};\n\ncomparisonFunctions.$lte = function (a, b) {\n  return areComparable(a, b) && a <= b;\n};\n\ncomparisonFunctions.$gt = function (a, b) {\n  return areComparable(a, b) && a > b;\n};\n\ncomparisonFunctions.$gte = function (a, b) {\n  return areComparable(a, b) && a >= b;\n};\n\ncomparisonFunctions.$ne = function (a, b) {\n  if (a === undefined) {\n    return true;\n  }\n\n  return !areThingsEqual(a, b);\n};\n\ncomparisonFunctions.$in = function (a, b) {\n  var i;\n\n  if (!util.isArray(b)) {\n    throw new Error(\"$in operator called with a non-array\");\n  }\n\n  for (i = 0; i < b.length; i += 1) {\n    if (areThingsEqual(a, b[i])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\ncomparisonFunctions.$nin = function (a, b) {\n  if (!util.isArray(b)) {\n    throw new Error(\"$nin operator called with a non-array\");\n  }\n\n  return !comparisonFunctions.$in(a, b);\n};\n\ncomparisonFunctions.$regex = function (a, b) {\n  if (!util.isRegExp(b)) {\n    throw new Error(\"$regex operator called with non regular expression\");\n  }\n\n  if (typeof a !== 'string') {\n    return false;\n  } else {\n    return b.test(a);\n  }\n};\n\ncomparisonFunctions.$exists = function (value, exists) {\n  if (exists || exists === '') {\n    // This will be true for all values of exists except false, null, undefined and 0\n    exists = true; // That's strange behaviour (we should only use true/false) but that's the way Mongo does it...\n  } else {\n    exists = false;\n  }\n\n  if (value === undefined) {\n    return !exists;\n  } else {\n    return exists;\n  }\n}; // Specific to arrays\n\n\ncomparisonFunctions.$size = function (obj, value) {\n  if (!util.isArray(obj)) {\n    return false;\n  }\n\n  if (value % 1 !== 0) {\n    throw new Error(\"$size operator called without an integer\");\n  }\n\n  return obj.length == value;\n};\n\ncomparisonFunctions.$elemMatch = function (obj, value) {\n  if (!util.isArray(obj)) {\n    return false;\n  }\n\n  var i = obj.length;\n  var result = false; // Initialize result\n\n  while (i--) {\n    if (match(obj[i], value)) {\n      // If match for array element, return true\n      result = true;\n      break;\n    }\n  }\n\n  return result;\n};\n\narrayComparisonFunctions.$size = true;\narrayComparisonFunctions.$elemMatch = true;\n/**\n * Match any of the subqueries\n * @param {Model} obj\n * @param {Array of Queries} query\n */\n\nlogicalOperators.$or = function (obj, query) {\n  var i;\n\n  if (!util.isArray(query)) {\n    throw new Error(\"$or operator used without an array\");\n  }\n\n  for (i = 0; i < query.length; i += 1) {\n    if (match(obj, query[i])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Match all of the subqueries\n * @param {Model} obj\n * @param {Array of Queries} query\n */\n\n\nlogicalOperators.$and = function (obj, query) {\n  var i;\n\n  if (!util.isArray(query)) {\n    throw new Error(\"$and operator used without an array\");\n  }\n\n  for (i = 0; i < query.length; i += 1) {\n    if (!match(obj, query[i])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Inverted match of the query\n * @param {Model} obj\n * @param {Query} query\n */\n\n\nlogicalOperators.$not = function (obj, query) {\n  return !match(obj, query);\n};\n/**\n * Use a function to match\n * @param {Model} obj\n * @param {Query} query\n */\n\n\nlogicalOperators.$where = function (obj, fn) {\n  var result;\n\n  if (!_.isFunction(fn)) {\n    throw new Error(\"$where operator used without a function\");\n  }\n\n  result = fn.call(obj);\n\n  if (!_.isBoolean(result)) {\n    throw new Error(\"$where function must return boolean\");\n  }\n\n  return result;\n};\n/**\n * Tell if a given document matches a query\n * @param {Object} obj Document to check\n * @param {Object} query\n */\n\n\nfunction match(obj, query) {\n  var queryKeys, queryKey, queryValue, i; // Primitive query against a primitive type\n  // This is a bit of a hack since we construct an object with an arbitrary key only to dereference it later\n  // But I don't have time for a cleaner implementation now\n\n  if (isPrimitiveType(obj) || isPrimitiveType(query)) {\n    return matchQueryPart({\n      needAKey: obj\n    }, 'needAKey', query);\n  } // Normal query\n\n\n  queryKeys = Object.keys(query);\n\n  for (i = 0; i < queryKeys.length; i += 1) {\n    queryKey = queryKeys[i];\n    queryValue = query[queryKey];\n\n    if (queryKey[0] === '$') {\n      if (!logicalOperators[queryKey]) {\n        throw new Error(\"Unknown logical operator \" + queryKey);\n      }\n\n      if (!logicalOperators[queryKey](obj, queryValue)) {\n        return false;\n      }\n    } else {\n      if (!matchQueryPart(obj, queryKey, queryValue)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\n;\n/**\n * Match an object against a specific { key: value } part of a query\n * if the treatObjAsValue flag is set, don't try to match every part separately, but the array as a whole\n */\n\nfunction matchQueryPart(obj, queryKey, queryValue, treatObjAsValue) {\n  var objValue = getDotValue(obj, queryKey),\n      i,\n      keys,\n      firstChars,\n      dollarFirstChars; // Check if the value is an array if we don't force a treatment as value\n\n  if (util.isArray(objValue) && !treatObjAsValue) {\n    // If the queryValue is an array, try to perform an exact match\n    if (util.isArray(queryValue)) {\n      return matchQueryPart(obj, queryKey, queryValue, true);\n    } // Check if we are using an array-specific comparison function\n\n\n    if (queryValue !== null && typeof queryValue === 'object' && !util.isRegExp(queryValue)) {\n      keys = Object.keys(queryValue);\n\n      for (i = 0; i < keys.length; i += 1) {\n        if (arrayComparisonFunctions[keys[i]]) {\n          return matchQueryPart(obj, queryKey, queryValue, true);\n        }\n      }\n    } // If not, treat it as an array of { obj, query } where there needs to be at least one match\n\n\n    for (i = 0; i < objValue.length; i += 1) {\n      if (matchQueryPart({\n        k: objValue[i]\n      }, 'k', queryValue)) {\n        return true;\n      } // k here could be any string\n\n    }\n\n    return false;\n  } // queryValue is an actual object. Determine whether it contains comparison operators\n  // or only normal fields. Mixed objects are not allowed\n\n\n  if (queryValue !== null && typeof queryValue === 'object' && !util.isRegExp(queryValue) && !util.isArray(queryValue)) {\n    keys = Object.keys(queryValue);\n    firstChars = _.map(keys, function (item) {\n      return item[0];\n    });\n    dollarFirstChars = _.filter(firstChars, function (c) {\n      return c === '$';\n    });\n\n    if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) {\n      throw new Error(\"You cannot mix operators and normal fields\");\n    } // queryValue is an object of this form: { $comparisonOperator1: value1, ... }\n\n\n    if (dollarFirstChars.length > 0) {\n      for (i = 0; i < keys.length; i += 1) {\n        if (!comparisonFunctions[keys[i]]) {\n          throw new Error(\"Unknown comparison function \" + keys[i]);\n        }\n\n        if (!comparisonFunctions[keys[i]](objValue, queryValue[keys[i]])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  } // Using regular expressions with basic querying\n\n\n  if (util.isRegExp(queryValue)) {\n    return comparisonFunctions.$regex(objValue, queryValue);\n  } // queryValue is either a native value or a normal object\n  // Basic matching is possible\n\n\n  if (!areThingsEqual(objValue, queryValue)) {\n    return false;\n  }\n\n  return true;\n} // Interface\n\n\nmodule.exports.serialize = serialize;\nmodule.exports.deserialize = deserialize;\nmodule.exports.deepCopy = deepCopy;\nmodule.exports.checkObject = checkObject;\nmodule.exports.isPrimitiveType = isPrimitiveType;\nmodule.exports.modify = modify;\nmodule.exports.getDotValue = getDotValue;\nmodule.exports.match = match;\nmodule.exports.areThingsEqual = areThingsEqual;\nmodule.exports.compareThings = compareThings;","/**\n * Handle every persistence-related task\n * The interface Datastore expects to be implemented is\n * * Persistence.loadDatabase(callback) and callback has signature err\n * * Persistence.persistNewState(newDocs, callback) where newDocs is an array of documents and callback has signature err\n */\nvar storage = require('./storage'),\n    path = require('path'),\n    model = require('./model'),\n    async = require('async'),\n    customUtils = require('./customUtils'),\n    Index = require('./indexes');\n/**\n * Create a new Persistence object for database options.db\n * @param {Datastore} options.db\n * @param {Boolean} options.nodeWebkitAppName Optional, specify the name of your NW app if you want options.filename to be relative to the directory where\n *                                            Node Webkit stores application data such as cookies and local storage (the best place to store data in my opinion)\n */\n\n\nfunction Persistence(options) {\n  var i, j, randomString;\n  this.db = options.db;\n  this.inMemoryOnly = this.db.inMemoryOnly;\n  this.filename = this.db.filename;\n  this.corruptAlertThreshold = options.corruptAlertThreshold !== undefined ? options.corruptAlertThreshold : 0.1;\n\n  if (!this.inMemoryOnly && this.filename && this.filename.charAt(this.filename.length - 1) === '~') {\n    throw new Error(\"The datafile name can't end with a ~, which is reserved for crash safe backup files\");\n  } // After serialization and before deserialization hooks with some basic sanity checks\n\n\n  if (options.afterSerialization && !options.beforeDeserialization) {\n    throw new Error(\"Serialization hook defined but deserialization hook undefined, cautiously refusing to start NeDB to prevent dataloss\");\n  }\n\n  if (!options.afterSerialization && options.beforeDeserialization) {\n    throw new Error(\"Serialization hook undefined but deserialization hook defined, cautiously refusing to start NeDB to prevent dataloss\");\n  }\n\n  this.afterSerialization = options.afterSerialization || function (s) {\n    return s;\n  };\n\n  this.beforeDeserialization = options.beforeDeserialization || function (s) {\n    return s;\n  };\n\n  for (i = 1; i < 30; i += 1) {\n    for (j = 0; j < 10; j += 1) {\n      randomString = customUtils.uid(i);\n\n      if (this.beforeDeserialization(this.afterSerialization(randomString)) !== randomString) {\n        throw new Error(\"beforeDeserialization is not the reverse of afterSerialization, cautiously refusing to start NeDB to prevent dataloss\");\n      }\n    }\n  } // For NW apps, store data in the same directory where NW stores application data\n\n\n  if (this.filename && options.nodeWebkitAppName) {\n    console.log(\"==================================================================\");\n    console.log(\"WARNING: The nodeWebkitAppName option is deprecated\");\n    console.log(\"To get the path to the directory where Node Webkit stores the data\");\n    console.log(\"for your app, use the internal nw.gui module like this\");\n    console.log(\"require('nw.gui').App.dataPath\");\n    console.log(\"See https://github.com/rogerwang/node-webkit/issues/500\");\n    console.log(\"==================================================================\");\n    this.filename = Persistence.getNWAppFilename(options.nodeWebkitAppName, this.filename);\n  }\n}\n\n;\n/**\n * Check if a directory exists and create it on the fly if it is not the case\n * cb is optional, signature: err\n */\n\nPersistence.ensureDirectoryExists = function (dir, cb) {\n  var callback = cb || function () {};\n\n  storage.mkdirp(dir, function (err) {\n    return callback(err);\n  });\n};\n/**\n * Return the path the datafile if the given filename is relative to the directory where Node Webkit stores\n * data for this application. Probably the best place to store data\n */\n\n\nPersistence.getNWAppFilename = function (appName, relativeFilename) {\n  var home;\n\n  switch (process.platform) {\n    case 'win32':\n    case 'win64':\n      home = process.env.LOCALAPPDATA || process.env.APPDATA;\n\n      if (!home) {\n        throw new Error(\"Couldn't find the base application data folder\");\n      }\n\n      home = path.join(home, appName);\n      break;\n\n    case 'darwin':\n      home = process.env.HOME;\n\n      if (!home) {\n        throw new Error(\"Couldn't find the base application data directory\");\n      }\n\n      home = path.join(home, 'Library', 'Application Support', appName);\n      break;\n\n    case 'linux':\n      home = process.env.HOME;\n\n      if (!home) {\n        throw new Error(\"Couldn't find the base application data directory\");\n      }\n\n      home = path.join(home, '.config', appName);\n      break;\n\n    default:\n      throw new Error(\"Can't use the Node Webkit relative path for platform \" + process.platform);\n      break;\n  }\n\n  return path.join(home, 'nedb-data', relativeFilename);\n};\n/**\n * Persist cached database\n * This serves as a compaction function since the cache always contains only the number of documents in the collection\n * while the data file is append-only so it may grow larger\n * @param {Function} cb Optional callback, signature: err\n */\n\n\nPersistence.prototype.persistCachedDatabase = function (cb) {\n  var callback = cb || function () {},\n      toPersist = '',\n      self = this;\n\n  if (this.inMemoryOnly) {\n    return callback(null);\n  }\n\n  this.db.getAllData().forEach(function (doc) {\n    toPersist += self.afterSerialization(model.serialize(doc)) + '\\n';\n  });\n  Object.keys(this.db.indexes).forEach(function (fieldName) {\n    if (fieldName != \"_id\") {\n      // The special _id index is managed by datastore.js, the others need to be persisted\n      toPersist += self.afterSerialization(model.serialize({\n        $$indexCreated: {\n          fieldName: fieldName,\n          unique: self.db.indexes[fieldName].unique,\n          sparse: self.db.indexes[fieldName].sparse\n        }\n      })) + '\\n';\n    }\n  });\n  storage.crashSafeWriteFile(this.filename, toPersist, function (err) {\n    if (err) {\n      return callback(err);\n    }\n\n    self.db.emit('compaction.done');\n    return callback(null);\n  });\n};\n/**\n * Queue a rewrite of the datafile\n */\n\n\nPersistence.prototype.compactDatafile = function () {\n  this.db.executor.push({\n    this: this,\n    fn: this.persistCachedDatabase,\n    arguments: []\n  });\n};\n/**\n * Set automatic compaction every interval ms\n * @param {Number} interval in milliseconds, with an enforced minimum of 5 seconds\n */\n\n\nPersistence.prototype.setAutocompactionInterval = function (interval) {\n  var self = this,\n      minInterval = 5000,\n      realInterval = Math.max(interval || 0, minInterval);\n  this.stopAutocompaction();\n  this.autocompactionIntervalId = setInterval(function () {\n    self.compactDatafile();\n  }, realInterval);\n};\n/**\n * Stop autocompaction (do nothing if autocompaction was not running)\n */\n\n\nPersistence.prototype.stopAutocompaction = function () {\n  if (this.autocompactionIntervalId) {\n    clearInterval(this.autocompactionIntervalId);\n  }\n};\n/**\n * Persist new state for the given newDocs (can be insertion, update or removal)\n * Use an append-only format\n * @param {Array} newDocs Can be empty if no doc was updated/removed\n * @param {Function} cb Optional, signature: err\n */\n\n\nPersistence.prototype.persistNewState = function (newDocs, cb) {\n  var self = this,\n      toPersist = '',\n      callback = cb || function () {}; // In-memory only datastore\n\n\n  if (self.inMemoryOnly) {\n    return callback(null);\n  }\n\n  newDocs.forEach(function (doc) {\n    toPersist += self.afterSerialization(model.serialize(doc)) + '\\n';\n  });\n\n  if (toPersist.length === 0) {\n    return callback(null);\n  }\n\n  storage.appendFile(self.filename, toPersist, 'utf8', function (err) {\n    return callback(err);\n  });\n};\n/**\n * From a database's raw data, return the corresponding\n * machine understandable collection\n */\n\n\nPersistence.prototype.treatRawData = function (rawData) {\n  var data = rawData.split('\\n'),\n      dataById = {},\n      tdata = [],\n      i,\n      indexes = {},\n      corruptItems = -1 // Last line of every data file is usually blank so not really corrupt\n  ;\n\n  for (i = 0; i < data.length; i += 1) {\n    var doc;\n\n    try {\n      doc = model.deserialize(this.beforeDeserialization(data[i]));\n\n      if (doc._id) {\n        if (doc.$$deleted === true) {\n          delete dataById[doc._id];\n        } else {\n          dataById[doc._id] = doc;\n        }\n      } else if (doc.$$indexCreated && doc.$$indexCreated.fieldName != undefined) {\n        indexes[doc.$$indexCreated.fieldName] = doc.$$indexCreated;\n      } else if (typeof doc.$$indexRemoved === \"string\") {\n        delete indexes[doc.$$indexRemoved];\n      }\n    } catch (e) {\n      corruptItems += 1;\n    }\n  } // A bit lenient on corruption\n\n\n  if (data.length > 0 && corruptItems / data.length > this.corruptAlertThreshold) {\n    throw new Error(\"More than \" + Math.floor(100 * this.corruptAlertThreshold) + \"% of the data file is corrupt, the wrong beforeDeserialization hook may be used. Cautiously refusing to start NeDB to prevent dataloss\");\n  }\n\n  Object.keys(dataById).forEach(function (k) {\n    tdata.push(dataById[k]);\n  });\n  return {\n    data: tdata,\n    indexes: indexes\n  };\n};\n/**\n * Load the database\n * 1) Create all indexes\n * 2) Insert all data\n * 3) Compact the database\n * This means pulling data out of the data file or creating it if it doesn't exist\n * Also, all data is persisted right away, which has the effect of compacting the database file\n * This operation is very quick at startup for a big collection (60ms for ~10k docs)\n * @param {Function} cb Optional callback, signature: err\n */\n\n\nPersistence.prototype.loadDatabase = function (cb) {\n  var callback = cb || function () {},\n      self = this;\n\n  self.db.resetIndexes(); // In-memory only datastore\n\n  if (self.inMemoryOnly) {\n    return callback(null);\n  }\n\n  async.waterfall([function (cb) {\n    Persistence.ensureDirectoryExists(path.dirname(self.filename), function (err) {\n      storage.ensureDatafileIntegrity(self.filename, function (err) {\n        storage.readFile(self.filename, 'utf8', function (err, rawData) {\n          if (err) {\n            return cb(err);\n          }\n\n          try {\n            var treatedData = self.treatRawData(rawData);\n          } catch (e) {\n            return cb(e);\n          } // Recreate all indexes in the datafile\n\n\n          Object.keys(treatedData.indexes).forEach(function (key) {\n            self.db.indexes[key] = new Index(treatedData.indexes[key]);\n          }); // Fill cached database (i.e. all indexes) with data\n\n          try {\n            self.db.resetIndexes(treatedData.data);\n          } catch (e) {\n            self.db.resetIndexes(); // Rollback any index which didn't fail\n\n            return cb(e);\n          }\n\n          self.db.persistence.persistCachedDatabase(cb);\n        });\n      });\n    });\n  }], function (err) {\n    if (err) {\n      return callback(err);\n    }\n\n    self.db.executor.processBuffer();\n    return callback(null);\n  });\n}; // Interface\n\n\nmodule.exports = Persistence;","/**\n * Return an array with the numbers from 0 to n-1, in a random order\n */\nfunction getRandomArray(n) {\n  var res, next;\n\n  if (n === 0) {\n    return [];\n  }\n\n  if (n === 1) {\n    return [0];\n  }\n\n  res = getRandomArray(n - 1);\n  next = Math.floor(Math.random() * n);\n  res.splice(next, 0, n - 1); // Add n-1 at a random position in the array\n\n  return res;\n}\n\n;\nmodule.exports.getRandomArray = getRandomArray;\n/*\n * Default compareKeys function will work for numbers, strings and dates\n */\n\nfunction defaultCompareKeysFunction(a, b) {\n  if (a < b) {\n    return -1;\n  }\n\n  if (a > b) {\n    return 1;\n  }\n\n  if (a === b) {\n    return 0;\n  }\n\n  var err = new Error(\"Couldn't compare elements\");\n  err.a = a;\n  err.b = b;\n  throw err;\n}\n\nmodule.exports.defaultCompareKeysFunction = defaultCompareKeysFunction;\n/**\n * Check whether two values are equal (used in non-unique deletion)\n */\n\nfunction defaultCheckValueEquality(a, b) {\n  return a === b;\n}\n\nmodule.exports.defaultCheckValueEquality = defaultCheckValueEquality;","/**\n * Simple binary search tree\n */\nvar customUtils = require('./customUtils');\n/**\n * Constructor\n * @param {Object} options Optional\n * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n * @param {Key}      options.key Initialize this BST's key with key\n * @param {Value}    options.value Initialize this BST's data with [value]\n * @param {Function} options.compareKeys Initialize this BST's compareKeys\n */\n\n\nfunction BinarySearchTree(options) {\n  options = options || {};\n  this.left = null;\n  this.right = null;\n  this.parent = options.parent !== undefined ? options.parent : null;\n\n  if (options.hasOwnProperty('key')) {\n    this.key = options.key;\n  }\n\n  this.data = options.hasOwnProperty('value') ? [options.value] : [];\n  this.unique = options.unique || false;\n  this.compareKeys = options.compareKeys || customUtils.defaultCompareKeysFunction;\n  this.checkValueEquality = options.checkValueEquality || customUtils.defaultCheckValueEquality;\n} // ================================\n// Methods used to test the tree\n// ================================\n\n/**\n * Get the descendant with max key\n */\n\n\nBinarySearchTree.prototype.getMaxKeyDescendant = function () {\n  if (this.right) {\n    return this.right.getMaxKeyDescendant();\n  } else {\n    return this;\n  }\n};\n/**\n * Get the maximum key\n */\n\n\nBinarySearchTree.prototype.getMaxKey = function () {\n  return this.getMaxKeyDescendant().key;\n};\n/**\n * Get the descendant with min key\n */\n\n\nBinarySearchTree.prototype.getMinKeyDescendant = function () {\n  if (this.left) {\n    return this.left.getMinKeyDescendant();\n  } else {\n    return this;\n  }\n};\n/**\n * Get the minimum key\n */\n\n\nBinarySearchTree.prototype.getMinKey = function () {\n  return this.getMinKeyDescendant().key;\n};\n/**\n * Check that all nodes (incl. leaves) fullfil condition given by fn\n * test is a function passed every (key, data) and which throws if the condition is not met\n */\n\n\nBinarySearchTree.prototype.checkAllNodesFullfillCondition = function (test) {\n  if (!this.hasOwnProperty('key')) {\n    return;\n  }\n\n  test(this.key, this.data);\n\n  if (this.left) {\n    this.left.checkAllNodesFullfillCondition(test);\n  }\n\n  if (this.right) {\n    this.right.checkAllNodesFullfillCondition(test);\n  }\n};\n/**\n * Check that the core BST properties on node ordering are verified\n * Throw if they aren't\n */\n\n\nBinarySearchTree.prototype.checkNodeOrdering = function () {\n  var self = this;\n\n  if (!this.hasOwnProperty('key')) {\n    return;\n  }\n\n  if (this.left) {\n    this.left.checkAllNodesFullfillCondition(function (k) {\n      if (self.compareKeys(k, self.key) >= 0) {\n        throw new Error('Tree with root ' + self.key + ' is not a binary search tree');\n      }\n    });\n    this.left.checkNodeOrdering();\n  }\n\n  if (this.right) {\n    this.right.checkAllNodesFullfillCondition(function (k) {\n      if (self.compareKeys(k, self.key) <= 0) {\n        throw new Error('Tree with root ' + self.key + ' is not a binary search tree');\n      }\n    });\n    this.right.checkNodeOrdering();\n  }\n};\n/**\n * Check that all pointers are coherent in this tree\n */\n\n\nBinarySearchTree.prototype.checkInternalPointers = function () {\n  if (this.left) {\n    if (this.left.parent !== this) {\n      throw new Error('Parent pointer broken for key ' + this.key);\n    }\n\n    this.left.checkInternalPointers();\n  }\n\n  if (this.right) {\n    if (this.right.parent !== this) {\n      throw new Error('Parent pointer broken for key ' + this.key);\n    }\n\n    this.right.checkInternalPointers();\n  }\n};\n/**\n * Check that a tree is a BST as defined here (node ordering and pointer references)\n */\n\n\nBinarySearchTree.prototype.checkIsBST = function () {\n  this.checkNodeOrdering();\n  this.checkInternalPointers();\n\n  if (this.parent) {\n    throw new Error(\"The root shouldn't have a parent\");\n  }\n};\n/**\n * Get number of keys inserted\n */\n\n\nBinarySearchTree.prototype.getNumberOfKeys = function () {\n  var res;\n\n  if (!this.hasOwnProperty('key')) {\n    return 0;\n  }\n\n  res = 1;\n\n  if (this.left) {\n    res += this.left.getNumberOfKeys();\n  }\n\n  if (this.right) {\n    res += this.right.getNumberOfKeys();\n  }\n\n  return res;\n}; // ============================================\n// Methods used to actually work on the tree\n// ============================================\n\n/**\n * Create a BST similar (i.e. same options except for key and value) to the current one\n * Use the same constructor (i.e. BinarySearchTree, AVLTree etc)\n * @param {Object} options see constructor\n */\n\n\nBinarySearchTree.prototype.createSimilar = function (options) {\n  options = options || {};\n  options.unique = this.unique;\n  options.compareKeys = this.compareKeys;\n  options.checkValueEquality = this.checkValueEquality;\n  return new this.constructor(options);\n};\n/**\n * Create the left child of this BST and return it\n */\n\n\nBinarySearchTree.prototype.createLeftChild = function (options) {\n  var leftChild = this.createSimilar(options);\n  leftChild.parent = this;\n  this.left = leftChild;\n  return leftChild;\n};\n/**\n * Create the right child of this BST and return it\n */\n\n\nBinarySearchTree.prototype.createRightChild = function (options) {\n  var rightChild = this.createSimilar(options);\n  rightChild.parent = this;\n  this.right = rightChild;\n  return rightChild;\n};\n/**\n * Insert a new element\n */\n\n\nBinarySearchTree.prototype.insert = function (key, value) {\n  // Empty tree, insert as root\n  if (!this.hasOwnProperty('key')) {\n    this.key = key;\n    this.data.push(value);\n    return;\n  } // Same key as root\n\n\n  if (this.compareKeys(this.key, key) === 0) {\n    if (this.unique) {\n      var err = new Error(\"Can't insert key \" + key + \", it violates the unique constraint\");\n      err.key = key;\n      err.errorType = 'uniqueViolated';\n      throw err;\n    } else {\n      this.data.push(value);\n    }\n\n    return;\n  }\n\n  if (this.compareKeys(key, this.key) < 0) {\n    // Insert in left subtree\n    if (this.left) {\n      this.left.insert(key, value);\n    } else {\n      this.createLeftChild({\n        key: key,\n        value: value\n      });\n    }\n  } else {\n    // Insert in right subtree\n    if (this.right) {\n      this.right.insert(key, value);\n    } else {\n      this.createRightChild({\n        key: key,\n        value: value\n      });\n    }\n  }\n};\n/**\n * Search for all data corresponding to a key\n */\n\n\nBinarySearchTree.prototype.search = function (key) {\n  if (!this.hasOwnProperty('key')) {\n    return [];\n  }\n\n  if (this.compareKeys(this.key, key) === 0) {\n    return this.data;\n  }\n\n  if (this.compareKeys(key, this.key) < 0) {\n    if (this.left) {\n      return this.left.search(key);\n    } else {\n      return [];\n    }\n  } else {\n    if (this.right) {\n      return this.right.search(key);\n    } else {\n      return [];\n    }\n  }\n};\n/**\n * Return a function that tells whether a given key matches a lower bound\n */\n\n\nBinarySearchTree.prototype.getLowerBoundMatcher = function (query) {\n  var self = this; // No lower bound\n\n  if (!query.hasOwnProperty('$gt') && !query.hasOwnProperty('$gte')) {\n    return function () {\n      return true;\n    };\n  }\n\n  if (query.hasOwnProperty('$gt') && query.hasOwnProperty('$gte')) {\n    if (self.compareKeys(query.$gte, query.$gt) === 0) {\n      return function (key) {\n        return self.compareKeys(key, query.$gt) > 0;\n      };\n    }\n\n    if (self.compareKeys(query.$gte, query.$gt) > 0) {\n      return function (key) {\n        return self.compareKeys(key, query.$gte) >= 0;\n      };\n    } else {\n      return function (key) {\n        return self.compareKeys(key, query.$gt) > 0;\n      };\n    }\n  }\n\n  if (query.hasOwnProperty('$gt')) {\n    return function (key) {\n      return self.compareKeys(key, query.$gt) > 0;\n    };\n  } else {\n    return function (key) {\n      return self.compareKeys(key, query.$gte) >= 0;\n    };\n  }\n};\n/**\n * Return a function that tells whether a given key matches an upper bound\n */\n\n\nBinarySearchTree.prototype.getUpperBoundMatcher = function (query) {\n  var self = this; // No lower bound\n\n  if (!query.hasOwnProperty('$lt') && !query.hasOwnProperty('$lte')) {\n    return function () {\n      return true;\n    };\n  }\n\n  if (query.hasOwnProperty('$lt') && query.hasOwnProperty('$lte')) {\n    if (self.compareKeys(query.$lte, query.$lt) === 0) {\n      return function (key) {\n        return self.compareKeys(key, query.$lt) < 0;\n      };\n    }\n\n    if (self.compareKeys(query.$lte, query.$lt) < 0) {\n      return function (key) {\n        return self.compareKeys(key, query.$lte) <= 0;\n      };\n    } else {\n      return function (key) {\n        return self.compareKeys(key, query.$lt) < 0;\n      };\n    }\n  }\n\n  if (query.hasOwnProperty('$lt')) {\n    return function (key) {\n      return self.compareKeys(key, query.$lt) < 0;\n    };\n  } else {\n    return function (key) {\n      return self.compareKeys(key, query.$lte) <= 0;\n    };\n  }\n}; // Append all elements in toAppend to array\n\n\nfunction append(array, toAppend) {\n  var i;\n\n  for (i = 0; i < toAppend.length; i += 1) {\n    array.push(toAppend[i]);\n  }\n}\n/**\n * Get all data for a key between bounds\n * Return it in key order\n * @param {Object} query Mongo-style query where keys are $lt, $lte, $gt or $gte (other keys are not considered)\n * @param {Functions} lbm/ubm matching functions calculated at the first recursive step\n */\n\n\nBinarySearchTree.prototype.betweenBounds = function (query, lbm, ubm) {\n  var res = [];\n\n  if (!this.hasOwnProperty('key')) {\n    return [];\n  } // Empty tree\n\n\n  lbm = lbm || this.getLowerBoundMatcher(query);\n  ubm = ubm || this.getUpperBoundMatcher(query);\n\n  if (lbm(this.key) && this.left) {\n    append(res, this.left.betweenBounds(query, lbm, ubm));\n  }\n\n  if (lbm(this.key) && ubm(this.key)) {\n    append(res, this.data);\n  }\n\n  if (ubm(this.key) && this.right) {\n    append(res, this.right.betweenBounds(query, lbm, ubm));\n  }\n\n  return res;\n};\n/**\n * Delete the current node if it is a leaf\n * Return true if it was deleted\n */\n\n\nBinarySearchTree.prototype.deleteIfLeaf = function () {\n  if (this.left || this.right) {\n    return false;\n  } // The leaf is itself a root\n\n\n  if (!this.parent) {\n    delete this.key;\n    this.data = [];\n    return true;\n  }\n\n  if (this.parent.left === this) {\n    this.parent.left = null;\n  } else {\n    this.parent.right = null;\n  }\n\n  return true;\n};\n/**\n * Delete the current node if it has only one child\n * Return true if it was deleted\n */\n\n\nBinarySearchTree.prototype.deleteIfOnlyOneChild = function () {\n  var child;\n\n  if (this.left && !this.right) {\n    child = this.left;\n  }\n\n  if (!this.left && this.right) {\n    child = this.right;\n  }\n\n  if (!child) {\n    return false;\n  } // Root\n\n\n  if (!this.parent) {\n    this.key = child.key;\n    this.data = child.data;\n    this.left = null;\n\n    if (child.left) {\n      this.left = child.left;\n      child.left.parent = this;\n    }\n\n    this.right = null;\n\n    if (child.right) {\n      this.right = child.right;\n      child.right.parent = this;\n    }\n\n    return true;\n  }\n\n  if (this.parent.left === this) {\n    this.parent.left = child;\n    child.parent = this.parent;\n  } else {\n    this.parent.right = child;\n    child.parent = this.parent;\n  }\n\n  return true;\n};\n/**\n * Delete a key or just a value\n * @param {Key} key\n * @param {Value} value Optional. If not set, the whole key is deleted. If set, only this value is deleted\n */\n\n\nBinarySearchTree.prototype.delete = function (key, value) {\n  var newData = [],\n      replaceWith,\n      self = this;\n\n  if (!this.hasOwnProperty('key')) {\n    return;\n  }\n\n  if (this.compareKeys(key, this.key) < 0) {\n    if (this.left) {\n      this.left.delete(key, value);\n    }\n\n    return;\n  }\n\n  if (this.compareKeys(key, this.key) > 0) {\n    if (this.right) {\n      this.right.delete(key, value);\n    }\n\n    return;\n  }\n\n  if (!this.compareKeys(key, this.key) === 0) {\n    return;\n  } // Delete only a value\n\n\n  if (this.data.length > 1 && value !== undefined) {\n    this.data.forEach(function (d) {\n      if (!self.checkValueEquality(d, value)) {\n        newData.push(d);\n      }\n    });\n    self.data = newData;\n    return;\n  } // Delete the whole node\n\n\n  if (this.deleteIfLeaf()) {\n    return;\n  }\n\n  if (this.deleteIfOnlyOneChild()) {\n    return;\n  } // We are in the case where the node to delete has two children\n\n\n  if (Math.random() >= 0.5) {\n    // Randomize replacement to avoid unbalancing the tree too much\n    // Use the in-order predecessor\n    replaceWith = this.left.getMaxKeyDescendant();\n    this.key = replaceWith.key;\n    this.data = replaceWith.data;\n\n    if (this === replaceWith.parent) {\n      // Special case\n      this.left = replaceWith.left;\n\n      if (replaceWith.left) {\n        replaceWith.left.parent = replaceWith.parent;\n      }\n    } else {\n      replaceWith.parent.right = replaceWith.left;\n\n      if (replaceWith.left) {\n        replaceWith.left.parent = replaceWith.parent;\n      }\n    }\n  } else {\n    // Use the in-order successor\n    replaceWith = this.right.getMinKeyDescendant();\n    this.key = replaceWith.key;\n    this.data = replaceWith.data;\n\n    if (this === replaceWith.parent) {\n      // Special case\n      this.right = replaceWith.right;\n\n      if (replaceWith.right) {\n        replaceWith.right.parent = replaceWith.parent;\n      }\n    } else {\n      replaceWith.parent.left = replaceWith.right;\n\n      if (replaceWith.right) {\n        replaceWith.right.parent = replaceWith.parent;\n      }\n    }\n  }\n};\n/**\n * Execute a function on every node of the tree, in key order\n * @param {Function} fn Signature: node. Most useful will probably be node.key and node.data\n */\n\n\nBinarySearchTree.prototype.executeOnEveryNode = function (fn) {\n  if (this.left) {\n    this.left.executeOnEveryNode(fn);\n  }\n\n  fn(this);\n\n  if (this.right) {\n    this.right.executeOnEveryNode(fn);\n  }\n};\n/**\n * Pretty print a tree\n * @param {Boolean} printData To print the nodes' data along with the key\n */\n\n\nBinarySearchTree.prototype.prettyPrint = function (printData, spacing) {\n  spacing = spacing || \"\";\n  console.log(spacing + \"* \" + this.key);\n\n  if (printData) {\n    console.log(spacing + \"* \" + this.data);\n  }\n\n  if (!this.left && !this.right) {\n    return;\n  }\n\n  if (this.left) {\n    this.left.prettyPrint(printData, spacing + \"  \");\n  } else {\n    console.log(spacing + \"  *\");\n  }\n\n  if (this.right) {\n    this.right.prettyPrint(printData, spacing + \"  \");\n  } else {\n    console.log(spacing + \"  *\");\n  }\n}; // Interface\n\n\nmodule.exports = BinarySearchTree;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","/*global setImmediate: false, setTimeout: false, console: false */\n(function () {\n  var async = {}; // global on the server, window in the browser\n\n  var root, previous_async;\n  root = this;\n\n  if (root != null) {\n    previous_async = root.async;\n  }\n\n  async.noConflict = function () {\n    root.async = previous_async;\n    return async;\n  };\n\n  function only_once(fn) {\n    var called = false;\n    return function () {\n      if (called) throw new Error(\"Callback was already called.\");\n      called = true;\n      fn.apply(root, arguments);\n    };\n  } //// cross-browser compatiblity functions ////\n\n\n  var _each = function _each(arr, iterator) {\n    if (arr.forEach) {\n      return arr.forEach(iterator);\n    }\n\n    for (var i = 0; i < arr.length; i += 1) {\n      iterator(arr[i], i, arr);\n    }\n  };\n\n  var _map = function _map(arr, iterator) {\n    if (arr.map) {\n      return arr.map(iterator);\n    }\n\n    var results = [];\n\n    _each(arr, function (x, i, a) {\n      results.push(iterator(x, i, a));\n    });\n\n    return results;\n  };\n\n  var _reduce = function _reduce(arr, iterator, memo) {\n    if (arr.reduce) {\n      return arr.reduce(iterator, memo);\n    }\n\n    _each(arr, function (x, i, a) {\n      memo = iterator(memo, x, i, a);\n    });\n\n    return memo;\n  };\n\n  var _keys = function _keys(obj) {\n    if (Object.keys) {\n      return Object.keys(obj);\n    }\n\n    var keys = [];\n\n    for (var k in obj) {\n      if (obj.hasOwnProperty(k)) {\n        keys.push(k);\n      }\n    }\n\n    return keys;\n  }; //// exported async module functions ////\n  //// nextTick implementation with browser-compatible fallback ////\n\n\n  if (typeof process === 'undefined' || !process.nextTick) {\n    if (typeof setImmediate === 'function') {\n      async.nextTick = function (fn) {\n        // not a direct alias for IE10 compatibility\n        setImmediate(fn);\n      };\n\n      async.setImmediate = async.nextTick;\n    } else {\n      async.nextTick = function (fn) {\n        setTimeout(fn, 0);\n      };\n\n      async.setImmediate = async.nextTick;\n    }\n  } else {\n    async.nextTick = process.nextTick;\n\n    if (typeof setImmediate !== 'undefined') {\n      async.setImmediate = function (fn) {\n        // not a direct alias for IE10 compatibility\n        setImmediate(fn);\n      };\n    } else {\n      async.setImmediate = async.nextTick;\n    }\n  }\n\n  async.each = function (arr, iterator, callback) {\n    callback = callback || function () {};\n\n    if (!arr.length) {\n      return callback();\n    }\n\n    var completed = 0;\n\n    _each(arr, function (x) {\n      iterator(x, only_once(function (err) {\n        if (err) {\n          callback(err);\n\n          callback = function callback() {};\n        } else {\n          completed += 1;\n\n          if (completed >= arr.length) {\n            callback(null);\n          }\n        }\n      }));\n    });\n  };\n\n  async.forEach = async.each;\n\n  async.eachSeries = function (arr, iterator, callback) {\n    callback = callback || function () {};\n\n    if (!arr.length) {\n      return callback();\n    }\n\n    var completed = 0;\n\n    var iterate = function iterate() {\n      iterator(arr[completed], function (err) {\n        if (err) {\n          callback(err);\n\n          callback = function callback() {};\n        } else {\n          completed += 1;\n\n          if (completed >= arr.length) {\n            callback(null);\n          } else {\n            iterate();\n          }\n        }\n      });\n    };\n\n    iterate();\n  };\n\n  async.forEachSeries = async.eachSeries;\n\n  async.eachLimit = function (arr, limit, iterator, callback) {\n    var fn = _eachLimit(limit);\n\n    fn.apply(null, [arr, iterator, callback]);\n  };\n\n  async.forEachLimit = async.eachLimit;\n\n  var _eachLimit = function _eachLimit(limit) {\n    return function (arr, iterator, callback) {\n      callback = callback || function () {};\n\n      if (!arr.length || limit <= 0) {\n        return callback();\n      }\n\n      var completed = 0;\n      var started = 0;\n      var running = 0;\n\n      (function replenish() {\n        if (completed >= arr.length) {\n          return callback();\n        }\n\n        while (running < limit && started < arr.length) {\n          started += 1;\n          running += 1;\n          iterator(arr[started - 1], function (err) {\n            if (err) {\n              callback(err);\n\n              callback = function callback() {};\n            } else {\n              completed += 1;\n              running -= 1;\n\n              if (completed >= arr.length) {\n                callback();\n              } else {\n                replenish();\n              }\n            }\n          });\n        }\n      })();\n    };\n  };\n\n  var doParallel = function doParallel(fn) {\n    return function () {\n      var args = Array.prototype.slice.call(arguments);\n      return fn.apply(null, [async.each].concat(args));\n    };\n  };\n\n  var doParallelLimit = function doParallelLimit(limit, fn) {\n    return function () {\n      var args = Array.prototype.slice.call(arguments);\n      return fn.apply(null, [_eachLimit(limit)].concat(args));\n    };\n  };\n\n  var doSeries = function doSeries(fn) {\n    return function () {\n      var args = Array.prototype.slice.call(arguments);\n      return fn.apply(null, [async.eachSeries].concat(args));\n    };\n  };\n\n  var _asyncMap = function _asyncMap(eachfn, arr, iterator, callback) {\n    var results = [];\n    arr = _map(arr, function (x, i) {\n      return {\n        index: i,\n        value: x\n      };\n    });\n    eachfn(arr, function (x, callback) {\n      iterator(x.value, function (err, v) {\n        results[x.index] = v;\n        callback(err);\n      });\n    }, function (err) {\n      callback(err, results);\n    });\n  };\n\n  async.map = doParallel(_asyncMap);\n  async.mapSeries = doSeries(_asyncMap);\n\n  async.mapLimit = function (arr, limit, iterator, callback) {\n    return _mapLimit(limit)(arr, iterator, callback);\n  };\n\n  var _mapLimit = function _mapLimit(limit) {\n    return doParallelLimit(limit, _asyncMap);\n  }; // reduce only has a series version, as doing reduce in parallel won't\n  // work in many situations.\n\n\n  async.reduce = function (arr, memo, iterator, callback) {\n    async.eachSeries(arr, function (x, callback) {\n      iterator(memo, x, function (err, v) {\n        memo = v;\n        callback(err);\n      });\n    }, function (err) {\n      callback(err, memo);\n    });\n  }; // inject alias\n\n\n  async.inject = async.reduce; // foldl alias\n\n  async.foldl = async.reduce;\n\n  async.reduceRight = function (arr, memo, iterator, callback) {\n    var reversed = _map(arr, function (x) {\n      return x;\n    }).reverse();\n\n    async.reduce(reversed, memo, iterator, callback);\n  }; // foldr alias\n\n\n  async.foldr = async.reduceRight;\n\n  var _filter = function _filter(eachfn, arr, iterator, callback) {\n    var results = [];\n    arr = _map(arr, function (x, i) {\n      return {\n        index: i,\n        value: x\n      };\n    });\n    eachfn(arr, function (x, callback) {\n      iterator(x.value, function (v) {\n        if (v) {\n          results.push(x);\n        }\n\n        callback();\n      });\n    }, function (err) {\n      callback(_map(results.sort(function (a, b) {\n        return a.index - b.index;\n      }), function (x) {\n        return x.value;\n      }));\n    });\n  };\n\n  async.filter = doParallel(_filter);\n  async.filterSeries = doSeries(_filter); // select alias\n\n  async.select = async.filter;\n  async.selectSeries = async.filterSeries;\n\n  var _reject = function _reject(eachfn, arr, iterator, callback) {\n    var results = [];\n    arr = _map(arr, function (x, i) {\n      return {\n        index: i,\n        value: x\n      };\n    });\n    eachfn(arr, function (x, callback) {\n      iterator(x.value, function (v) {\n        if (!v) {\n          results.push(x);\n        }\n\n        callback();\n      });\n    }, function (err) {\n      callback(_map(results.sort(function (a, b) {\n        return a.index - b.index;\n      }), function (x) {\n        return x.value;\n      }));\n    });\n  };\n\n  async.reject = doParallel(_reject);\n  async.rejectSeries = doSeries(_reject);\n\n  var _detect = function _detect(eachfn, arr, iterator, main_callback) {\n    eachfn(arr, function (x, callback) {\n      iterator(x, function (result) {\n        if (result) {\n          main_callback(x);\n\n          main_callback = function main_callback() {};\n        } else {\n          callback();\n        }\n      });\n    }, function (err) {\n      main_callback();\n    });\n  };\n\n  async.detect = doParallel(_detect);\n  async.detectSeries = doSeries(_detect);\n\n  async.some = function (arr, iterator, main_callback) {\n    async.each(arr, function (x, callback) {\n      iterator(x, function (v) {\n        if (v) {\n          main_callback(true);\n\n          main_callback = function main_callback() {};\n        }\n\n        callback();\n      });\n    }, function (err) {\n      main_callback(false);\n    });\n  }; // any alias\n\n\n  async.any = async.some;\n\n  async.every = function (arr, iterator, main_callback) {\n    async.each(arr, function (x, callback) {\n      iterator(x, function (v) {\n        if (!v) {\n          main_callback(false);\n\n          main_callback = function main_callback() {};\n        }\n\n        callback();\n      });\n    }, function (err) {\n      main_callback(true);\n    });\n  }; // all alias\n\n\n  async.all = async.every;\n\n  async.sortBy = function (arr, iterator, callback) {\n    async.map(arr, function (x, callback) {\n      iterator(x, function (err, criteria) {\n        if (err) {\n          callback(err);\n        } else {\n          callback(null, {\n            value: x,\n            criteria: criteria\n          });\n        }\n      });\n    }, function (err, results) {\n      if (err) {\n        return callback(err);\n      } else {\n        var fn = function fn(left, right) {\n          var a = left.criteria,\n              b = right.criteria;\n          return a < b ? -1 : a > b ? 1 : 0;\n        };\n\n        callback(null, _map(results.sort(fn), function (x) {\n          return x.value;\n        }));\n      }\n    });\n  };\n\n  async.auto = function (tasks, callback) {\n    callback = callback || function () {};\n\n    var keys = _keys(tasks);\n\n    if (!keys.length) {\n      return callback(null);\n    }\n\n    var results = {};\n    var listeners = [];\n\n    var addListener = function addListener(fn) {\n      listeners.unshift(fn);\n    };\n\n    var removeListener = function removeListener(fn) {\n      for (var i = 0; i < listeners.length; i += 1) {\n        if (listeners[i] === fn) {\n          listeners.splice(i, 1);\n          return;\n        }\n      }\n    };\n\n    var taskComplete = function taskComplete() {\n      _each(listeners.slice(0), function (fn) {\n        fn();\n      });\n    };\n\n    addListener(function () {\n      if (_keys(results).length === keys.length) {\n        callback(null, results);\n\n        callback = function callback() {};\n      }\n    });\n\n    _each(keys, function (k) {\n      var task = tasks[k] instanceof Function ? [tasks[k]] : tasks[k];\n\n      var taskCallback = function taskCallback(err) {\n        var args = Array.prototype.slice.call(arguments, 1);\n\n        if (args.length <= 1) {\n          args = args[0];\n        }\n\n        if (err) {\n          var safeResults = {};\n\n          _each(_keys(results), function (rkey) {\n            safeResults[rkey] = results[rkey];\n          });\n\n          safeResults[k] = args;\n          callback(err, safeResults); // stop subsequent errors hitting callback multiple times\n\n          callback = function callback() {};\n        } else {\n          results[k] = args;\n          async.setImmediate(taskComplete);\n        }\n      };\n\n      var requires = task.slice(0, Math.abs(task.length - 1)) || [];\n\n      var ready = function ready() {\n        return _reduce(requires, function (a, x) {\n          return a && results.hasOwnProperty(x);\n        }, true) && !results.hasOwnProperty(k);\n      };\n\n      if (ready()) {\n        task[task.length - 1](taskCallback, results);\n      } else {\n        var listener = function listener() {\n          if (ready()) {\n            removeListener(listener);\n            task[task.length - 1](taskCallback, results);\n          }\n        };\n\n        addListener(listener);\n      }\n    });\n  };\n\n  async.waterfall = function (tasks, callback) {\n    callback = callback || function () {};\n\n    if (tasks.constructor !== Array) {\n      var err = new Error('First argument to waterfall must be an array of functions');\n      return callback(err);\n    }\n\n    if (!tasks.length) {\n      return callback();\n    }\n\n    var wrapIterator = function wrapIterator(iterator) {\n      return function (err) {\n        if (err) {\n          callback.apply(null, arguments);\n\n          callback = function callback() {};\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var next = iterator.next();\n\n          if (next) {\n            args.push(wrapIterator(next));\n          } else {\n            args.push(callback);\n          }\n\n          async.setImmediate(function () {\n            iterator.apply(null, args);\n          });\n        }\n      };\n    };\n\n    wrapIterator(async.iterator(tasks))();\n  };\n\n  var _parallel = function _parallel(eachfn, tasks, callback) {\n    callback = callback || function () {};\n\n    if (tasks.constructor === Array) {\n      eachfn.map(tasks, function (fn, callback) {\n        if (fn) {\n          fn(function (err) {\n            var args = Array.prototype.slice.call(arguments, 1);\n\n            if (args.length <= 1) {\n              args = args[0];\n            }\n\n            callback.call(null, err, args);\n          });\n        }\n      }, callback);\n    } else {\n      var results = {};\n      eachfn.each(_keys(tasks), function (k, callback) {\n        tasks[k](function (err) {\n          var args = Array.prototype.slice.call(arguments, 1);\n\n          if (args.length <= 1) {\n            args = args[0];\n          }\n\n          results[k] = args;\n          callback(err);\n        });\n      }, function (err) {\n        callback(err, results);\n      });\n    }\n  };\n\n  async.parallel = function (tasks, callback) {\n    _parallel({\n      map: async.map,\n      each: async.each\n    }, tasks, callback);\n  };\n\n  async.parallelLimit = function (tasks, limit, callback) {\n    _parallel({\n      map: _mapLimit(limit),\n      each: _eachLimit(limit)\n    }, tasks, callback);\n  };\n\n  async.series = function (tasks, callback) {\n    callback = callback || function () {};\n\n    if (tasks.constructor === Array) {\n      async.mapSeries(tasks, function (fn, callback) {\n        if (fn) {\n          fn(function (err) {\n            var args = Array.prototype.slice.call(arguments, 1);\n\n            if (args.length <= 1) {\n              args = args[0];\n            }\n\n            callback.call(null, err, args);\n          });\n        }\n      }, callback);\n    } else {\n      var results = {};\n      async.eachSeries(_keys(tasks), function (k, callback) {\n        tasks[k](function (err) {\n          var args = Array.prototype.slice.call(arguments, 1);\n\n          if (args.length <= 1) {\n            args = args[0];\n          }\n\n          results[k] = args;\n          callback(err);\n        });\n      }, function (err) {\n        callback(err, results);\n      });\n    }\n  };\n\n  async.iterator = function (tasks) {\n    var makeCallback = function makeCallback(index) {\n      var fn = function fn() {\n        if (tasks.length) {\n          tasks[index].apply(null, arguments);\n        }\n\n        return fn.next();\n      };\n\n      fn.next = function () {\n        return index < tasks.length - 1 ? makeCallback(index + 1) : null;\n      };\n\n      return fn;\n    };\n\n    return makeCallback(0);\n  };\n\n  async.apply = function (fn) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return function () {\n      return fn.apply(null, args.concat(Array.prototype.slice.call(arguments)));\n    };\n  };\n\n  var _concat = function _concat(eachfn, arr, fn, callback) {\n    var r = [];\n    eachfn(arr, function (x, cb) {\n      fn(x, function (err, y) {\n        r = r.concat(y || []);\n        cb(err);\n      });\n    }, function (err) {\n      callback(err, r);\n    });\n  };\n\n  async.concat = doParallel(_concat);\n  async.concatSeries = doSeries(_concat);\n\n  async.whilst = function (test, iterator, callback) {\n    if (test()) {\n      iterator(function (err) {\n        if (err) {\n          return callback(err);\n        }\n\n        async.whilst(test, iterator, callback);\n      });\n    } else {\n      callback();\n    }\n  };\n\n  async.doWhilst = function (iterator, test, callback) {\n    iterator(function (err) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (test()) {\n        async.doWhilst(iterator, test, callback);\n      } else {\n        callback();\n      }\n    });\n  };\n\n  async.until = function (test, iterator, callback) {\n    if (!test()) {\n      iterator(function (err) {\n        if (err) {\n          return callback(err);\n        }\n\n        async.until(test, iterator, callback);\n      });\n    } else {\n      callback();\n    }\n  };\n\n  async.doUntil = function (iterator, test, callback) {\n    iterator(function (err) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (!test()) {\n        async.doUntil(iterator, test, callback);\n      } else {\n        callback();\n      }\n    });\n  };\n\n  async.queue = function (worker, concurrency) {\n    if (concurrency === undefined) {\n      concurrency = 1;\n    }\n\n    function _insert(q, data, pos, callback) {\n      if (data.constructor !== Array) {\n        data = [data];\n      }\n\n      _each(data, function (task) {\n        var item = {\n          data: task,\n          callback: typeof callback === 'function' ? callback : null\n        };\n\n        if (pos) {\n          q.tasks.unshift(item);\n        } else {\n          q.tasks.push(item);\n        }\n\n        if (q.saturated && q.tasks.length === concurrency) {\n          q.saturated();\n        }\n\n        async.setImmediate(q.process);\n      });\n    }\n\n    var workers = 0;\n    var q = {\n      tasks: [],\n      concurrency: concurrency,\n      saturated: null,\n      empty: null,\n      drain: null,\n      push: function push(data, callback) {\n        _insert(q, data, false, callback);\n      },\n      unshift: function unshift(data, callback) {\n        _insert(q, data, true, callback);\n      },\n      process: function process() {\n        if (workers < q.concurrency && q.tasks.length) {\n          var task = q.tasks.shift();\n\n          if (q.empty && q.tasks.length === 0) {\n            q.empty();\n          }\n\n          workers += 1;\n\n          var next = function next() {\n            workers -= 1;\n\n            if (task.callback) {\n              task.callback.apply(task, arguments);\n            }\n\n            if (q.drain && q.tasks.length + workers === 0) {\n              q.drain();\n            }\n\n            q.process();\n          };\n\n          var cb = only_once(next);\n          worker(task.data, cb);\n        }\n      },\n      length: function length() {\n        return q.tasks.length;\n      },\n      running: function running() {\n        return workers;\n      }\n    };\n    return q;\n  };\n\n  async.cargo = function (worker, payload) {\n    var working = false,\n        tasks = [];\n    var cargo = {\n      tasks: tasks,\n      payload: payload,\n      saturated: null,\n      empty: null,\n      drain: null,\n      push: function push(data, callback) {\n        if (data.constructor !== Array) {\n          data = [data];\n        }\n\n        _each(data, function (task) {\n          tasks.push({\n            data: task,\n            callback: typeof callback === 'function' ? callback : null\n          });\n\n          if (cargo.saturated && tasks.length === payload) {\n            cargo.saturated();\n          }\n        });\n\n        async.setImmediate(cargo.process);\n      },\n      process: function process() {\n        if (working) return;\n\n        if (tasks.length === 0) {\n          if (cargo.drain) cargo.drain();\n          return;\n        }\n\n        var ts = typeof payload === 'number' ? tasks.splice(0, payload) : tasks.splice(0);\n\n        var ds = _map(ts, function (task) {\n          return task.data;\n        });\n\n        if (cargo.empty) cargo.empty();\n        working = true;\n        worker(ds, function () {\n          working = false;\n          var args = arguments;\n\n          _each(ts, function (data) {\n            if (data.callback) {\n              data.callback.apply(null, args);\n            }\n          });\n\n          process();\n        });\n      },\n      length: function length() {\n        return tasks.length;\n      },\n      running: function running() {\n        return working;\n      }\n    };\n    return cargo;\n  };\n\n  var _console_fn = function _console_fn(name) {\n    return function (fn) {\n      var args = Array.prototype.slice.call(arguments, 1);\n      fn.apply(null, args.concat([function (err) {\n        var args = Array.prototype.slice.call(arguments, 1);\n\n        if (typeof console !== 'undefined') {\n          if (err) {\n            if (console.error) {\n              console.error(err);\n            }\n          } else if (console[name]) {\n            _each(args, function (x) {\n              console[name](x);\n            });\n          }\n        }\n      }]));\n    };\n  };\n\n  async.log = _console_fn('log');\n  async.dir = _console_fn('dir');\n  /*async.info = _console_fn('info');\n  async.warn = _console_fn('warn');\n  async.error = _console_fn('error');*/\n\n  async.memoize = function (fn, hasher) {\n    var memo = {};\n    var queues = {};\n\n    hasher = hasher || function (x) {\n      return x;\n    };\n\n    var memoized = function memoized() {\n      var args = Array.prototype.slice.call(arguments);\n      var callback = args.pop();\n      var key = hasher.apply(null, args);\n\n      if (key in memo) {\n        callback.apply(null, memo[key]);\n      } else if (key in queues) {\n        queues[key].push(callback);\n      } else {\n        queues[key] = [callback];\n        fn.apply(null, args.concat([function () {\n          memo[key] = arguments;\n          var q = queues[key];\n          delete queues[key];\n\n          for (var i = 0, l = q.length; i < l; i++) {\n            q[i].apply(null, arguments);\n          }\n        }]));\n      }\n    };\n\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n  };\n\n  async.unmemoize = function (fn) {\n    return function () {\n      return (fn.unmemoized || fn).apply(null, arguments);\n    };\n  };\n\n  async.times = function (count, iterator, callback) {\n    var counter = [];\n\n    for (var i = 0; i < count; i++) {\n      counter.push(i);\n    }\n\n    return async.map(counter, iterator, callback);\n  };\n\n  async.timesSeries = function (count, iterator, callback) {\n    var counter = [];\n\n    for (var i = 0; i < count; i++) {\n      counter.push(i);\n    }\n\n    return async.mapSeries(counter, iterator, callback);\n  };\n\n  async.compose = function ()\n  /* functions... */\n  {\n    var fns = Array.prototype.reverse.call(arguments);\n    return function () {\n      var that = this;\n      var args = Array.prototype.slice.call(arguments);\n      var callback = args.pop();\n      async.reduce(fns, args, function (newargs, fn, cb) {\n        fn.apply(that, newargs.concat([function () {\n          var err = arguments[0];\n          var nextargs = Array.prototype.slice.call(arguments, 1);\n          cb(err, nextargs);\n        }]));\n      }, function (err, results) {\n        callback.apply(that, [err].concat(results));\n      });\n    };\n  };\n\n  var _applyEach = function _applyEach(eachfn, fns\n  /*args...*/\n  ) {\n    var go = function go() {\n      var that = this;\n      var args = Array.prototype.slice.call(arguments);\n      var callback = args.pop();\n      return eachfn(fns, function (fn, cb) {\n        fn.apply(that, args.concat([cb]));\n      }, callback);\n    };\n\n    if (arguments.length > 2) {\n      var args = Array.prototype.slice.call(arguments, 2);\n      return go.apply(this, args);\n    } else {\n      return go;\n    }\n  };\n\n  async.applyEach = doParallel(_applyEach);\n  async.applyEachSeries = doSeries(_applyEach);\n\n  async.forever = function (fn, callback) {\n    function next(err) {\n      if (err) {\n        if (callback) {\n          return callback(err);\n        }\n\n        throw err;\n      }\n\n      fn(next);\n    }\n\n    next();\n  }; // AMD / RequireJS\n\n\n  if (typeof define !== 'undefined' && define.amd) {\n    define([], function () {\n      return async;\n    });\n  } // Node.js\n  else if (typeof module !== 'undefined' && module.exports) {\n      module.exports = async;\n    } // included directly via <script> tag\n    else {\n        root.async = async;\n      }\n})();","import { useState } from 'react';\nconst _state = Symbol('state');\nexport default class Store {\n  constructor(props) {\n    this._context = props.context;\n    this[_state] = {};\n    this._modules = props.modules || [];\n  }\n  get context() {\n    return this._context;\n  }\n  get state() {\n    return this[_state];\n  }\n\n  set state(newState) {\n    if (newState !== this[_state]) {\n      this[_state] = newState;\n    }\n  }\n  /**\n   * @argument 该函数必须在函数式组件内部使用\n   */\n  processReducer = () => {\n    const out = this._modules.reduce((out, module) => {\n      out.state[module.name] = {};\n      module.observableProps.forEach(prop => {\n        let value = module.getPropValue(prop)\n        const [state, setState] = useState(value);\n        out.state[module.name][prop] = state;\n        module.setPropDispatch(prop, setState);\n      })\n      out.modules[module.name] = module.module;\n      return out;\n    }, {\n        state: {},\n        modules: {},\n      })\n    this.state = out.state;\n    this.modules = out.modules;\n  }\n}\n","\nimport { fromJS, isImmutable} from 'immutable';\nconst LazyInitializeSymbol = Symbol('lazy initialize symbol');\nconst pendingDecorators = Symbol('pending decorator');\nconst $store = Symbol('@proxy')\nlet cacheDescriptor = {};\n\nfunction createObservable(target, prop, descriptor) {\n  let decoratorFactory = createPropDecorator(function propertyCreator(target, prop, descriptor) {\n    var initialValue = descriptor\n      ? descriptor.initializer\n        ? descriptor.initializer.call(target)\n        : descriptor.value\n      : undefined;\n    asObservableObject(target).addObservableProp(prop, initialValue)\n  });\n  return decoratorFactory.apply(null, arguments);\n}\n\nfunction createPropDecorator(propertyCreator) {\n  return function decoratorFactory() {\n    let decorator = function decorate(target, prop, descriptor) {\n      if (!Object.prototype.hasOwnProperty.call(target, pendingDecorators)) {\n        var inheritedDecorators = target[pendingDecorators];\n        addHiddenProp(target, pendingDecorators, Object.assign({}, inheritedDecorators));\n      }\n      target[pendingDecorators][prop] = {\n        prop: prop,\n        propertyCreator: propertyCreator,\n        descriptor: descriptor,\n        decoratorTarget: target,\n      };\n      return createPropertyInitializerDescriptor(prop);\n    }\n    return decorator.apply(null, arguments);\n  }\n}\n// 返回初始的Descriptor\nfunction createPropertyInitializerDescriptor(prop) {\n  return (cacheDescriptor[prop] ||\n    (cacheDescriptor[prop] = {\n      configurable: true,\n      enumerable: true,\n      get: function () {\n        initializeInstance(this);\n        return this[prop];\n      },\n      set: function (value) {\n        initializeInstance(this);\n        this[prop] = value;\n      }\n    }));\n}\n\n// 该函数相当牛逼，用于修改实例属性的decorator 从 createPropertyInitializerDescriptor => propertyCreator,\n// 注册实例属性的代理\nfunction initializeInstance(target) {\n  if (target[LazyInitializeSymbol] === true)\n    return;\n  var decorators = target[pendingDecorators];\n  if (decorators) {\n    addHiddenProp(target, LazyInitializeSymbol, true);\n    for (var key in decorators) {\n      var d = decorators[key];\n      d.propertyCreator(target, d.prop, d.descriptor);\n    }\n  }\n}\n\nfunction addHiddenProp(object, propName, value) {\n  Object.defineProperty(object, propName, {\n    enumerable: false,\n    writable: true,\n    configurable: true,\n    value: value\n  });\n}\n\nfunction asObservableObject(target) {\n  if (Object.prototype.hasOwnProperty.call(target, $store))\n    return target[$store];\n  const adm = new ObservableObjectAdministration(target);\n  addHiddenProp(target, $store, adm);\n  return adm;\n}\n\n// 数据源的代理 代理内部管理数据\nclass ObservableObjectAdministration {\n  constructor(target) {\n    this.$value = new Map();\n    this.$dispatch = new Map();\n    this.target = target;\n  }\n  read(prop) {\n    let value = this.$value.get(prop);\n    if (isImmutable(value)) {\n      return value.toJS();\n    }\n    return value;\n  }\n  write(prop, value) {\n    let immutableValue = value;\n    if (!isImmutable(value)) {\n      immutableValue = fromJS(value)\n    }\n    this.$value.set(prop, immutableValue);\n    const dispatch = this.$dispatch.get(prop);\n    if (!dispatch) {\n      throw new Error(`${prop} is not observable, please use observable decorater to ${prop}`)\n    } \n    if (dispatch) {\n      dispatch(value);\n    }\n  }\n  addObservableProp(prop, value) {\n    // to do 添加enhancer 生成observableValue\n    let target = this.target;\n    //observableValue 实际上是一个proxy，可以很方便监控对象的任何行为\n    this.$value.set(prop, fromJS(value));\n    Object.defineProperty(target, prop, {\n      configurable: true,\n      enumerable: true,\n      get: function () {\n        return this[$store].read(prop);\n      },\n      set: function (v) {\n        this[$store].write(prop, v);\n      }\n    })\n  }\n  outputProps() {\n    return Object.keys(this.$value);\n  }\n  setDispatch(prop, dispatch) {\n    this.$dispatch.set(prop, dispatch);\n  }\n  getDispatch(prop) {\n    return this.$dispatch.get(prop);\n  }\n}\n\n// 监控属性值的操作，用proxy实现\n\nfunction getObservableProps(model) {\n  if (!model[pendingDecorators]) {\n    return [];\n  }\n  return Object.keys(model[pendingDecorators]);\n}\nfunction getObservablePropDispatch(model, prop) {\n  if (!model[$store]) {\n    throw new Error('model is not observable')\n  }\n  return model[$store].getDispatch(prop);\n}\nfunction setObservablePropDispatch(model, prop, dispatch) {\n  if (!model[$store]) {\n    throw new Error('model is not observable')\n  }\n  model[$store].setDispatch(prop, dispatch);\n}\n\nlet observable = createObservable;\n\nexport { observable, getObservableProps, setObservablePropDispatch, getObservablePropDispatch }\n","import { getObservableProps, setObservablePropDispatch } from './observable';\n/**\n * @argument 数据模块\n */\nexport default class Module {\n  constructor(module) {\n    this.name = module.constructor.name;\n    this._module = module;\n    // 被观察的属性\n    this.observableProps = getObservableProps(this._module);\n  }\n  getPropValue(prop) {\n    return this._module[prop];\n  }\n  setPropDispatch(prop, dispatch) {\n    if (!this._module.setState) {\n      this._module.setState = this.setState;\n    }\n    setObservablePropDispatch(this._module, prop, dispatch);   \n  }\n  setState(data) {\n    const props = Object.getOwnPropertyNames(data);\n    props.forEach(prop => {\n      console.log('dispatch => ',this.constructor.name, 'prop=',prop);\n      this[prop] = data[prop];\n\n    })\n  }\n  get module() {\n    return this._module;\n  }\n}","import React, { useContext } from 'react';\nimport Store from './store';\nimport Module from './module';\n\nconst Provider = (props) => {\n  const store = props.store;\n  store.processReducer();\n  return <store.context.Provider value={{ state: store.state, modules: store.modules }}>\n    {props.children}\n  </store.context.Provider>\n}\n\n/**\n * \n * @param {*} context \n * @param {*} dataModule \n * 这个函数用于建立store和数据模块的关联\n */\nfunction createStore(context, dataModule) {\n  let modules = [];\n  if (Array.isArray(dataModule)) {\n    dataModule.forEach(elem => {\n      if (typeof (elem) === 'object') {\n        elem.context = context;\n        modules.push(new Module(elem));\n      }\n    })\n  } else {\n    if (typeof (dataModule) === 'object') {\n      dataModule.context = context;\n      modules.push(new Module(dataModule));\n    }\n  }\n  return new Store({\n    context,\n    modules,\n  })\n}\n\n/**\n * @argument 关联dispatch 和 state 到 组件上\n * @param {*} context \n * @param {*} mapState \n * @param {*} mapDispatch \n */\nconst connect = modules => component => {\n  return function wrapComponent(props) {\n    let moduleArr = [].concat(modules);\n    let contextMap = moduleArr.reduce((out, item) => {\n      if (item.context) {\n        out.set(item.context,true);\n      }\n      return out;\n    }, new Map())\n    contextMap.forEach((flag, context) => {\n      useContext(context)\n    })\n    return component({ ...props});\n  }\n}\n\nconst useRedux = store => Component => {\n  return function Privider(props) {\n    store.processReducer();\n    return <store.context.Provider value={{ state: store.state, modules: store.modules }}>\n      <Component {...props}/>\n    </store.context.Provider>\n  }\n}\n\n\n\n\nexport {\n  useRedux,\n  Provider,\n  createStore,\n  connect,\n}","import { useRedux, Provider, createStore, connect } from './redux';\nimport { observable } from './observable';\n\nexport {\n  useRedux,\n  Provider,\n  createStore,\n  connect,\n  observable,\n}","module.exports = require(\"regenerator-runtime\");\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.7.3\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function (f) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n\n    g.localforage = f();\n  }\n})(function () {\n  var define, module, exports;\n  return function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = typeof require == \"function\" && require;\n          if (!u && a) return a(o, !0);\n          if (i) return i(o, !0);\n          var f = new Error(\"Cannot find module '\" + o + \"'\");\n          throw f.code = \"MODULE_NOT_FOUND\", f;\n        }\n\n        var l = n[o] = {\n          exports: {}\n        };\n        t[o][0].call(l.exports, function (e) {\n          var n = t[o][1][e];\n          return s(n ? n : e);\n        }, l, l.exports, e, t, n, r);\n      }\n\n      return n[o].exports;\n    }\n\n    var i = typeof require == \"function\" && require;\n\n    for (var o = 0; o < r.length; o++) {\n      s(r[o]);\n    }\n\n    return s;\n  }({\n    1: [function (_dereq_, module, exports) {\n      (function (global) {\n        'use strict';\n\n        var Mutation = global.MutationObserver || global.WebKitMutationObserver;\n        var scheduleDrain;\n        {\n          if (Mutation) {\n            var called = 0;\n            var observer = new Mutation(nextTick);\n            var element = global.document.createTextNode('');\n            observer.observe(element, {\n              characterData: true\n            });\n\n            scheduleDrain = function scheduleDrain() {\n              element.data = called = ++called % 2;\n            };\n          } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n            var channel = new global.MessageChannel();\n            channel.port1.onmessage = nextTick;\n\n            scheduleDrain = function scheduleDrain() {\n              channel.port2.postMessage(0);\n            };\n          } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n            scheduleDrain = function scheduleDrain() {\n              // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n              // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n              var scriptEl = global.document.createElement('script');\n\n              scriptEl.onreadystatechange = function () {\n                nextTick();\n                scriptEl.onreadystatechange = null;\n                scriptEl.parentNode.removeChild(scriptEl);\n                scriptEl = null;\n              };\n\n              global.document.documentElement.appendChild(scriptEl);\n            };\n          } else {\n            scheduleDrain = function scheduleDrain() {\n              setTimeout(nextTick, 0);\n            };\n          }\n        }\n        var draining;\n        var queue = []; //named nextTick for less confusing stack traces\n\n        function nextTick() {\n          draining = true;\n          var i, oldQueue;\n          var len = queue.length;\n\n          while (len) {\n            oldQueue = queue;\n            queue = [];\n            i = -1;\n\n            while (++i < len) {\n              oldQueue[i]();\n            }\n\n            len = queue.length;\n          }\n\n          draining = false;\n        }\n\n        module.exports = immediate;\n\n        function immediate(task) {\n          if (queue.push(task) === 1 && !draining) {\n            scheduleDrain();\n          }\n        }\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {}],\n    2: [function (_dereq_, module, exports) {\n      'use strict';\n\n      var immediate = _dereq_(1);\n      /* istanbul ignore next */\n\n\n      function INTERNAL() {}\n\n      var handlers = {};\n      var REJECTED = ['REJECTED'];\n      var FULFILLED = ['FULFILLED'];\n      var PENDING = ['PENDING'];\n      module.exports = Promise;\n\n      function Promise(resolver) {\n        if (typeof resolver !== 'function') {\n          throw new TypeError('resolver must be a function');\n        }\n\n        this.state = PENDING;\n        this.queue = [];\n        this.outcome = void 0;\n\n        if (resolver !== INTERNAL) {\n          safelyResolveThenable(this, resolver);\n        }\n      }\n\n      Promise.prototype[\"catch\"] = function (onRejected) {\n        return this.then(null, onRejected);\n      };\n\n      Promise.prototype.then = function (onFulfilled, onRejected) {\n        if (typeof onFulfilled !== 'function' && this.state === FULFILLED || typeof onRejected !== 'function' && this.state === REJECTED) {\n          return this;\n        }\n\n        var promise = new this.constructor(INTERNAL);\n\n        if (this.state !== PENDING) {\n          var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n          unwrap(promise, resolver, this.outcome);\n        } else {\n          this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n        }\n\n        return promise;\n      };\n\n      function QueueItem(promise, onFulfilled, onRejected) {\n        this.promise = promise;\n\n        if (typeof onFulfilled === 'function') {\n          this.onFulfilled = onFulfilled;\n          this.callFulfilled = this.otherCallFulfilled;\n        }\n\n        if (typeof onRejected === 'function') {\n          this.onRejected = onRejected;\n          this.callRejected = this.otherCallRejected;\n        }\n      }\n\n      QueueItem.prototype.callFulfilled = function (value) {\n        handlers.resolve(this.promise, value);\n      };\n\n      QueueItem.prototype.otherCallFulfilled = function (value) {\n        unwrap(this.promise, this.onFulfilled, value);\n      };\n\n      QueueItem.prototype.callRejected = function (value) {\n        handlers.reject(this.promise, value);\n      };\n\n      QueueItem.prototype.otherCallRejected = function (value) {\n        unwrap(this.promise, this.onRejected, value);\n      };\n\n      function unwrap(promise, func, value) {\n        immediate(function () {\n          var returnValue;\n\n          try {\n            returnValue = func(value);\n          } catch (e) {\n            return handlers.reject(promise, e);\n          }\n\n          if (returnValue === promise) {\n            handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n          } else {\n            handlers.resolve(promise, returnValue);\n          }\n        });\n      }\n\n      handlers.resolve = function (self, value) {\n        var result = tryCatch(getThen, value);\n\n        if (result.status === 'error') {\n          return handlers.reject(self, result.value);\n        }\n\n        var thenable = result.value;\n\n        if (thenable) {\n          safelyResolveThenable(self, thenable);\n        } else {\n          self.state = FULFILLED;\n          self.outcome = value;\n          var i = -1;\n          var len = self.queue.length;\n\n          while (++i < len) {\n            self.queue[i].callFulfilled(value);\n          }\n        }\n\n        return self;\n      };\n\n      handlers.reject = function (self, error) {\n        self.state = REJECTED;\n        self.outcome = error;\n        var i = -1;\n        var len = self.queue.length;\n\n        while (++i < len) {\n          self.queue[i].callRejected(error);\n        }\n\n        return self;\n      };\n\n      function getThen(obj) {\n        // Make sure we only access the accessor once as required by the spec\n        var then = obj && obj.then;\n\n        if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n          return function appyThen() {\n            then.apply(obj, arguments);\n          };\n        }\n      }\n\n      function safelyResolveThenable(self, thenable) {\n        // Either fulfill, reject or reject with error\n        var called = false;\n\n        function onError(value) {\n          if (called) {\n            return;\n          }\n\n          called = true;\n          handlers.reject(self, value);\n        }\n\n        function onSuccess(value) {\n          if (called) {\n            return;\n          }\n\n          called = true;\n          handlers.resolve(self, value);\n        }\n\n        function tryToUnwrap() {\n          thenable(onSuccess, onError);\n        }\n\n        var result = tryCatch(tryToUnwrap);\n\n        if (result.status === 'error') {\n          onError(result.value);\n        }\n      }\n\n      function tryCatch(func, value) {\n        var out = {};\n\n        try {\n          out.value = func(value);\n          out.status = 'success';\n        } catch (e) {\n          out.status = 'error';\n          out.value = e;\n        }\n\n        return out;\n      }\n\n      Promise.resolve = resolve;\n\n      function resolve(value) {\n        if (value instanceof this) {\n          return value;\n        }\n\n        return handlers.resolve(new this(INTERNAL), value);\n      }\n\n      Promise.reject = reject;\n\n      function reject(reason) {\n        var promise = new this(INTERNAL);\n        return handlers.reject(promise, reason);\n      }\n\n      Promise.all = all;\n\n      function all(iterable) {\n        var self = this;\n\n        if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n          return this.reject(new TypeError('must be an array'));\n        }\n\n        var len = iterable.length;\n        var called = false;\n\n        if (!len) {\n          return this.resolve([]);\n        }\n\n        var values = new Array(len);\n        var resolved = 0;\n        var i = -1;\n        var promise = new this(INTERNAL);\n\n        while (++i < len) {\n          allResolver(iterable[i], i);\n        }\n\n        return promise;\n\n        function allResolver(value, i) {\n          self.resolve(value).then(resolveFromAll, function (error) {\n            if (!called) {\n              called = true;\n              handlers.reject(promise, error);\n            }\n          });\n\n          function resolveFromAll(outValue) {\n            values[i] = outValue;\n\n            if (++resolved === len && !called) {\n              called = true;\n              handlers.resolve(promise, values);\n            }\n          }\n        }\n      }\n\n      Promise.race = race;\n\n      function race(iterable) {\n        var self = this;\n\n        if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n          return this.reject(new TypeError('must be an array'));\n        }\n\n        var len = iterable.length;\n        var called = false;\n\n        if (!len) {\n          return this.resolve([]);\n        }\n\n        var i = -1;\n        var promise = new this(INTERNAL);\n\n        while (++i < len) {\n          resolver(iterable[i]);\n        }\n\n        return promise;\n\n        function resolver(value) {\n          self.resolve(value).then(function (response) {\n            if (!called) {\n              called = true;\n              handlers.resolve(promise, response);\n            }\n          }, function (error) {\n            if (!called) {\n              called = true;\n              handlers.reject(promise, error);\n            }\n          });\n        }\n      }\n    }, {\n      \"1\": 1\n    }],\n    3: [function (_dereq_, module, exports) {\n      (function (global) {\n        'use strict';\n\n        if (typeof global.Promise !== 'function') {\n          global.Promise = _dereq_(2);\n        }\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {\n      \"2\": 2\n    }],\n    4: [function (_dereq_, module, exports) {\n      'use strict';\n\n      var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n      } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function getIDB() {\n        /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n        try {\n          if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n          }\n\n          if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n          }\n\n          if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n          }\n\n          if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n          }\n\n          if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n          }\n        } catch (e) {\n          return;\n        }\n      }\n\n      var idb = getIDB();\n\n      function isIndexedDBValid() {\n        try {\n          // Initialize IndexedDB; fall back to vendor-prefixed versions\n          // if needed.\n          if (!idb) {\n            return false;\n          } // We mimic PouchDB here;\n          //\n          // We test for openDatabase because IE Mobile identifies itself\n          // as Safari. Oh the lulz...\n\n\n          var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n          var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1; // Safari <10.1 does not meet our requirements for IDB support (#5572)\n          // since Safari 10.1 shipped with fetch, we can use that to detect it\n\n          return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' && // some outdated implementations of IDB that appear on Samsung\n          // and HTC Android devices <4.4 are missing IDBKeyRange\n          // See: https://github.com/mozilla/localForage/issues/128\n          // See: https://github.com/mozilla/localForage/issues/272\n          typeof IDBKeyRange !== 'undefined';\n        } catch (e) {\n          return false;\n        }\n      } // Abstracts constructing a Blob object, so it also works in older\n      // browsers that don't support the native Blob constructor. (i.e.\n      // old QtWebKit versions, at least).\n      // Abstracts constructing a Blob object, so it also works in older\n      // browsers that don't support the native Blob constructor. (i.e.\n      // old QtWebKit versions, at least).\n\n\n      function createBlob(parts, properties) {\n        /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n        parts = parts || [];\n        properties = properties || {};\n\n        try {\n          return new Blob(parts, properties);\n        } catch (e) {\n          if (e.name !== 'TypeError') {\n            throw e;\n          }\n\n          var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n          var builder = new Builder();\n\n          for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n          }\n\n          return builder.getBlob(properties.type);\n        }\n      } // This is CommonJS because lie is an external dependency, so Rollup\n      // can just ignore it.\n\n\n      if (typeof Promise === 'undefined') {\n        // In the \"nopromises\" build this will just throw if you don't have\n        // a global promise object, but it would throw anyway later.\n        _dereq_(3);\n      }\n\n      var Promise$1 = Promise;\n\n      function executeCallback(promise, callback) {\n        if (callback) {\n          promise.then(function (result) {\n            callback(null, result);\n          }, function (error) {\n            callback(error);\n          });\n        }\n      }\n\n      function executeTwoCallbacks(promise, callback, errorCallback) {\n        if (typeof callback === 'function') {\n          promise.then(callback);\n        }\n\n        if (typeof errorCallback === 'function') {\n          promise[\"catch\"](errorCallback);\n        }\n      }\n\n      function normalizeKey(key) {\n        // Cast the key to a string, as that's all we can set as a key.\n        if (typeof key !== 'string') {\n          console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        return key;\n      }\n\n      function getCallback() {\n        if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n          return arguments[arguments.length - 1];\n        }\n      } // Some code originally from async_storage.js in\n      // [Gaia](https://github.com/mozilla-b2g/gaia).\n\n\n      var DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\n      var supportsBlobs = void 0;\n      var dbContexts = {};\n      var toString = Object.prototype.toString; // Transaction Modes\n\n      var READ_ONLY = 'readonly';\n      var READ_WRITE = 'readwrite'; // Transform a binary string to an array buffer, because otherwise\n      // weird stuff happens when you try to work with the binary string directly.\n      // It is known.\n      // From http://stackoverflow.com/questions/14967647/ (continues on next line)\n      // encode-decode-image-with-base64-breaks-image (2013-04-21)\n\n      function _binStringToArrayBuffer(bin) {\n        var length = bin.length;\n        var buf = new ArrayBuffer(length);\n        var arr = new Uint8Array(buf);\n\n        for (var i = 0; i < length; i++) {\n          arr[i] = bin.charCodeAt(i);\n        }\n\n        return buf;\n      } //\n      // Blobs are not supported in all versions of IndexedDB, notably\n      // Chrome <37 and Android <5. In those versions, storing a blob will throw.\n      //\n      // Various other blob bugs exist in Chrome v37-42 (inclusive).\n      // Detecting them is expensive and confusing to users, and Chrome 37-42\n      // is at very low usage worldwide, so we do a hacky userAgent check instead.\n      //\n      // content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n      // 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n      // FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n      //\n      // Code borrowed from PouchDB. See:\n      // https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n      //\n\n\n      function _checkBlobSupportWithoutCaching(idb) {\n        return new Promise$1(function (resolve) {\n          var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n          var blob = createBlob(['']);\n          txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n          txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n          };\n\n          txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//); // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n          };\n        })[\"catch\"](function () {\n          return false; // error, so assume unsupported\n        });\n      }\n\n      function _checkBlobSupport(idb) {\n        if (typeof supportsBlobs === 'boolean') {\n          return Promise$1.resolve(supportsBlobs);\n        }\n\n        return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n          supportsBlobs = value;\n          return supportsBlobs;\n        });\n      }\n\n      function _deferReadiness(dbInfo) {\n        var dbContext = dbContexts[dbInfo.name]; // Create a deferred object representing the current database operation.\n\n        var deferredOperation = {};\n        deferredOperation.promise = new Promise$1(function (resolve, reject) {\n          deferredOperation.resolve = resolve;\n          deferredOperation.reject = reject;\n        }); // Enqueue the deferred operation.\n\n        dbContext.deferredOperations.push(deferredOperation); // Chain its promise to the database readiness.\n\n        if (!dbContext.dbReady) {\n          dbContext.dbReady = deferredOperation.promise;\n        } else {\n          dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n          });\n        }\n      }\n\n      function _advanceReadiness(dbInfo) {\n        var dbContext = dbContexts[dbInfo.name]; // Dequeue a deferred operation.\n\n        var deferredOperation = dbContext.deferredOperations.pop(); // Resolve its promise (which is part of the database readiness\n        // chain of promises).\n\n        if (deferredOperation) {\n          deferredOperation.resolve();\n          return deferredOperation.promise;\n        }\n      }\n\n      function _rejectReadiness(dbInfo, err) {\n        var dbContext = dbContexts[dbInfo.name]; // Dequeue a deferred operation.\n\n        var deferredOperation = dbContext.deferredOperations.pop(); // Reject its promise (which is part of the database readiness\n        // chain of promises).\n\n        if (deferredOperation) {\n          deferredOperation.reject(err);\n          return deferredOperation.promise;\n        }\n      }\n\n      function _getConnection(dbInfo, upgradeNeeded) {\n        return new Promise$1(function (resolve, reject) {\n          dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n          if (dbInfo.db) {\n            if (upgradeNeeded) {\n              _deferReadiness(dbInfo);\n\n              dbInfo.db.close();\n            } else {\n              return resolve(dbInfo.db);\n            }\n          }\n\n          var dbArgs = [dbInfo.name];\n\n          if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n          }\n\n          var openreq = idb.open.apply(idb, dbArgs);\n\n          if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n              var db = openreq.result;\n\n              try {\n                db.createObjectStore(dbInfo.storeName);\n\n                if (e.oldVersion <= 1) {\n                  // Added when support for blob shims was added\n                  db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                }\n              } catch (ex) {\n                if (ex.name === 'ConstraintError') {\n                  console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                } else {\n                  throw ex;\n                }\n              }\n            };\n          }\n\n          openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n          };\n\n          openreq.onsuccess = function () {\n            resolve(openreq.result);\n\n            _advanceReadiness(dbInfo);\n          };\n        });\n      }\n\n      function _getOriginalConnection(dbInfo) {\n        return _getConnection(dbInfo, false);\n      }\n\n      function _getUpgradedConnection(dbInfo) {\n        return _getConnection(dbInfo, true);\n      }\n\n      function _isUpgradeNeeded(dbInfo, defaultVersion) {\n        if (!dbInfo.db) {\n          return true;\n        }\n\n        var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n        var isDowngrade = dbInfo.version < dbInfo.db.version;\n        var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n        if (isDowngrade) {\n          // If the version is not the default one\n          // then warn for impossible downgrade.\n          if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n          } // Align the versions to prevent errors.\n\n\n          dbInfo.version = dbInfo.db.version;\n        }\n\n        if (isUpgrade || isNewStore) {\n          // If the store is new then increment the version (if needed).\n          // This will trigger an \"upgradeneeded\" event which is required\n          // for creating a store.\n          if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n\n            if (incVersion > dbInfo.version) {\n              dbInfo.version = incVersion;\n            }\n          }\n\n          return true;\n        }\n\n        return false;\n      } // encode a blob for indexeddb engines that don't support blobs\n\n\n      function _encodeBlob(blob) {\n        return new Promise$1(function (resolve, reject) {\n          var reader = new FileReader();\n          reader.onerror = reject;\n\n          reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n              __local_forage_encoded_blob: true,\n              data: base64,\n              type: blob.type\n            });\n          };\n\n          reader.readAsBinaryString(blob);\n        });\n      } // decode an encoded blob\n\n\n      function _decodeBlob(encodedBlob) {\n        var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n\n        return createBlob([arrayBuff], {\n          type: encodedBlob.type\n        });\n      } // is this one of our fancy encoded blobs?\n\n\n      function _isEncodedBlob(value) {\n        return value && value.__local_forage_encoded_blob;\n      } // Specialize the default `ready()` function by making it dependent\n      // on the current database operations. Thus, the driver will be actually\n      // ready when it's been initialized (default) *and* there are no pending\n      // operations on the database (initiated by some other instances).\n\n\n      function _fullyReady(callback) {\n        var self = this;\n\n        var promise = self._initReady().then(function () {\n          var dbContext = dbContexts[self._dbInfo.name];\n\n          if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n          }\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n      } // Try to establish a new db connection to replace the\n      // current one which is broken (i.e. experiencing\n      // InvalidStateError while creating a transaction).\n\n\n      function _tryReconnect(dbInfo) {\n        _deferReadiness(dbInfo);\n\n        var dbContext = dbContexts[dbInfo.name];\n        var forages = dbContext.forages;\n\n        for (var i = 0; i < forages.length; i++) {\n          var forage = forages[i];\n\n          if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n\n            forage._dbInfo.db = null;\n          }\n        }\n\n        dbInfo.db = null;\n        return _getOriginalConnection(dbInfo).then(function (db) {\n          dbInfo.db = db;\n\n          if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n          }\n\n          return db;\n        }).then(function (db) {\n          // store the latest db reference\n          // in case the db was upgraded\n          dbInfo.db = dbContext.db = db;\n\n          for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n          }\n        })[\"catch\"](function (err) {\n          _rejectReadiness(dbInfo, err);\n\n          throw err;\n        });\n      } // FF doesn't like Promises (micro-tasks) and IDDB store operations,\n      // so we have to do it with callbacks\n\n\n      function createTransaction(dbInfo, mode, callback, retries) {\n        if (retries === undefined) {\n          retries = 1;\n        }\n\n        try {\n          var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n          callback(null, tx);\n        } catch (err) {\n          if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n              if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                // increase the db version, to create the new ObjectStore\n                if (dbInfo.db) {\n                  dbInfo.version = dbInfo.db.version + 1;\n                } // Reopen the database for upgrading.\n\n\n                return _getUpgradedConnection(dbInfo);\n              }\n            }).then(function () {\n              return _tryReconnect(dbInfo).then(function () {\n                createTransaction(dbInfo, mode, callback, retries - 1);\n              });\n            })[\"catch\"](callback);\n          }\n\n          callback(err);\n        }\n      }\n\n      function createDbContext() {\n        return {\n          // Running localForages sharing a database.\n          forages: [],\n          // Shared database.\n          db: null,\n          // Database readiness (promise).\n          dbReady: null,\n          // Deferred operations on the database.\n          deferredOperations: []\n        };\n      } // Open the IndexedDB database (automatically creates one if one didn't\n      // previously exist), using any options set in the config.\n\n\n      function _initStorage(options) {\n        var self = this;\n        var dbInfo = {\n          db: null\n        };\n\n        if (options) {\n          for (var i in options) {\n            dbInfo[i] = options[i];\n          }\n        } // Get the current context of the database;\n\n\n        var dbContext = dbContexts[dbInfo.name]; // ...or create a new context.\n\n        if (!dbContext) {\n          dbContext = createDbContext(); // Register the new context in the global container.\n\n          dbContexts[dbInfo.name] = dbContext;\n        } // Register itself as a running localForage in the current context.\n\n\n        dbContext.forages.push(self); // Replace the default `ready()` function with the specialized one.\n\n        if (!self._initReady) {\n          self._initReady = self.ready;\n          self.ready = _fullyReady;\n        } // Create an array of initialization states of the related localForages.\n\n\n        var initPromises = [];\n\n        function ignoreErrors() {\n          // Don't handle errors here,\n          // just makes sure related localForages aren't pending.\n          return Promise$1.resolve();\n        }\n\n        for (var j = 0; j < dbContext.forages.length; j++) {\n          var forage = dbContext.forages[j];\n\n          if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n          }\n        } // Take a snapshot of the related localForages.\n\n\n        var forages = dbContext.forages.slice(0); // Initialize the connection process only when\n        // all the related localForages aren't pending.\n\n        return Promise$1.all(initPromises).then(function () {\n          dbInfo.db = dbContext.db; // Get the connection or open a new one without upgrade.\n\n          return _getOriginalConnection(dbInfo);\n        }).then(function (db) {\n          dbInfo.db = db;\n\n          if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n          }\n\n          return db;\n        }).then(function (db) {\n          dbInfo.db = dbContext.db = db;\n          self._dbInfo = dbInfo; // Share the final connection amongst related localForages.\n\n          for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n\n            if (forage !== self) {\n              // Self is already up-to-date.\n              forage._dbInfo.db = dbInfo.db;\n              forage._dbInfo.version = dbInfo.version;\n            }\n          }\n        });\n      }\n\n      function getItem(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.get(key);\n\n                req.onsuccess = function () {\n                  var value = req.result;\n\n                  if (value === undefined) {\n                    value = null;\n                  }\n\n                  if (_isEncodedBlob(value)) {\n                    value = _decodeBlob(value);\n                  }\n\n                  resolve(value);\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Iterate over all items stored in database.\n\n\n      function iterate(iterator, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.openCursor();\n                var iterationNumber = 1;\n\n                req.onsuccess = function () {\n                  var cursor = req.result;\n\n                  if (cursor) {\n                    var value = cursor.value;\n\n                    if (_isEncodedBlob(value)) {\n                      value = _decodeBlob(value);\n                    }\n\n                    var result = iterator(value, cursor.key, iterationNumber++); // when the iterator callback retuns any\n                    // (non-`undefined`) value, then we stop\n                    // the iteration immediately\n\n                    if (result !== void 0) {\n                      resolve(result);\n                    } else {\n                      cursor[\"continue\"]();\n                    }\n                  } else {\n                    resolve();\n                  }\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function setItem(key, value, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          var dbInfo;\n          self.ready().then(function () {\n            dbInfo = self._dbInfo;\n\n            if (toString.call(value) === '[object Blob]') {\n              return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                if (blobSupport) {\n                  return value;\n                }\n\n                return _encodeBlob(value);\n              });\n            }\n\n            return value;\n          }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName); // The reason we don't _save_ null is because IE 10 does\n                // not support saving the `null` type in IndexedDB. How\n                // ironic, given the bug below!\n                // See: https://github.com/mozilla/localForage/issues/161\n\n                if (value === null) {\n                  value = undefined;\n                }\n\n                var req = store.put(value, key);\n\n                transaction.oncomplete = function () {\n                  // Cast to undefined so the value passed to\n                  // callback/promise is the same as what one would get out\n                  // of `getItem()` later. This leads to some weirdness\n                  // (setItem('foo', undefined) will return `null`), but\n                  // it's not my fault localStorage is our baseline and that\n                  // it's weird.\n                  if (value === undefined) {\n                    value = null;\n                  }\n\n                  resolve(value);\n                };\n\n                transaction.onabort = transaction.onerror = function () {\n                  var err = req.error ? req.error : req.transaction.error;\n                  reject(err);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function removeItem(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName); // We use a Grunt task to make this safe for IE and some\n                // versions of Android (including those used by Cordova).\n                // Normally IE won't like `.delete()` and will insist on\n                // using `['delete']()`, but we have a build step that\n                // fixes this for us now.\n\n                var req = store[\"delete\"](key);\n\n                transaction.oncomplete = function () {\n                  resolve();\n                };\n\n                transaction.onerror = function () {\n                  reject(req.error);\n                }; // The request will be also be aborted if we've exceeded our storage\n                // space.\n\n\n                transaction.onabort = function () {\n                  var err = req.error ? req.error : req.transaction.error;\n                  reject(err);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function clear(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.clear();\n\n                transaction.oncomplete = function () {\n                  resolve();\n                };\n\n                transaction.onabort = transaction.onerror = function () {\n                  var err = req.error ? req.error : req.transaction.error;\n                  reject(err);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function length(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.count();\n\n                req.onsuccess = function () {\n                  resolve(req.result);\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function key(n, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          if (n < 0) {\n            resolve(null);\n            return;\n          }\n\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var advanced = false;\n                var req = store.openCursor();\n\n                req.onsuccess = function () {\n                  var cursor = req.result;\n\n                  if (!cursor) {\n                    // this means there weren't enough keys\n                    resolve(null);\n                    return;\n                  }\n\n                  if (n === 0) {\n                    // We have the first key, return it if that's what they\n                    // wanted.\n                    resolve(cursor.key);\n                  } else {\n                    if (!advanced) {\n                      // Otherwise, ask the cursor to skip ahead n\n                      // records.\n                      advanced = true;\n                      cursor.advance(n);\n                    } else {\n                      // When we get here, we've got the nth key.\n                      resolve(cursor.key);\n                    }\n                  }\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function keys(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.openCursor();\n                var keys = [];\n\n                req.onsuccess = function () {\n                  var cursor = req.result;\n\n                  if (!cursor) {\n                    resolve(keys);\n                    return;\n                  }\n\n                  keys.push(cursor.key);\n                  cursor[\"continue\"]();\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function dropInstance(options, callback) {\n        callback = getCallback.apply(this, arguments);\n        var currentConfig = this.config();\n        options = typeof options !== 'function' && options || {};\n\n        if (!options.name) {\n          options.name = options.name || currentConfig.name;\n          options.storeName = options.storeName || currentConfig.storeName;\n        }\n\n        var self = this;\n        var promise;\n\n        if (!options.name) {\n          promise = Promise$1.reject('Invalid arguments');\n        } else {\n          var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n          var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n\n            for (var i = 0; i < forages.length; i++) {\n              forages[i]._dbInfo.db = db;\n            }\n\n            return db;\n          });\n\n          if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n              _deferReadiness(options);\n\n              var dbContext = dbContexts[options.name];\n              var forages = dbContext.forages;\n              db.close();\n\n              for (var i = 0; i < forages.length; i++) {\n                var forage = forages[i];\n                forage._dbInfo.db = null;\n              }\n\n              var dropDBPromise = new Promise$1(function (resolve, reject) {\n                var req = idb.deleteDatabase(options.name);\n\n                req.onerror = req.onblocked = function (err) {\n                  var db = req.result;\n\n                  if (db) {\n                    db.close();\n                  }\n\n                  reject(err);\n                };\n\n                req.onsuccess = function () {\n                  var db = req.result;\n\n                  if (db) {\n                    db.close();\n                  }\n\n                  resolve(db);\n                };\n              });\n              return dropDBPromise.then(function (db) {\n                dbContext.db = db;\n\n                for (var i = 0; i < forages.length; i++) {\n                  var _forage = forages[i];\n\n                  _advanceReadiness(_forage._dbInfo);\n                }\n              })[\"catch\"](function (err) {\n                (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                throw err;\n              });\n            });\n          } else {\n            promise = dbPromise.then(function (db) {\n              if (!db.objectStoreNames.contains(options.storeName)) {\n                return;\n              }\n\n              var newVersion = db.version + 1;\n\n              _deferReadiness(options);\n\n              var dbContext = dbContexts[options.name];\n              var forages = dbContext.forages;\n              db.close();\n\n              for (var i = 0; i < forages.length; i++) {\n                var forage = forages[i];\n                forage._dbInfo.db = null;\n                forage._dbInfo.version = newVersion;\n              }\n\n              var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                var req = idb.open(options.name, newVersion);\n\n                req.onerror = function (err) {\n                  var db = req.result;\n                  db.close();\n                  reject(err);\n                };\n\n                req.onupgradeneeded = function () {\n                  var db = req.result;\n                  db.deleteObjectStore(options.storeName);\n                };\n\n                req.onsuccess = function () {\n                  var db = req.result;\n                  db.close();\n                  resolve(db);\n                };\n              });\n              return dropObjectPromise.then(function (db) {\n                dbContext.db = db;\n\n                for (var j = 0; j < forages.length; j++) {\n                  var _forage2 = forages[j];\n                  _forage2._dbInfo.db = db;\n\n                  _advanceReadiness(_forage2._dbInfo);\n                }\n              })[\"catch\"](function (err) {\n                (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                throw err;\n              });\n            });\n          }\n        }\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      var asyncStorage = {\n        _driver: 'asyncStorage',\n        _initStorage: _initStorage,\n        _support: isIndexedDBValid(),\n        iterate: iterate,\n        getItem: getItem,\n        setItem: setItem,\n        removeItem: removeItem,\n        clear: clear,\n        length: length,\n        key: key,\n        keys: keys,\n        dropInstance: dropInstance\n      };\n\n      function isWebSQLValid() {\n        return typeof openDatabase === 'function';\n      } // Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n      // it to Base64, so this is how we store it to prevent very strange errors with less\n      // verbose ways of binary <-> string data storage.\n\n\n      var BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n      var BLOB_TYPE_PREFIX = '~~local_forage_type~';\n      var BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n      var SERIALIZED_MARKER = '__lfsc__:';\n      var SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length; // OMG the serializations!\n\n      var TYPE_ARRAYBUFFER = 'arbf';\n      var TYPE_BLOB = 'blob';\n      var TYPE_INT8ARRAY = 'si08';\n      var TYPE_UINT8ARRAY = 'ui08';\n      var TYPE_UINT8CLAMPEDARRAY = 'uic8';\n      var TYPE_INT16ARRAY = 'si16';\n      var TYPE_INT32ARRAY = 'si32';\n      var TYPE_UINT16ARRAY = 'ur16';\n      var TYPE_UINT32ARRAY = 'ui32';\n      var TYPE_FLOAT32ARRAY = 'fl32';\n      var TYPE_FLOAT64ARRAY = 'fl64';\n      var TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n      var toString$1 = Object.prototype.toString;\n\n      function stringToBuffer(serializedString) {\n        // Fill the string into a ArrayBuffer.\n        var bufferLength = serializedString.length * 0.75;\n        var len = serializedString.length;\n        var i;\n        var p = 0;\n        var encoded1, encoded2, encoded3, encoded4;\n\n        if (serializedString[serializedString.length - 1] === '=') {\n          bufferLength--;\n\n          if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n          }\n        }\n\n        var buffer = new ArrayBuffer(bufferLength);\n        var bytes = new Uint8Array(buffer);\n\n        for (i = 0; i < len; i += 4) {\n          encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n          encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n          encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n          encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n          /*jslint bitwise: true */\n\n          bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n          bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n          bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n        }\n\n        return buffer;\n      } // Converts a buffer to a string to store, serialized, in the backend\n      // storage library.\n\n\n      function bufferToString(buffer) {\n        // base64-arraybuffer\n        var bytes = new Uint8Array(buffer);\n        var base64String = '';\n        var i;\n\n        for (i = 0; i < bytes.length; i += 3) {\n          /*jslint bitwise: true */\n          base64String += BASE_CHARS[bytes[i] >> 2];\n          base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n          base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n          base64String += BASE_CHARS[bytes[i + 2] & 63];\n        }\n\n        if (bytes.length % 3 === 2) {\n          base64String = base64String.substring(0, base64String.length - 1) + '=';\n        } else if (bytes.length % 3 === 1) {\n          base64String = base64String.substring(0, base64String.length - 2) + '==';\n        }\n\n        return base64String;\n      } // Serialize a value, afterwards executing a callback (which usually\n      // instructs the `setItem()` callback/promise to be executed). This is how\n      // we store binary data with localStorage.\n\n\n      function serialize(value, callback) {\n        var valueType = '';\n\n        if (value) {\n          valueType = toString$1.call(value);\n        } // Cannot use `value instanceof ArrayBuffer` or such here, as these\n        // checks fail when running the tests using casper.js...\n        //\n        // TODO: See why those tests fail and use a better solution.\n\n\n        if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n          // Convert binary arrays to a string and prefix the string with\n          // a special marker.\n          var buffer;\n          var marker = SERIALIZED_MARKER;\n\n          if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n          } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n              marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n              marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n              marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n              marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n              marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n              marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n              marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n              marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n              marker += TYPE_FLOAT64ARRAY;\n            } else {\n              callback(new Error('Failed to get type for BinaryArray'));\n            }\n          }\n\n          callback(marker + bufferToString(buffer));\n        } else if (valueType === '[object Blob]') {\n          // Conver the blob to a binaryArray and then to a string.\n          var fileReader = new FileReader();\n\n          fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n          };\n\n          fileReader.readAsArrayBuffer(value);\n        } else {\n          try {\n            callback(JSON.stringify(value));\n          } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n            callback(null, e);\n          }\n        }\n      } // Deserialize data we've inserted into a value column/field. We place\n      // special markers into our strings to mark them as encoded; this isn't\n      // as nice as a meta field, but it's the only sane thing we can do whilst\n      // keeping localStorage support intact.\n      //\n      // Oftentimes this will just deserialize JSON content, but if we have a\n      // special marker (SERIALIZED_MARKER, defined above), we will extract\n      // some kind of arraybuffer/binary data/typed array out of the string.\n\n\n      function deserialize(value) {\n        // If we haven't marked this string as being specially serialized (i.e.\n        // something other than serialized JSON), we can just return it and be\n        // done with it.\n        if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n          return JSON.parse(value);\n        } // The following code deals with deserializing some kind of Blob or\n        // TypedArray. First we separate out the type of data we're dealing\n        // with from the data itself.\n\n\n        var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n        var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n        var blobType; // Backwards-compatible blob type serialization strategy.\n        // DBs created with older versions of localForage will simply not have the blob type.\n\n        if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n          var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n          blobType = matcher[1];\n          serializedString = serializedString.substring(matcher[0].length);\n        }\n\n        var buffer = stringToBuffer(serializedString); // Return the right type based on the code/type set during\n        // serialization.\n\n        switch (type) {\n          case TYPE_ARRAYBUFFER:\n            return buffer;\n\n          case TYPE_BLOB:\n            return createBlob([buffer], {\n              type: blobType\n            });\n\n          case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n\n          case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n\n          case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n\n          case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n\n          case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n\n          case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n\n          case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n\n          case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n\n          case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n\n          default:\n            throw new Error('Unkown type: ' + type);\n        }\n      }\n\n      var localforageSerializer = {\n        serialize: serialize,\n        deserialize: deserialize,\n        stringToBuffer: stringToBuffer,\n        bufferToString: bufferToString\n      };\n      /*\n       * Includes code from:\n       *\n       * base64-arraybuffer\n       * https://github.com/niklasvh/base64-arraybuffer\n       *\n       * Copyright (c) 2012 Niklas von Hertzen\n       * Licensed under the MIT license.\n       */\n\n      function createDbTable(t, dbInfo, callback, errorCallback) {\n        t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n      } // Open the WebSQL database (automatically creates one if one didn't\n      // previously exist), using any options set in the config.\n\n\n      function _initStorage$1(options) {\n        var self = this;\n        var dbInfo = {\n          db: null\n        };\n\n        if (options) {\n          for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n          }\n        }\n\n        var dbInfoPromise = new Promise$1(function (resolve, reject) {\n          // Open the database; the openDatabase API will automatically\n          // create it for us if it doesn't exist.\n          try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n          } catch (e) {\n            return reject(e);\n          } // Create our key/value table if it doesn't exist.\n\n\n          dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n              self._dbInfo = dbInfo;\n              resolve();\n            }, function (t, error) {\n              reject(error);\n            });\n          }, reject);\n        });\n        dbInfo.serializer = localforageSerializer;\n        return dbInfoPromise;\n      }\n\n      function tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n        t.executeSql(sqlStatement, args, callback, function (t, error) {\n          if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n              if (!results.rows.length) {\n                // if the table is missing (was deleted)\n                // re-create it table and retry\n                createDbTable(t, dbInfo, function () {\n                  t.executeSql(sqlStatement, args, callback, errorCallback);\n                }, errorCallback);\n              } else {\n                errorCallback(t, error);\n              }\n            }, errorCallback);\n          } else {\n            errorCallback(t, error);\n          }\n        }, errorCallback);\n      }\n\n      function getItem$1(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                var result = results.rows.length ? results.rows.item(0).value : null; // Check to see if this is serialized content we need to\n                // unpack.\n\n                if (result) {\n                  result = dbInfo.serializer.deserialize(result);\n                }\n\n                resolve(result);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function iterate$1(iterator, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                var rows = results.rows;\n                var length = rows.length;\n\n                for (var i = 0; i < length; i++) {\n                  var item = rows.item(i);\n                  var result = item.value; // Check to see if this is serialized content\n                  // we need to unpack.\n\n                  if (result) {\n                    result = dbInfo.serializer.deserialize(result);\n                  }\n\n                  result = iterator(result, item.key, i + 1); // void(0) prevents problems with redefinition\n                  // of `undefined`.\n\n                  if (result !== void 0) {\n                    resolve(result);\n                    return;\n                  }\n                }\n\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function _setItem(key, value, callback, retriesLeft) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n              value = null;\n            } // Save the original value to pass to the callback.\n\n\n            var originalValue = value;\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n              if (error) {\n                reject(error);\n              } else {\n                dbInfo.db.transaction(function (t) {\n                  tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                    resolve(originalValue);\n                  }, function (t, error) {\n                    reject(error);\n                  });\n                }, function (sqlError) {\n                  // The transaction failed; check\n                  // to see if it's a quota error.\n                  if (sqlError.code === sqlError.QUOTA_ERR) {\n                    // We reject the callback outright for now, but\n                    // it's worth trying to re-run the transaction.\n                    // Even if the user accepts the prompt to use\n                    // more storage on Safari, this error will\n                    // be called.\n                    //\n                    // Try to re-run the transaction.\n                    if (retriesLeft > 0) {\n                      resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                      return;\n                    }\n\n                    reject(sqlError);\n                  }\n                });\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function setItem$1(key, value, callback) {\n        return _setItem.apply(this, [key, value, callback, 1]);\n      }\n\n      function removeItem$1(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Deletes every item in the table.\n      // TODO: Find out if this resets the AUTO_INCREMENT number.\n\n\n      function clear$1(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Does a simple `COUNT(key)` to get the number of items stored in\n      // localForage.\n\n\n      function length$1(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              // Ahhh, SQL makes this one soooooo easy.\n              tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                var result = results.rows.item(0).c;\n                resolve(result);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Return the key located at key index X; essentially gets the key from a\n      // `WHERE id = ?`. This is the most efficient way I can think to implement\n      // this rarely-used (in my experience) part of the API, but it can seem\n      // inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n      // the ID of each key will change every time it's updated. Perhaps a stored\n      // procedure for the `setItem()` SQL would solve this problem?\n      // TODO: Don't change ID on `setItem()`.\n\n\n      function key$1(n, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                var result = results.rows.length ? results.rows.item(0).key : null;\n                resolve(result);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function keys$1(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                var keys = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                  keys.push(results.rows.item(i).key);\n                }\n\n                resolve(keys);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // https://www.w3.org/TR/webdatabase/#databases\n      // > There is no way to enumerate or delete the databases available for an origin from this API.\n\n\n      function getAllStoreNames(db) {\n        return new Promise$1(function (resolve, reject) {\n          db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n              var storeNames = [];\n\n              for (var i = 0; i < results.rows.length; i++) {\n                storeNames.push(results.rows.item(i).name);\n              }\n\n              resolve({\n                db: db,\n                storeNames: storeNames\n              });\n            }, function (t, error) {\n              reject(error);\n            });\n          }, function (sqlError) {\n            reject(sqlError);\n          });\n        });\n      }\n\n      function dropInstance$1(options, callback) {\n        callback = getCallback.apply(this, arguments);\n        var currentConfig = this.config();\n        options = typeof options !== 'function' && options || {};\n\n        if (!options.name) {\n          options.name = options.name || currentConfig.name;\n          options.storeName = options.storeName || currentConfig.storeName;\n        }\n\n        var self = this;\n        var promise;\n\n        if (!options.name) {\n          promise = Promise$1.reject('Invalid arguments');\n        } else {\n          promise = new Promise$1(function (resolve) {\n            var db;\n\n            if (options.name === currentConfig.name) {\n              // use the db reference of the current instance\n              db = self._dbInfo.db;\n            } else {\n              db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n              // drop all database tables\n              resolve(getAllStoreNames(db));\n            } else {\n              resolve({\n                db: db,\n                storeNames: [options.storeName]\n              });\n            }\n          }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n              operationInfo.db.transaction(function (t) {\n                function dropTable(storeName) {\n                  return new Promise$1(function (resolve, reject) {\n                    t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                      resolve();\n                    }, function (t, error) {\n                      reject(error);\n                    });\n                  });\n                }\n\n                var operations = [];\n\n                for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                  operations.push(dropTable(operationInfo.storeNames[i]));\n                }\n\n                Promise$1.all(operations).then(function () {\n                  resolve();\n                })[\"catch\"](function (e) {\n                  reject(e);\n                });\n              }, function (sqlError) {\n                reject(sqlError);\n              });\n            });\n          });\n        }\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      var webSQLStorage = {\n        _driver: 'webSQLStorage',\n        _initStorage: _initStorage$1,\n        _support: isWebSQLValid(),\n        iterate: iterate$1,\n        getItem: getItem$1,\n        setItem: setItem$1,\n        removeItem: removeItem$1,\n        clear: clear$1,\n        length: length$1,\n        key: key$1,\n        keys: keys$1,\n        dropInstance: dropInstance$1\n      };\n\n      function isLocalStorageValid() {\n        try {\n          return typeof localStorage !== 'undefined' && 'setItem' in localStorage && // in IE8 typeof localStorage.setItem === 'object'\n          !!localStorage.setItem;\n        } catch (e) {\n          return false;\n        }\n      }\n\n      function _getKeyPrefix(options, defaultConfig) {\n        var keyPrefix = options.name + '/';\n\n        if (options.storeName !== defaultConfig.storeName) {\n          keyPrefix += options.storeName + '/';\n        }\n\n        return keyPrefix;\n      } // Check if localStorage throws when saving an item\n\n\n      function checkIfLocalStorageThrows() {\n        var localStorageTestKey = '_localforage_support_test';\n\n        try {\n          localStorage.setItem(localStorageTestKey, true);\n          localStorage.removeItem(localStorageTestKey);\n          return false;\n        } catch (e) {\n          return true;\n        }\n      } // Check if localStorage is usable and allows to save an item\n      // This method checks if localStorage is usable in Safari Private Browsing\n      // mode, or in any other case where the available quota for localStorage\n      // is 0 and there wasn't any saved items yet.\n\n\n      function _isLocalStorageUsable() {\n        return !checkIfLocalStorageThrows() || localStorage.length > 0;\n      } // Config the localStorage backend, using options set in the config.\n\n\n      function _initStorage$2(options) {\n        var self = this;\n        var dbInfo = {};\n\n        if (options) {\n          for (var i in options) {\n            dbInfo[i] = options[i];\n          }\n        }\n\n        dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n        if (!_isLocalStorageUsable()) {\n          return Promise$1.reject();\n        }\n\n        self._dbInfo = dbInfo;\n        dbInfo.serializer = localforageSerializer;\n        return Promise$1.resolve();\n      } // Remove all keys from the datastore, effectively destroying all data in\n      // the app's key/value store!\n\n\n      function clear$2(callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var keyPrefix = self._dbInfo.keyPrefix;\n\n          for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n              localStorage.removeItem(key);\n            }\n          }\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Retrieve an item from the store. Unlike the original async_storage\n      // library in Gaia, we don't modify return values at all. If a key's value\n      // is `undefined`, we pass that value to the callback function.\n\n\n      function getItem$2(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var result = localStorage.getItem(dbInfo.keyPrefix + key); // If a result was found, parse it from the serialized\n          // string into a JS object. If result isn't truthy, the key\n          // is likely undefined and we'll pass it straight to the\n          // callback.\n\n          if (result) {\n            result = dbInfo.serializer.deserialize(result);\n          }\n\n          return result;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Iterate over all items in the store.\n\n\n      function iterate$2(iterator, callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var keyPrefix = dbInfo.keyPrefix;\n          var keyPrefixLength = keyPrefix.length;\n          var length = localStorage.length; // We use a dedicated iterator instead of the `i` variable below\n          // so other keys we fetch in localStorage aren't counted in\n          // the `iterationNumber` argument passed to the `iterate()`\n          // callback.\n          //\n          // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n\n          var iterationNumber = 1;\n\n          for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) !== 0) {\n              continue;\n            }\n\n            var value = localStorage.getItem(key); // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n\n            if (value) {\n              value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n              return value;\n            }\n          }\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Same as localStorage's key() method, except takes a callback.\n\n\n      function key$2(n, callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var result;\n\n          try {\n            result = localStorage.key(n);\n          } catch (error) {\n            result = null;\n          } // Remove the prefix from the key, if a key is found.\n\n\n          if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n          }\n\n          return result;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function keys$2(callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var length = localStorage.length;\n          var keys = [];\n\n          for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n              keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n          }\n\n          return keys;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Supply the number of keys in the datastore to the callback function.\n\n\n      function length$2(callback) {\n        var self = this;\n        var promise = self.keys().then(function (keys) {\n          return keys.length;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Remove an item from the store, nice and simple.\n\n\n      function removeItem$2(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          localStorage.removeItem(dbInfo.keyPrefix + key);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Set a key's value and run an optional callback once the value is set.\n      // Unlike Gaia's implementation, the callback function is passed the value,\n      // in case you want to operate on that value only after you're sure it\n      // saved, or something like that.\n\n\n      function setItem$2(key, value, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = self.ready().then(function () {\n          // Convert undefined values to null.\n          // https://github.com/mozilla/localForage/pull/42\n          if (value === undefined) {\n            value = null;\n          } // Save the original value to pass to the callback.\n\n\n          var originalValue = value;\n          return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n              if (error) {\n                reject(error);\n              } else {\n                try {\n                  localStorage.setItem(dbInfo.keyPrefix + key, value);\n                  resolve(originalValue);\n                } catch (e) {\n                  // localStorage capacity exceeded.\n                  // TODO: Make this a specific error/event.\n                  if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                    reject(e);\n                  }\n\n                  reject(e);\n                }\n              }\n            });\n          });\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function dropInstance$2(options, callback) {\n        callback = getCallback.apply(this, arguments);\n        options = typeof options !== 'function' && options || {};\n\n        if (!options.name) {\n          var currentConfig = this.config();\n          options.name = options.name || currentConfig.name;\n          options.storeName = options.storeName || currentConfig.storeName;\n        }\n\n        var self = this;\n        var promise;\n\n        if (!options.name) {\n          promise = Promise$1.reject('Invalid arguments');\n        } else {\n          promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n              resolve(options.name + '/');\n            } else {\n              resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n          }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n              var key = localStorage.key(i);\n\n              if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n              }\n            }\n          });\n        }\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      var localStorageWrapper = {\n        _driver: 'localStorageWrapper',\n        _initStorage: _initStorage$2,\n        _support: isLocalStorageValid(),\n        iterate: iterate$2,\n        getItem: getItem$2,\n        setItem: setItem$2,\n        removeItem: removeItem$2,\n        clear: clear$2,\n        length: length$2,\n        key: key$2,\n        keys: keys$2,\n        dropInstance: dropInstance$2\n      };\n\n      var sameValue = function sameValue(x, y) {\n        return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n      };\n\n      var includes = function includes(array, searchElement) {\n        var len = array.length;\n        var i = 0;\n\n        while (i < len) {\n          if (sameValue(array[i], searchElement)) {\n            return true;\n          }\n\n          i++;\n        }\n\n        return false;\n      };\n\n      var isArray = Array.isArray || function (arg) {\n        return Object.prototype.toString.call(arg) === '[object Array]';\n      }; // Drivers are stored here when `defineDriver()` is called.\n      // They are shared across all instances of localForage.\n\n\n      var DefinedDrivers = {};\n      var DriverSupport = {};\n      var DefaultDrivers = {\n        INDEXEDDB: asyncStorage,\n        WEBSQL: webSQLStorage,\n        LOCALSTORAGE: localStorageWrapper\n      };\n      var DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n      var OptionalDriverMethods = ['dropInstance'];\n      var LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n      var DefaultConfig = {\n        description: '',\n        driver: DefaultDriverOrder.slice(),\n        name: 'localforage',\n        // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n        // we can use without a prompt.\n        size: 4980736,\n        storeName: 'keyvaluepairs',\n        version: 1.0\n      };\n\n      function callWhenReady(localForageInstance, libraryMethod) {\n        localForageInstance[libraryMethod] = function () {\n          var _args = arguments;\n          return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n          });\n        };\n      }\n\n      function extend() {\n        for (var i = 1; i < arguments.length; i++) {\n          var arg = arguments[i];\n\n          if (arg) {\n            for (var _key in arg) {\n              if (arg.hasOwnProperty(_key)) {\n                if (isArray(arg[_key])) {\n                  arguments[0][_key] = arg[_key].slice();\n                } else {\n                  arguments[0][_key] = arg[_key];\n                }\n              }\n            }\n          }\n        }\n\n        return arguments[0];\n      }\n\n      var LocalForage = function () {\n        function LocalForage(options) {\n          _classCallCheck(this, LocalForage);\n\n          for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n              var driver = DefaultDrivers[driverTypeKey];\n              var driverName = driver._driver;\n              this[driverTypeKey] = driverName;\n\n              if (!DefinedDrivers[driverName]) {\n                // we don't need to wait for the promise,\n                // since the default drivers can be defined\n                // in a blocking manner\n                this.defineDriver(driver);\n              }\n            }\n          }\n\n          this._defaultConfig = extend({}, DefaultConfig);\n          this._config = extend({}, this._defaultConfig, options);\n          this._driverSet = null;\n          this._initDriver = null;\n          this._ready = false;\n          this._dbInfo = null;\n\n          this._wrapLibraryMethodsWithReady();\n\n          this.setDriver(this._config.driver)[\"catch\"](function () {});\n        } // Set any config values for localForage; can be called anytime before\n        // the first API call (e.g. `getItem`, `setItem`).\n        // We loop through options so we don't overwrite existing config\n        // values.\n\n\n        LocalForage.prototype.config = function config(options) {\n          // If the options argument is an object, we use it to set values.\n          // Otherwise, we return either a specified config value or all\n          // config values.\n          if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n              return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n              if (i === 'storeName') {\n                options[i] = options[i].replace(/\\W/g, '_');\n              }\n\n              if (i === 'version' && typeof options[i] !== 'number') {\n                return new Error('Database version must be a number.');\n              }\n\n              this._config[i] = options[i];\n            } // after all config options are set and\n            // the driver option is used, try setting it\n\n\n            if ('driver' in options && options.driver) {\n              return this.setDriver(this._config.driver);\n            }\n\n            return true;\n          } else if (typeof options === 'string') {\n            return this._config[options];\n          } else {\n            return this._config;\n          }\n        }; // Used to define a custom driver, shared across all instances of\n        // localForage.\n\n\n        LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n          var promise = new Promise$1(function (resolve, reject) {\n            try {\n              var driverName = driverObject._driver;\n              var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver'); // A driver name should be defined and not overlap with the\n              // library-defined, default drivers.\n\n              if (!driverObject._driver) {\n                reject(complianceError);\n                return;\n              }\n\n              var driverMethods = LibraryMethods.concat('_initStorage');\n\n              for (var i = 0, len = driverMethods.length; i < len; i++) {\n                var driverMethodName = driverMethods[i]; // when the property is there,\n                // it should be a method even when optional\n\n                var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n\n                if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                  reject(complianceError);\n                  return;\n                }\n              }\n\n              var configureMissingMethods = function configureMissingMethods() {\n                var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                  return function () {\n                    var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                    var promise = Promise$1.reject(error);\n                    executeCallback(promise, arguments[arguments.length - 1]);\n                    return promise;\n                  };\n                };\n\n                for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                  var optionalDriverMethod = OptionalDriverMethods[_i];\n\n                  if (!driverObject[optionalDriverMethod]) {\n                    driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                  }\n                }\n              };\n\n              configureMissingMethods();\n\n              var setDriverSupport = function setDriverSupport(support) {\n                if (DefinedDrivers[driverName]) {\n                  console.info('Redefining LocalForage driver: ' + driverName);\n                }\n\n                DefinedDrivers[driverName] = driverObject;\n                DriverSupport[driverName] = support; // don't use a then, so that we can define\n                // drivers that have simple _support methods\n                // in a blocking manner\n\n                resolve();\n              };\n\n              if ('_support' in driverObject) {\n                if (driverObject._support && typeof driverObject._support === 'function') {\n                  driverObject._support().then(setDriverSupport, reject);\n                } else {\n                  setDriverSupport(!!driverObject._support);\n                }\n              } else {\n                setDriverSupport(true);\n              }\n            } catch (e) {\n              reject(e);\n            }\n          });\n          executeTwoCallbacks(promise, callback, errorCallback);\n          return promise;\n        };\n\n        LocalForage.prototype.driver = function driver() {\n          return this._driver || null;\n        };\n\n        LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n          var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n          executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n          return getDriverPromise;\n        };\n\n        LocalForage.prototype.getSerializer = function getSerializer(callback) {\n          var serializerPromise = Promise$1.resolve(localforageSerializer);\n          executeTwoCallbacks(serializerPromise, callback);\n          return serializerPromise;\n        };\n\n        LocalForage.prototype.ready = function ready(callback) {\n          var self = this;\n\n          var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n              self._ready = self._initDriver();\n            }\n\n            return self._ready;\n          });\n\n          executeTwoCallbacks(promise, callback, callback);\n          return promise;\n        };\n\n        LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n          var self = this;\n\n          if (!isArray(drivers)) {\n            drivers = [drivers];\n          }\n\n          var supportedDrivers = this._getSupportedDrivers(drivers);\n\n          function setDriverToConfig() {\n            self._config.driver = self.driver();\n          }\n\n          function extendSelfWithDriver(driver) {\n            self._extend(driver);\n\n            setDriverToConfig();\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n          }\n\n          function initDriver(supportedDrivers) {\n            return function () {\n              var currentDriverIndex = 0;\n\n              function driverPromiseLoop() {\n                while (currentDriverIndex < supportedDrivers.length) {\n                  var driverName = supportedDrivers[currentDriverIndex];\n                  currentDriverIndex++;\n                  self._dbInfo = null;\n                  self._ready = null;\n                  return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                }\n\n                setDriverToConfig();\n                var error = new Error('No available storage method found.');\n                self._driverSet = Promise$1.reject(error);\n                return self._driverSet;\n              }\n\n              return driverPromiseLoop();\n            };\n          } // There might be a driver initialization in progress\n          // so wait for it to finish in order to avoid a possible\n          // race condition to set _dbInfo\n\n\n          var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n          }) : Promise$1.resolve();\n          this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n            return self.getDriver(driverName).then(function (driver) {\n              self._driver = driver._driver;\n              setDriverToConfig();\n\n              self._wrapLibraryMethodsWithReady();\n\n              self._initDriver = initDriver(supportedDrivers);\n            });\n          })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n          });\n          executeTwoCallbacks(this._driverSet, callback, errorCallback);\n          return this._driverSet;\n        };\n\n        LocalForage.prototype.supports = function supports(driverName) {\n          return !!DriverSupport[driverName];\n        };\n\n        LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n          extend(this, libraryMethodsAndProperties);\n        };\n\n        LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n          var supportedDrivers = [];\n\n          for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n\n            if (this.supports(driverName)) {\n              supportedDrivers.push(driverName);\n            }\n          }\n\n          return supportedDrivers;\n        };\n\n        LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n          // Add a stub for each driver API method that delays the call to the\n          // corresponding driver method until localForage is ready. These stubs\n          // will be replaced by the driver methods as soon as the driver is\n          // loaded, so there is no performance impact.\n          for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n          }\n        };\n\n        LocalForage.prototype.createInstance = function createInstance(options) {\n          return new LocalForage(options);\n        };\n\n        return LocalForage;\n      }(); // The actual localForage object that we expose as a module or via a\n      // global. It's extended by pulling in one of our other libraries.\n\n\n      var localforage_js = new LocalForage();\n      module.exports = localforage_js;\n    }, {\n      \"3\": 3\n    }]\n  }, {}, [4])(4);\n});","/**\n * Self-balancing binary search tree using the AVL implementation\n */\nvar BinarySearchTree = require('./bst'),\n    customUtils = require('./customUtils'),\n    util = require('util'),\n    _ = require('underscore');\n/**\n * Constructor\n * We can't use a direct pointer to the root node (as in the simple binary search tree)\n * as the root will change during tree rotations\n * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n * @param {Function} options.compareKeys Initialize this BST's compareKeys\n */\n\n\nfunction AVLTree(options) {\n  this.tree = new _AVLTree(options);\n}\n/**\n * Constructor of the internal AVLTree\n * @param {Object} options Optional\n * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n * @param {Key}      options.key Initialize this BST's key with key\n * @param {Value}    options.value Initialize this BST's data with [value]\n * @param {Function} options.compareKeys Initialize this BST's compareKeys\n */\n\n\nfunction _AVLTree(options) {\n  options = options || {};\n  this.left = null;\n  this.right = null;\n  this.parent = options.parent !== undefined ? options.parent : null;\n\n  if (options.hasOwnProperty('key')) {\n    this.key = options.key;\n  }\n\n  this.data = options.hasOwnProperty('value') ? [options.value] : [];\n  this.unique = options.unique || false;\n  this.compareKeys = options.compareKeys || customUtils.defaultCompareKeysFunction;\n  this.checkValueEquality = options.checkValueEquality || customUtils.defaultCheckValueEquality;\n}\n/**\n * Inherit basic functions from the basic binary search tree\n */\n\n\nutil.inherits(_AVLTree, BinarySearchTree);\n/**\n * Keep a pointer to the internal tree constructor for testing purposes\n */\n\nAVLTree._AVLTree = _AVLTree;\n/**\n * Check the recorded height is correct for every node\n * Throws if one height doesn't match\n */\n\n_AVLTree.prototype.checkHeightCorrect = function () {\n  var leftH, rightH;\n\n  if (!this.hasOwnProperty('key')) {\n    return;\n  } // Empty tree\n\n\n  if (this.left && this.left.height === undefined) {\n    throw new Error(\"Undefined height for node \" + this.left.key);\n  }\n\n  if (this.right && this.right.height === undefined) {\n    throw new Error(\"Undefined height for node \" + this.right.key);\n  }\n\n  if (this.height === undefined) {\n    throw new Error(\"Undefined height for node \" + this.key);\n  }\n\n  leftH = this.left ? this.left.height : 0;\n  rightH = this.right ? this.right.height : 0;\n\n  if (this.height !== 1 + Math.max(leftH, rightH)) {\n    throw new Error(\"Height constraint failed for node \" + this.key);\n  }\n\n  if (this.left) {\n    this.left.checkHeightCorrect();\n  }\n\n  if (this.right) {\n    this.right.checkHeightCorrect();\n  }\n};\n/**\n * Return the balance factor\n */\n\n\n_AVLTree.prototype.balanceFactor = function () {\n  var leftH = this.left ? this.left.height : 0,\n      rightH = this.right ? this.right.height : 0;\n  return leftH - rightH;\n};\n/**\n * Check that the balance factors are all between -1 and 1\n */\n\n\n_AVLTree.prototype.checkBalanceFactors = function () {\n  if (Math.abs(this.balanceFactor()) > 1) {\n    throw new Error('Tree is unbalanced at node ' + this.key);\n  }\n\n  if (this.left) {\n    this.left.checkBalanceFactors();\n  }\n\n  if (this.right) {\n    this.right.checkBalanceFactors();\n  }\n};\n/**\n * When checking if the BST conditions are met, also check that the heights are correct\n * and the tree is balanced\n */\n\n\n_AVLTree.prototype.checkIsAVLT = function () {\n  _AVLTree.super_.prototype.checkIsBST.call(this);\n\n  this.checkHeightCorrect();\n  this.checkBalanceFactors();\n};\n\nAVLTree.prototype.checkIsAVLT = function () {\n  this.tree.checkIsAVLT();\n};\n/**\n * Perform a right rotation of the tree if possible\n * and return the root of the resulting tree\n * The resulting tree's nodes' heights are also updated\n */\n\n\n_AVLTree.prototype.rightRotation = function () {\n  var q = this,\n      p = this.left,\n      b,\n      ah,\n      bh,\n      ch;\n\n  if (!p) {\n    return this;\n  } // No change\n\n\n  b = p.right; // Alter tree structure\n\n  if (q.parent) {\n    p.parent = q.parent;\n\n    if (q.parent.left === q) {\n      q.parent.left = p;\n    } else {\n      q.parent.right = p;\n    }\n  } else {\n    p.parent = null;\n  }\n\n  p.right = q;\n  q.parent = p;\n  q.left = b;\n\n  if (b) {\n    b.parent = q;\n  } // Update heights\n\n\n  ah = p.left ? p.left.height : 0;\n  bh = b ? b.height : 0;\n  ch = q.right ? q.right.height : 0;\n  q.height = Math.max(bh, ch) + 1;\n  p.height = Math.max(ah, q.height) + 1;\n  return p;\n};\n/**\n * Perform a left rotation of the tree if possible\n * and return the root of the resulting tree\n * The resulting tree's nodes' heights are also updated\n */\n\n\n_AVLTree.prototype.leftRotation = function () {\n  var p = this,\n      q = this.right,\n      b,\n      ah,\n      bh,\n      ch;\n\n  if (!q) {\n    return this;\n  } // No change\n\n\n  b = q.left; // Alter tree structure\n\n  if (p.parent) {\n    q.parent = p.parent;\n\n    if (p.parent.left === p) {\n      p.parent.left = q;\n    } else {\n      p.parent.right = q;\n    }\n  } else {\n    q.parent = null;\n  }\n\n  q.left = p;\n  p.parent = q;\n  p.right = b;\n\n  if (b) {\n    b.parent = p;\n  } // Update heights\n\n\n  ah = p.left ? p.left.height : 0;\n  bh = b ? b.height : 0;\n  ch = q.right ? q.right.height : 0;\n  p.height = Math.max(ah, bh) + 1;\n  q.height = Math.max(ch, p.height) + 1;\n  return q;\n};\n/**\n * Modify the tree if its right subtree is too small compared to the left\n * Return the new root if any\n */\n\n\n_AVLTree.prototype.rightTooSmall = function () {\n  if (this.balanceFactor() <= 1) {\n    return this;\n  } // Right is not too small, don't change\n\n\n  if (this.left.balanceFactor() < 0) {\n    this.left.leftRotation();\n  }\n\n  return this.rightRotation();\n};\n/**\n * Modify the tree if its left subtree is too small compared to the right\n * Return the new root if any\n */\n\n\n_AVLTree.prototype.leftTooSmall = function () {\n  if (this.balanceFactor() >= -1) {\n    return this;\n  } // Left is not too small, don't change\n\n\n  if (this.right.balanceFactor() > 0) {\n    this.right.rightRotation();\n  }\n\n  return this.leftRotation();\n};\n/**\n * Rebalance the tree along the given path. The path is given reversed (as he was calculated\n * in the insert and delete functions).\n * Returns the new root of the tree\n * Of course, the first element of the path must be the root of the tree\n */\n\n\n_AVLTree.prototype.rebalanceAlongPath = function (path) {\n  var newRoot = this,\n      rotated,\n      i;\n\n  if (!this.hasOwnProperty('key')) {\n    delete this.height;\n    return this;\n  } // Empty tree\n  // Rebalance the tree and update all heights\n\n\n  for (i = path.length - 1; i >= 0; i -= 1) {\n    path[i].height = 1 + Math.max(path[i].left ? path[i].left.height : 0, path[i].right ? path[i].right.height : 0);\n\n    if (path[i].balanceFactor() > 1) {\n      rotated = path[i].rightTooSmall();\n\n      if (i === 0) {\n        newRoot = rotated;\n      }\n    }\n\n    if (path[i].balanceFactor() < -1) {\n      rotated = path[i].leftTooSmall();\n\n      if (i === 0) {\n        newRoot = rotated;\n      }\n    }\n  }\n\n  return newRoot;\n};\n/**\n * Insert a key, value pair in the tree while maintaining the AVL tree height constraint\n * Return a pointer to the root node, which may have changed\n */\n\n\n_AVLTree.prototype.insert = function (key, value) {\n  var insertPath = [],\n      currentNode = this; // Empty tree, insert as root\n\n  if (!this.hasOwnProperty('key')) {\n    this.key = key;\n    this.data.push(value);\n    this.height = 1;\n    return this;\n  } // Insert new leaf at the right place\n\n\n  while (true) {\n    // Same key: no change in the tree structure\n    if (currentNode.compareKeys(currentNode.key, key) === 0) {\n      if (currentNode.unique) {\n        var err = new Error(\"Can't insert key \" + key + \", it violates the unique constraint\");\n        err.key = key;\n        err.errorType = 'uniqueViolated';\n        throw err;\n      } else {\n        currentNode.data.push(value);\n      }\n\n      return this;\n    }\n\n    insertPath.push(currentNode);\n\n    if (currentNode.compareKeys(key, currentNode.key) < 0) {\n      if (!currentNode.left) {\n        insertPath.push(currentNode.createLeftChild({\n          key: key,\n          value: value\n        }));\n        break;\n      } else {\n        currentNode = currentNode.left;\n      }\n    } else {\n      if (!currentNode.right) {\n        insertPath.push(currentNode.createRightChild({\n          key: key,\n          value: value\n        }));\n        break;\n      } else {\n        currentNode = currentNode.right;\n      }\n    }\n  }\n\n  return this.rebalanceAlongPath(insertPath);\n}; // Insert in the internal tree, update the pointer to the root if needed\n\n\nAVLTree.prototype.insert = function (key, value) {\n  var newTree = this.tree.insert(key, value); // If newTree is undefined, that means its structure was not modified\n\n  if (newTree) {\n    this.tree = newTree;\n  }\n};\n/**\n * Delete a key or just a value and return the new root of the tree\n * @param {Key} key\n * @param {Value} value Optional. If not set, the whole key is deleted. If set, only this value is deleted\n */\n\n\n_AVLTree.prototype.delete = function (key, value) {\n  var newData = [],\n      replaceWith,\n      self = this,\n      currentNode = this,\n      deletePath = [];\n\n  if (!this.hasOwnProperty('key')) {\n    return this;\n  } // Empty tree\n  // Either no match is found and the function will return from within the loop\n  // Or a match is found and deletePath will contain the path from the root to the node to delete after the loop\n\n\n  while (true) {\n    if (currentNode.compareKeys(key, currentNode.key) === 0) {\n      break;\n    }\n\n    deletePath.push(currentNode);\n\n    if (currentNode.compareKeys(key, currentNode.key) < 0) {\n      if (currentNode.left) {\n        currentNode = currentNode.left;\n      } else {\n        return this; // Key not found, no modification\n      }\n    } else {\n      // currentNode.compareKeys(key, currentNode.key) is > 0\n      if (currentNode.right) {\n        currentNode = currentNode.right;\n      } else {\n        return this; // Key not found, no modification\n      }\n    }\n  } // Delete only a value (no tree modification)\n\n\n  if (currentNode.data.length > 1 && value) {\n    currentNode.data.forEach(function (d) {\n      if (!currentNode.checkValueEquality(d, value)) {\n        newData.push(d);\n      }\n    });\n    currentNode.data = newData;\n    return this;\n  } // Delete a whole node\n  // Leaf\n\n\n  if (!currentNode.left && !currentNode.right) {\n    if (currentNode === this) {\n      // This leaf is also the root\n      delete currentNode.key;\n      currentNode.data = [];\n      delete currentNode.height;\n      return this;\n    } else {\n      if (currentNode.parent.left === currentNode) {\n        currentNode.parent.left = null;\n      } else {\n        currentNode.parent.right = null;\n      }\n\n      return this.rebalanceAlongPath(deletePath);\n    }\n  } // Node with only one child\n\n\n  if (!currentNode.left || !currentNode.right) {\n    replaceWith = currentNode.left ? currentNode.left : currentNode.right;\n\n    if (currentNode === this) {\n      // This node is also the root\n      replaceWith.parent = null;\n      return replaceWith; // height of replaceWith is necessarily 1 because the tree was balanced before deletion\n    } else {\n      if (currentNode.parent.left === currentNode) {\n        currentNode.parent.left = replaceWith;\n        replaceWith.parent = currentNode.parent;\n      } else {\n        currentNode.parent.right = replaceWith;\n        replaceWith.parent = currentNode.parent;\n      }\n\n      return this.rebalanceAlongPath(deletePath);\n    }\n  } // Node with two children\n  // Use the in-order predecessor (no need to randomize since we actively rebalance)\n\n\n  deletePath.push(currentNode);\n  replaceWith = currentNode.left; // Special case: the in-order predecessor is right below the node to delete\n\n  if (!replaceWith.right) {\n    currentNode.key = replaceWith.key;\n    currentNode.data = replaceWith.data;\n    currentNode.left = replaceWith.left;\n\n    if (replaceWith.left) {\n      replaceWith.left.parent = currentNode;\n    }\n\n    return this.rebalanceAlongPath(deletePath);\n  } // After this loop, replaceWith is the right-most leaf in the left subtree\n  // and deletePath the path from the root (inclusive) to replaceWith (exclusive)\n\n\n  while (true) {\n    if (replaceWith.right) {\n      deletePath.push(replaceWith);\n      replaceWith = replaceWith.right;\n    } else {\n      break;\n    }\n  }\n\n  currentNode.key = replaceWith.key;\n  currentNode.data = replaceWith.data;\n  replaceWith.parent.right = replaceWith.left;\n\n  if (replaceWith.left) {\n    replaceWith.left.parent = replaceWith.parent;\n  }\n\n  return this.rebalanceAlongPath(deletePath);\n}; // Delete a value\n\n\nAVLTree.prototype.delete = function (key, value) {\n  var newTree = this.tree.delete(key, value); // If newTree is undefined, that means its structure was not modified\n\n  if (newTree) {\n    this.tree = newTree;\n  }\n};\n/**\n * Other functions we want to use on an AVLTree as if it were the internal _AVLTree\n */\n\n\n['getNumberOfKeys', 'search', 'betweenBounds', 'prettyPrint', 'executeOnEveryNode'].forEach(function (fn) {\n  AVLTree.prototype[fn] = function () {\n    return this.tree[fn].apply(this.tree, arguments);\n  };\n}); // Interface\n\nmodule.exports = AVLTree;","var BinarySearchTree = require('binary-search-tree').AVLTree,\n    model = require('./model'),\n    _ = require('underscore'),\n    util = require('util');\n/**\n * Two indexed pointers are equal iif they point to the same place\n */\n\n\nfunction checkValueEquality(a, b) {\n  return a === b;\n}\n/**\n * Type-aware projection\n */\n\n\nfunction projectForUnique(elt) {\n  if (elt === null) {\n    return '$null';\n  }\n\n  if (typeof elt === 'string') {\n    return '$string' + elt;\n  }\n\n  if (typeof elt === 'boolean') {\n    return '$boolean' + elt;\n  }\n\n  if (typeof elt === 'number') {\n    return '$number' + elt;\n  }\n\n  if (util.isArray(elt)) {\n    return '$date' + elt.getTime();\n  }\n\n  return elt; // Arrays and objects, will check for pointer equality\n}\n/**\n * Create a new index\n * All methods on an index guarantee that either the whole operation was successful and the index changed\n * or the operation was unsuccessful and an error is thrown while the index is unchanged\n * @param {String} options.fieldName On which field should the index apply (can use dot notation to index on sub fields)\n * @param {Boolean} options.unique Optional, enforce a unique constraint (default: false)\n * @param {Boolean} options.sparse Optional, allow a sparse index (we can have documents for which fieldName is undefined) (default: false)\n */\n\n\nfunction Index(options) {\n  this.fieldName = options.fieldName;\n  this.unique = options.unique || false;\n  this.sparse = options.sparse || false;\n  this.treeOptions = {\n    unique: this.unique,\n    compareKeys: model.compareThings,\n    checkValueEquality: checkValueEquality\n  };\n  this.reset(); // No data in the beginning\n}\n/**\n * Reset an index\n * @param {Document or Array of documents} newData Optional, data to initialize the index with\n *                                                 If an error is thrown during insertion, the index is not modified\n */\n\n\nIndex.prototype.reset = function (newData) {\n  this.tree = new BinarySearchTree(this.treeOptions);\n\n  if (newData) {\n    this.insert(newData);\n  }\n};\n/**\n * Insert a new document in the index\n * If an array is passed, we insert all its elements (if one insertion fails the index is not modified)\n * O(log(n))\n */\n\n\nIndex.prototype.insert = function (doc) {\n  var key,\n      self = this,\n      keys,\n      i,\n      failingI,\n      error;\n\n  if (util.isArray(doc)) {\n    this.insertMultipleDocs(doc);\n    return;\n  }\n\n  key = model.getDotValue(doc, this.fieldName); // We don't index documents that don't contain the field if the index is sparse\n\n  if (key === undefined && this.sparse) {\n    return;\n  }\n\n  if (!util.isArray(key)) {\n    this.tree.insert(key, doc);\n  } else {\n    // If an insert fails due to a unique constraint, roll back all inserts before it\n    keys = _.uniq(key, projectForUnique);\n\n    for (i = 0; i < keys.length; i += 1) {\n      try {\n        this.tree.insert(keys[i], doc);\n      } catch (e) {\n        error = e;\n        failingI = i;\n        break;\n      }\n    }\n\n    if (error) {\n      for (i = 0; i < failingI; i += 1) {\n        this.tree.delete(keys[i], doc);\n      }\n\n      throw error;\n    }\n  }\n};\n/**\n * Insert an array of documents in the index\n * If a constraint is violated, the changes should be rolled back and an error thrown\n *\n * @API private\n */\n\n\nIndex.prototype.insertMultipleDocs = function (docs) {\n  var i, error, failingI;\n\n  for (i = 0; i < docs.length; i += 1) {\n    try {\n      this.insert(docs[i]);\n    } catch (e) {\n      error = e;\n      failingI = i;\n      break;\n    }\n  }\n\n  if (error) {\n    for (i = 0; i < failingI; i += 1) {\n      this.remove(docs[i]);\n    }\n\n    throw error;\n  }\n};\n/**\n * Remove a document from the index\n * If an array is passed, we remove all its elements\n * The remove operation is safe with regards to the 'unique' constraint\n * O(log(n))\n */\n\n\nIndex.prototype.remove = function (doc) {\n  var key,\n      self = this;\n\n  if (util.isArray(doc)) {\n    doc.forEach(function (d) {\n      self.remove(d);\n    });\n    return;\n  }\n\n  key = model.getDotValue(doc, this.fieldName);\n\n  if (key === undefined && this.sparse) {\n    return;\n  }\n\n  if (!util.isArray(key)) {\n    this.tree.delete(key, doc);\n  } else {\n    _.uniq(key, projectForUnique).forEach(function (_key) {\n      self.tree.delete(_key, doc);\n    });\n  }\n};\n/**\n * Update a document in the index\n * If a constraint is violated, changes are rolled back and an error thrown\n * Naive implementation, still in O(log(n))\n */\n\n\nIndex.prototype.update = function (oldDoc, newDoc) {\n  if (util.isArray(oldDoc)) {\n    this.updateMultipleDocs(oldDoc);\n    return;\n  }\n\n  this.remove(oldDoc);\n\n  try {\n    this.insert(newDoc);\n  } catch (e) {\n    this.insert(oldDoc);\n    throw e;\n  }\n};\n/**\n * Update multiple documents in the index\n * If a constraint is violated, the changes need to be rolled back\n * and an error thrown\n * @param {Array of oldDoc, newDoc pairs} pairs\n *\n * @API private\n */\n\n\nIndex.prototype.updateMultipleDocs = function (pairs) {\n  var i, failingI, error;\n\n  for (i = 0; i < pairs.length; i += 1) {\n    this.remove(pairs[i].oldDoc);\n  }\n\n  for (i = 0; i < pairs.length; i += 1) {\n    try {\n      this.insert(pairs[i].newDoc);\n    } catch (e) {\n      error = e;\n      failingI = i;\n      break;\n    }\n  } // If an error was raised, roll back changes in the inverse order\n\n\n  if (error) {\n    for (i = 0; i < failingI; i += 1) {\n      this.remove(pairs[i].newDoc);\n    }\n\n    for (i = 0; i < pairs.length; i += 1) {\n      this.insert(pairs[i].oldDoc);\n    }\n\n    throw error;\n  }\n};\n/**\n * Revert an update\n */\n\n\nIndex.prototype.revertUpdate = function (oldDoc, newDoc) {\n  var revert = [];\n\n  if (!util.isArray(oldDoc)) {\n    this.update(newDoc, oldDoc);\n  } else {\n    oldDoc.forEach(function (pair) {\n      revert.push({\n        oldDoc: pair.newDoc,\n        newDoc: pair.oldDoc\n      });\n    });\n    this.update(revert);\n  }\n};\n/**\n * Get all documents in index whose key match value (if it is a Thing) or one of the elements of value (if it is an array of Things)\n * @param {Thing} value Value to match the key against\n * @return {Array of documents}\n */\n\n\nIndex.prototype.getMatching = function (value) {\n  var self = this;\n\n  if (!util.isArray(value)) {\n    return self.tree.search(value);\n  } else {\n    var _res = {},\n        res = [];\n    value.forEach(function (v) {\n      self.getMatching(v).forEach(function (doc) {\n        _res[doc._id] = doc;\n      });\n    });\n    Object.keys(_res).forEach(function (_id) {\n      res.push(_res[_id]);\n    });\n    return res;\n  }\n};\n/**\n * Get all documents in index whose key is between bounds are they are defined by query\n * Documents are sorted by key\n * @param {Query} query\n * @return {Array of documents}\n */\n\n\nIndex.prototype.getBetweenBounds = function (query) {\n  return this.tree.betweenBounds(query);\n};\n/**\n * Get all elements in the index\n * @return {Array of documents}\n */\n\n\nIndex.prototype.getAll = function () {\n  var res = [];\n  this.tree.executeOnEveryNode(function (node) {\n    var i;\n\n    for (i = 0; i < node.data.length; i += 1) {\n      res.push(node.data[i]);\n    }\n  });\n  return res;\n}; // Interface\n\n\nmodule.exports = Index;","module.exports.BinarySearchTree = require('./lib/bst');\nmodule.exports.AVLTree = require('./lib/avltree');","import Datesotre from 'nedb';\n\nclass DbInstance {\n  constructor(props) {\n    this.db = new Datesotre(props);\n  }\n  insert(data) {\n    return new Promise((resolve, reject) => {\n      this.db.insert(data, function(err, newDoc) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(newDoc);\n        }\n      })\n    })\n  }\n  update(search, data) {\n    return new Promise((resolve, reject) => {\n      this.db.update(search, {$set: data}, {}, function(err, doc) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(doc);\n        }\n      })\n    })\n  }\n  remove(target, multi = false) {\n    return new Promise((resolve, reject) => {\n      this.db.remove(target, { multi: multi }, function(err, doc) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(doc);\n        }\n      })\n    })\n  }\n  find(search) {\n    return new Promise((resolve, reject) => {\n      this.db.find(search, function(err, doc) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(doc);\n        }\n      })\n    })\n  }\n}\n\nclass Nedb {\n  constructor() {\n    this._dbMap = new Map();\n  }\n  createDb(props) {\n    const db = new DbInstance(props);\n    this._dbMap.set(props.filename, db);\n    return db;\n  }\n  get(filename) {\n    return this._dbMap.get(filename);\n  }\n}\n\n\n\nexport default new Nedb();"],"sourceRoot":""}